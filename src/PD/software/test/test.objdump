
test.elf:     file format elf32-littlenios2
test.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000001c0

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0000fbc0 memsz 0x0000fbc0 flags r-x
    LOAD off    0x00010be0 vaddr 0x0000fbe0 paddr 0x000116cc align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x000131b8 vaddr 0x000131b8 paddr 0x000131b8 align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f708  000001c0  000001c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000318  0000f8c8  0000f8c8  000108c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0000fbe0  000116cc  00010be0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  000131b8  000131b8  000131b8  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00013314  00013314  000126cc  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  000126cc  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e70  00000000  00000000  000126f0  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00023019  00000000  00000000  00013560  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008d59  00000000  00000000  00036579  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b351  00000000  00000000  0003f2d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001fd4  00000000  00000000  0004a624  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000033c9  00000000  00000000  0004c5f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001786c  00000000  00000000  0004f9c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  00067230  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018b8  00000000  00000000  00067240  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006ba05  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006ba08  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006ba14  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006ba15  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006ba16  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006ba21  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006ba2c  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000004  00000000  00000000  0006ba37  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000003d  00000000  00000000  0006ba3b  2**0
                  CONTENTS, READONLY
 26 .sopcinfo     00031fcf  00000000  00000000  0006ba78  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
000001c0 l    d  .text	00000000 .text
0000f8c8 l    d  .rodata	00000000 .rodata
0000fbe0 l    d  .rwdata	00000000 .rwdata
000131b8 l    d  .bss	00000000 .bss
00013314 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../test_bsp//obj/HAL/src/crt0.o
000001f8 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00000094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000f926 l     O .rodata	00000010 zeroes.4404
00002850 l     F .text	000000bc __sbprintf
0000f936 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00002a60 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000045b8 l     F .text	00000008 __fp_unlock
000045cc l     F .text	0000019c __sinit.part.1
00004768 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0000fbe0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00010024 l     O .rwdata	00000020 lc_ctype_charset
00010004 l     O .rwdata	00000020 lc_message_charset
00010044 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0000f968 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00007c3c l     F .text	000000fc __sprint_r.part.0
0000fa8c l     O .rodata	00000010 zeroes.4349
00009278 l     F .text	000000bc __sbprintf
0000fa9c l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000d2c0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000d3d4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000d400 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0000d4f4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d5dc l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d6c8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000d8a4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000116bc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000db18 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000dc54 l     F .text	00000034 alt_dev_reg
0001062c l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000df3c l     F .text	0000020c altera_avalon_jtag_uart_irq
0000e148 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000e8cc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000ed2c l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0000ee8c l     F .text	0000003c alt_get_errno
0000eec8 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00007280 g     F .text	00000074 _mprec_log10
0000736c g     F .text	0000008c __any_on
0000982c g     F .text	00000054 _isatty_r
0000f974 g     O .rodata	00000028 __mprec_tinytens
0000d7e0 g     F .text	0000007c alt_main
000003ec g     F .text	000000c0 _puts_r
00013214 g     O .bss	00000100 alt_irq
00009880 g     F .text	00000060 _lseek_r
000116cc g       *ABS*	00000000 __flash_rwdata_start
0000bc98 g     F .text	00000088 .hidden __eqdf2
00013314 g       *ABS*	00000000 __alt_heap_start
000003b0 g     F .text	0000003c printf
00009a98 g     F .text	0000009c _wcrtomb_r
00007afc g     F .text	0000005c __sseek
00004918 g     F .text	00000010 __sinit
00009940 g     F .text	00000140 __swbuf_r
000053ec g     F .text	0000007c _setlocale_r
00004770 g     F .text	00000078 __sfmoreglue
0000d880 g     F .text	00000024 __malloc_unlock
000060bc g     F .text	0000015c memmove
00004900 g     F .text	00000018 _cleanup
00006340 g     F .text	000000a8 _Balloc
0000bd20 g     F .text	000000dc .hidden __gtdf2
00000000 g     F .entry	0000000c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
000097d0 g     F .text	0000005c _fstat_r
000131d0 g     O .bss	00000004 errno
00007a78 g     F .text	00000008 __seofread
000131d8 g     O .bss	00000004 alt_argv
0001968c g       *ABS*	00000000 _gp
000104ac g     O .rwdata	00000180 alt_fd_list
0000f2d8 g     F .text	00000090 alt_find_dev
00005f74 g     F .text	00000148 memcpy
000045c0 g     F .text	0000000c _cleanup_r
0000d0d8 g     F .text	000000dc .hidden __floatsidf
0000ee10 g     F .text	0000007c alt_io_redirect
0000bdfc g     F .text	000000f4 .hidden __ltdf2
0000f8c8 g       *ABS*	00000000 __DTOR_END__
000004ac g     F .text	00000014 puts
0000795c g     F .text	00000074 __fpclassifyd
000071dc g     F .text	000000a4 __ratio
0000925c g     F .text	0000001c __vfiprintf_internal
0000e340 g     F .text	0000021c altera_avalon_jtag_uart_read
00000380 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0000a938 g     F .text	00000064 .hidden __udivsi3
0000d530 g     F .text	000000ac isatty
0000f9c4 g     O .rodata	000000c8 __mprec_tens
00005468 g     F .text	0000000c __locale_charset
000131cc g     O .bss	00000004 __malloc_top_pad
00011694 g     O .rwdata	00000004 __mb_cur_max
00005498 g     F .text	0000000c _localeconv_r
00006774 g     F .text	0000003c __i2b
00004d9c g     F .text	000004c8 __sfvwrite_r
000079d0 g     F .text	00000054 _sbrk_r
000098e0 g     F .text	00000060 _read_r
000116b4 g     O .rwdata	00000004 alt_max_fd
000094c4 g     F .text	000000f0 _fclose_r
00004588 g     F .text	00000030 fflush
000131c8 g     O .bss	00000004 __malloc_max_sbrked_mem
0000aa1c g     F .text	000008ac .hidden __adddf3
00006f84 g     F .text	0000010c __b2d
0000a27c g     F .text	000005c4 .hidden __umoddi3
0000d704 g     F .text	000000dc lseek
0001168c g     O .rwdata	00000004 _global_impure_ptr
000073f8 g     F .text	00000564 _realloc_r
00013314 g       *ABS*	00000000 __bss_end
0000ec3c g     F .text	000000f0 alt_iic_isr_register
0000f1ac g     F .text	00000108 alt_tick
00009c80 g     F .text	000005fc .hidden __udivdi3
0000972c g     F .text	00000024 _fputwc_r
0000f99c g     O .rodata	00000028 __mprec_bigtens
00006558 g     F .text	00000104 __s2b
0000d1b4 g     F .text	000000a8 .hidden __floatunsidf
00006cc4 g     F .text	00000060 __mcmp
00004938 g     F .text	00000018 __fp_lock_all
0000ebf0 g     F .text	0000004c alt_ic_irq_enabled
0000f110 g     F .text	0000009c alt_alarm_stop
000131e0 g     O .bss	00000004 alt_irq_active
000000ec g     F .exceptions	000000d4 alt_irq_handler
00010484 g     O .rwdata	00000028 alt_dev_null
0000e8ac g     F .text	00000020 alt_dcache_flush_all
0000665c g     F .text	00000068 __hi0bits
0000d058 g     F .text	00000080 .hidden __fixdfsi
000116cc g       *ABS*	00000000 __ram_rwdata_end
000116ac g     O .rwdata	00000008 alt_dev_list
0000db54 g     F .text	00000100 write
0000fbe0 g       *ABS*	00000000 __ram_rodata_end
0000d43c g     F .text	000000b8 fstat
0000bdfc g     F .text	000000f4 .hidden __ledf2
00006a3c g     F .text	00000140 __pow5mult
00007d50 g     F .text	0000150c ___vfiprintf_internal_r
000131c0 g     O .bss	00000004 __nlocale_changed
0000a99c g     F .text	00000058 .hidden __umodsi3
00013314 g       *ABS*	00000000 end
0000de7c g     F .text	000000c0 altera_avalon_jtag_uart_init
0000f8c8 g       *ABS*	00000000 __CTOR_LIST__
00020000 g       *ABS*	00000000 __alt_stack_pointer
0000d25c g     F .text	00000064 .hidden __clzsi2
0000e55c g     F .text	00000224 altera_avalon_jtag_uart_write
00004928 g     F .text	00000004 __sfp_lock_acquire
00005e90 g     F .text	000000e4 memchr
00000558 g     F .text	000022dc ___vfprintf_internal_r
00004a8c g     F .text	00000310 _free_r
00005474 g     F .text	00000010 __locale_mb_cur_max
0000f714 g     F .text	00000180 __call_exitprocs
000131bc g     O .bss	00000004 __mlocale_changed
00011698 g     O .rwdata	00000004 __malloc_sbrk_base
000001c0 g     F .text	0000003c _start
000131e4 g     O .bss	00000004 _alt_tick_rate
00006b7c g     F .text	00000148 __lshift
000131e8 g     O .bss	00000004 _alt_nticks
0000d8e0 g     F .text	00000104 read
0000dcc0 g     F .text	00000058 alt_sys_init
0000f5fc g     F .text	00000118 __register_exitproc
000067b0 g     F .text	0000028c __multiply
0000e1e8 g     F .text	00000068 altera_avalon_jtag_uart_close
0000a9f4 g     F .text	00000028 .hidden __mulsi3
0000fbe0 g       *ABS*	00000000 __ram_rwdata_start
0000f8c8 g       *ABS*	00000000 __ram_rodata_start
000131ec g     O .bss	00000028 __malloc_current_mallinfo
00007090 g     F .text	0000014c __d2b
0000dd18 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000f470 g     F .text	000000c4 alt_get_fd
00009394 g     F .text	00000054 _close_r
0000f580 g     F .text	0000007c memcmp
0000ddd8 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00013314 g       *ABS*	00000000 __alt_stack_base
0000de28 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0000290c g     F .text	00000154 __swsetup_r
0000b2c8 g     F .text	000009d0 .hidden __divdf3
000047e8 g     F .text	00000118 __sfp
000072f4 g     F .text	00000078 __copybits
0001007c g     O .rwdata	00000408 __malloc_av_
00004934 g     F .text	00000004 __sinit_lock_release
0000bef0 g     F .text	0000086c .hidden __muldf3
00007a24 g     F .text	00000054 __sread
0000f368 g     F .text	00000108 alt_find_file
0000e908 g     F .text	000000a4 alt_dev_llist_insert
0000d85c g     F .text	00000024 __malloc_lock
0000da68 g     F .text	000000b0 sbrk
0000452c g     F .text	0000005c _fflush_r
000093e8 g     F .text	000000dc _calloc_r
000131b8 g       *ABS*	00000000 __bss_start
00006218 g     F .text	00000128 memset
000001fc g     F .text	00000184 main
000131dc g     O .bss	00000004 alt_envp
000131c4 g     O .bss	00000004 __malloc_max_total_mem
0000dd78 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00009a80 g     F .text	00000018 __swbuf
00007b58 g     F .text	00000008 __sclose
00020000 g       *ABS*	00000000 __alt_heap_limit
000095b4 g     F .text	00000014 fclose
00002c88 g     F .text	00001688 _dtoa_r
00005684 g     F .text	0000080c _malloc_r
00009bf4 g     F .text	00000030 __ascii_wctomb
000116b8 g     O .rwdata	00000004 alt_errno
00005264 g     F .text	000000c4 _fwalk
0000a840 g     F .text	00000084 .hidden __divsi3
00004968 g     F .text	00000124 _malloc_trim_r
0000f8c8 g       *ABS*	00000000 __CTOR_END__
00007b60 g     F .text	000000dc strcmp
0000f8c8 g       *ABS*	00000000 __flash_rodata_start
0000f8c8 g       *ABS*	00000000 __DTOR_LIST__
0000bc98 g     F .text	00000088 .hidden __nedf2
0000dc88 g     F .text	00000038 alt_irq_init
0000d9e4 g     F .text	00000084 alt_release_fd
0000faac g     O .rodata	00000100 .hidden __clz_tab
000131b8 g     O .bss	00000004 _PathLocale
0000f534 g     F .text	00000014 atexit
00009334 g     F .text	00000060 _write_r
000054a4 g     F .text	00000018 setlocale
00011690 g     O .rwdata	00000004 _impure_ptr
000131d4 g     O .bss	00000004 alt_argc
00004310 g     F .text	0000021c __sflush_r
0000ea0c g     F .text	00000060 _do_dtors
00005490 g     F .text	00000008 __locale_cjk_lang
00000020 g       .exceptions	00000000 alt_irq_entry
00006f20 g     F .text	00000064 __ulp
00004950 g     F .text	00000018 __fp_unlock_all
000116a4 g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
000054bc g     F .text	0000000c localeconv
0000ea8c g     F .text	00000050 alt_ic_isr_register
000116cc g       *ABS*	00000000 _edata
00013314 g       *ABS*	00000000 _end
000095c8 g     F .text	00000164 __fputwc
000001c0 g       *ABS*	00000000 __ram_exceptions_end
0000e250 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0000eb64 g     F .text	0000008c alt_ic_irq_disable
00007a80 g     F .text	0000007c __swrite
0001169c g     O .rwdata	00000004 __malloc_trim_threshold
0000f2b4 g     F .text	00000024 altera_nios2_qsys_irq_init
00005484 g     F .text	0000000c __locale_msgcharset
0000f548 g     F .text	00000038 exit
00005328 g     F .text	000000c4 _fwalk_reent
00006d24 g     F .text	000001fc __mdiff
0000a8c4 g     F .text	00000074 .hidden __modsi3
00020000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
0000492c g     F .text	00000004 __sfp_lock_release
0000f894 g     F .text	00000034 _exit
0000e780 g     F .text	0000012c alt_alarm_start
000054c8 g     F .text	000001bc __smakebuf_r
000004c0 g     F .text	00000098 strlen
0000efb4 g     F .text	0000015c open
0000bd20 g     F .text	000000dc .hidden __gedf2
000116a0 g     O .rwdata	00000004 __wctomb
00007d38 g     F .text	00000018 __sprint_r
0000ea6c g     F .text	00000020 alt_icache_flush_all
000116c0 g     O .rwdata	00000004 alt_priority_mask
0000eadc g     F .text	00000088 alt_ic_irq_enable
00002834 g     F .text	0000001c __vfprintf_internal
00009c24 g     F .text	0000005c _wctomb_r
0000c75c g     F .text	000008fc .hidden __subdf3
000066c4 g     F .text	000000b0 __lo0bits
000116c4 g     O .rwdata	00000008 alt_alarm_list
0000e9ac g     F .text	00000060 _do_ctors
00009b34 g     F .text	000000c0 wcrtomb
0000d2fc g     F .text	000000d8 close
0000d644 g     F .text	00000084 alt_load
00009750 g     F .text	00000080 fputwc
00004930 g     F .text	00000004 __sinit_lock_acquire
00006410 g     F .text	00000148 __multadd
000063e8 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08407014 	ori	at,at,448
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000ec0 	call	ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000306 	br	98 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  8c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)

00000094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  94:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  98:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  9c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  e8:	ef80083a 	eret

000000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  ec:	defff904 	addi	sp,sp,-28
  f0:	dfc00615 	stw	ra,24(sp)
  f4:	df000515 	stw	fp,20(sp)
  f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 100:	0005313a 	rdctl	r2,ipending
 104:	e0bffe15 	stw	r2,-8(fp)

  return active;
 108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 10c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 114:	00800044 	movi	r2,1
 118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 11c:	e0fffb17 	ldw	r3,-20(fp)
 120:	e0bffc17 	ldw	r2,-16(fp)
 124:	1884703a 	and	r2,r3,r2
 128:	10001426 	beq	r2,zero,17c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 12c:	00800074 	movhi	r2,1
 130:	108c8504 	addi	r2,r2,12820
 134:	e0fffd17 	ldw	r3,-12(fp)
 138:	180690fa 	slli	r3,r3,3
 13c:	10c5883a 	add	r2,r2,r3
 140:	10c00017 	ldw	r3,0(r2)
 144:	00800074 	movhi	r2,1
 148:	108c8504 	addi	r2,r2,12820
 14c:	e13ffd17 	ldw	r4,-12(fp)
 150:	200890fa 	slli	r4,r4,3
 154:	1105883a 	add	r2,r2,r4
 158:	10800104 	addi	r2,r2,4
 15c:	10800017 	ldw	r2,0(r2)
 160:	1009883a 	mov	r4,r2
 164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 16c:	0005313a 	rdctl	r2,ipending
 170:	e0bfff15 	stw	r2,-4(fp)

  return active;
 174:	e0bfff17 	ldw	r2,-4(fp)
 178:	00000706 	br	198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 17c:	e0bffc17 	ldw	r2,-16(fp)
 180:	1085883a 	add	r2,r2,r2
 184:	e0bffc15 	stw	r2,-16(fp)
      i++;
 188:	e0bffd17 	ldw	r2,-12(fp)
 18c:	10800044 	addi	r2,r2,1
 190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 194:	003fe106 	br	11c <__alt_data_end+0xfffe011c>

    active = alt_irq_pending ();
 198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 19c:	e0bffb17 	ldw	r2,-20(fp)
 1a0:	103fdb1e 	bne	r2,zero,110 <__alt_data_end+0xfffe0110>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1a4:	0001883a 	nop
}
 1a8:	0001883a 	nop
 1ac:	e037883a 	mov	sp,fp
 1b0:	dfc00117 	ldw	ra,4(sp)
 1b4:	df000017 	ldw	fp,0(sp)
 1b8:	dec00204 	addi	sp,sp,8
 1bc:	f800283a 	ret

Disassembly of section .text:

000001c0 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     1c0:	06c000b4 	movhi	sp,2
    ori sp, sp, %lo(__alt_stack_pointer)
     1c4:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     1c8:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     1cc:	d6a5a314 	ori	gp,gp,38540
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     1d0:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     1d4:	108c6e14 	ori	r2,r2,12728

    movhi r3, %hi(__bss_end)
     1d8:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     1dc:	18ccc514 	ori	r3,r3,13076

    beq r2, r3, 1f
     1e0:	10c00326 	beq	r2,r3,1f0 <_start+0x30>

0:
    stw zero, (r2)
     1e4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     1e8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     1ec:	10fffd36 	bltu	r2,r3,1e4 <__alt_data_end+0xfffe01e4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     1f0:	000d6440 	call	d644 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     1f4:	000d7e00 	call	d7e0 <alt_main>

000001f8 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     1f8:	003fff06 	br	1f8 <__alt_data_end+0xfffe01f8>

000001fc <main>:
//REG32_NEW_COMPONENT_1_BASE

//uint8_t

int main()
{
     1fc:	defffe04 	addi	sp,sp,-8
     200:	dfc00115 	stw	ra,4(sp)
     204:	df000015 	stw	fp,0(sp)
     208:	d839883a 	mov	fp,sp
  printf("Hello from Nios II!\n");
     20c:	01000074 	movhi	r4,1
     210:	213e3204 	addi	r4,r4,-1848
     214:	00004ac0 	call	4ac <puts>




  *(uint32_t *)(MATRIXMULTIPLIER_8BIT_COMPONENT_0_BASE)   = 0x01020301;
     218:	008000b4 	movhi	r2,2
     21c:	10840004 	addi	r2,r2,4096
     220:	00c040b4 	movhi	r3,258
     224:	18c0c044 	addi	r3,r3,769
     228:	10c00015 	stw	r3,0(r2)
  *(uint32_t *)(MATRIXMULTIPLIER_8BIT_COMPONENT_0_BASE+4) = 0x02030102;
     22c:	008000b4 	movhi	r2,2
     230:	10840104 	addi	r2,r2,4100
     234:	00c080f4 	movhi	r3,515
     238:	18c04084 	addi	r3,r3,258
     23c:	10c00015 	stw	r3,0(r2)
  *(uint32_t *)(MATRIXMULTIPLIER_8BIT_COMPONENT_0_BASE+8) = 0x03000000;
     240:	008000b4 	movhi	r2,2
     244:	10840204 	addi	r2,r2,4104
     248:	00c0c034 	movhi	r3,768
     24c:	10c00015 	stw	r3,0(r2)

  printf("%x\n",*(uint32_t *)(MATRIXMULTIPLIER_8BIT_COMPONENT_0_BASE));
     250:	008000b4 	movhi	r2,2
     254:	10840004 	addi	r2,r2,4096
     258:	10800017 	ldw	r2,0(r2)
     25c:	100b883a 	mov	r5,r2
     260:	01000074 	movhi	r4,1
     264:	213e3704 	addi	r4,r4,-1828
     268:	00003b00 	call	3b0 <printf>
  printf("%x\n",*(uint32_t *)(MATRIXMULTIPLIER_8BIT_COMPONENT_0_BASE+4));
     26c:	008000b4 	movhi	r2,2
     270:	10840104 	addi	r2,r2,4100
     274:	10800017 	ldw	r2,0(r2)
     278:	100b883a 	mov	r5,r2
     27c:	01000074 	movhi	r4,1
     280:	213e3704 	addi	r4,r4,-1828
     284:	00003b00 	call	3b0 <printf>
  printf("%x\n",*(uint32_t *)(MATRIXMULTIPLIER_8BIT_COMPONENT_0_BASE+8));
     288:	008000b4 	movhi	r2,2
     28c:	10840204 	addi	r2,r2,4104
     290:	10800017 	ldw	r2,0(r2)
     294:	100b883a 	mov	r5,r2
     298:	01000074 	movhi	r4,1
     29c:	213e3704 	addi	r4,r4,-1828
     2a0:	00003b00 	call	3b0 <printf>


  *(uint32_t *)(MATRIXMULTIPLIER_8BIT_COMPONENT_0_BASE+12) = 0x02000000;
     2a4:	008000b4 	movhi	r2,2
     2a8:	10840304 	addi	r2,r2,4108
     2ac:	00c08034 	movhi	r3,512
     2b0:	10c00015 	stw	r3,0(r2)
  *(uint32_t *)(MATRIXMULTIPLIER_8BIT_COMPONENT_0_BASE+16) = 0x02000000;
     2b4:	008000b4 	movhi	r2,2
     2b8:	10840404 	addi	r2,r2,4112
     2bc:	00c08034 	movhi	r3,512
     2c0:	10c00015 	stw	r3,0(r2)
  *(uint32_t *)(MATRIXMULTIPLIER_8BIT_COMPONENT_0_BASE+20) = 0x02000000;
     2c4:	008000b4 	movhi	r2,2
     2c8:	10840504 	addi	r2,r2,4116
     2cc:	00c08034 	movhi	r3,512
     2d0:	10c00015 	stw	r3,0(r2)

  printf("%x\n",*(uint32_t *)(MATRIXMULTIPLIER_8BIT_COMPONENT_0_BASE+12));
     2d4:	008000b4 	movhi	r2,2
     2d8:	10840304 	addi	r2,r2,4108
     2dc:	10800017 	ldw	r2,0(r2)
     2e0:	100b883a 	mov	r5,r2
     2e4:	01000074 	movhi	r4,1
     2e8:	213e3704 	addi	r4,r4,-1828
     2ec:	00003b00 	call	3b0 <printf>
  printf("%x\n",*(uint32_t *)(MATRIXMULTIPLIER_8BIT_COMPONENT_0_BASE+16));
     2f0:	008000b4 	movhi	r2,2
     2f4:	10840404 	addi	r2,r2,4112
     2f8:	10800017 	ldw	r2,0(r2)
     2fc:	100b883a 	mov	r5,r2
     300:	01000074 	movhi	r4,1
     304:	213e3704 	addi	r4,r4,-1828
     308:	00003b00 	call	3b0 <printf>
  printf("%x\n",*(uint32_t *)(MATRIXMULTIPLIER_8BIT_COMPONENT_0_BASE+20));
     30c:	008000b4 	movhi	r2,2
     310:	10840504 	addi	r2,r2,4116
     314:	10800017 	ldw	r2,0(r2)
     318:	100b883a 	mov	r5,r2
     31c:	01000074 	movhi	r4,1
     320:	213e3704 	addi	r4,r4,-1828
     324:	00003b00 	call	3b0 <printf>



  while(1){

	  printf("%x\n",*(uint32_t *)(MATRIXMULTIPLIER_8BIT_COMPONENT_0_BASE+24));
     328:	008000b4 	movhi	r2,2
     32c:	10840604 	addi	r2,r2,4120
     330:	10800017 	ldw	r2,0(r2)
     334:	100b883a 	mov	r5,r2
     338:	01000074 	movhi	r4,1
     33c:	213e3704 	addi	r4,r4,-1828
     340:	00003b00 	call	3b0 <printf>
	  printf("%x\n",*(uint32_t *)(MATRIXMULTIPLIER_8BIT_COMPONENT_0_BASE+28));
     344:	008000b4 	movhi	r2,2
     348:	10840704 	addi	r2,r2,4124
     34c:	10800017 	ldw	r2,0(r2)
     350:	100b883a 	mov	r5,r2
     354:	01000074 	movhi	r4,1
     358:	213e3704 	addi	r4,r4,-1828
     35c:	00003b00 	call	3b0 <printf>
	  printf("%x\n",*(uint32_t *)(MATRIXMULTIPLIER_8BIT_COMPONENT_0_BASE+32));
     360:	008000b4 	movhi	r2,2
     364:	10840804 	addi	r2,r2,4128
     368:	10800017 	ldw	r2,0(r2)
     36c:	100b883a 	mov	r5,r2
     370:	01000074 	movhi	r4,1
     374:	213e3704 	addi	r4,r4,-1828
     378:	00003b00 	call	3b0 <printf>

  }
     37c:	003fea06 	br	328 <__alt_data_end+0xfffe0328>

00000380 <_printf_r>:
     380:	defffd04 	addi	sp,sp,-12
     384:	2805883a 	mov	r2,r5
     388:	dfc00015 	stw	ra,0(sp)
     38c:	d9800115 	stw	r6,4(sp)
     390:	d9c00215 	stw	r7,8(sp)
     394:	21400217 	ldw	r5,8(r4)
     398:	d9c00104 	addi	r7,sp,4
     39c:	100d883a 	mov	r6,r2
     3a0:	00005580 	call	558 <___vfprintf_internal_r>
     3a4:	dfc00017 	ldw	ra,0(sp)
     3a8:	dec00304 	addi	sp,sp,12
     3ac:	f800283a 	ret

000003b0 <printf>:
     3b0:	defffc04 	addi	sp,sp,-16
     3b4:	dfc00015 	stw	ra,0(sp)
     3b8:	d9400115 	stw	r5,4(sp)
     3bc:	d9800215 	stw	r6,8(sp)
     3c0:	d9c00315 	stw	r7,12(sp)
     3c4:	00800074 	movhi	r2,1
     3c8:	1085a404 	addi	r2,r2,5776
     3cc:	10800017 	ldw	r2,0(r2)
     3d0:	200b883a 	mov	r5,r4
     3d4:	d9800104 	addi	r6,sp,4
     3d8:	11000217 	ldw	r4,8(r2)
     3dc:	00028340 	call	2834 <__vfprintf_internal>
     3e0:	dfc00017 	ldw	ra,0(sp)
     3e4:	dec00404 	addi	sp,sp,16
     3e8:	f800283a 	ret

000003ec <_puts_r>:
     3ec:	defff604 	addi	sp,sp,-40
     3f0:	dc000715 	stw	r16,28(sp)
     3f4:	2021883a 	mov	r16,r4
     3f8:	2809883a 	mov	r4,r5
     3fc:	dc400815 	stw	r17,32(sp)
     400:	dfc00915 	stw	ra,36(sp)
     404:	2823883a 	mov	r17,r5
     408:	00004c00 	call	4c0 <strlen>
     40c:	10c00044 	addi	r3,r2,1
     410:	d8800115 	stw	r2,4(sp)
     414:	00800074 	movhi	r2,1
     418:	10be3804 	addi	r2,r2,-1824
     41c:	d8800215 	stw	r2,8(sp)
     420:	00800044 	movi	r2,1
     424:	d8800315 	stw	r2,12(sp)
     428:	00800084 	movi	r2,2
     42c:	dc400015 	stw	r17,0(sp)
     430:	d8c00615 	stw	r3,24(sp)
     434:	dec00415 	stw	sp,16(sp)
     438:	d8800515 	stw	r2,20(sp)
     43c:	80000226 	beq	r16,zero,448 <_puts_r+0x5c>
     440:	80800e17 	ldw	r2,56(r16)
     444:	10001426 	beq	r2,zero,498 <_puts_r+0xac>
     448:	81400217 	ldw	r5,8(r16)
     44c:	2880030b 	ldhu	r2,12(r5)
     450:	10c8000c 	andi	r3,r2,8192
     454:	1800061e 	bne	r3,zero,470 <_puts_r+0x84>
     458:	29001917 	ldw	r4,100(r5)
     45c:	00f7ffc4 	movi	r3,-8193
     460:	10880014 	ori	r2,r2,8192
     464:	20c6703a 	and	r3,r4,r3
     468:	2880030d 	sth	r2,12(r5)
     46c:	28c01915 	stw	r3,100(r5)
     470:	d9800404 	addi	r6,sp,16
     474:	8009883a 	mov	r4,r16
     478:	0004d9c0 	call	4d9c <__sfvwrite_r>
     47c:	1000091e 	bne	r2,zero,4a4 <_puts_r+0xb8>
     480:	00800284 	movi	r2,10
     484:	dfc00917 	ldw	ra,36(sp)
     488:	dc400817 	ldw	r17,32(sp)
     48c:	dc000717 	ldw	r16,28(sp)
     490:	dec00a04 	addi	sp,sp,40
     494:	f800283a 	ret
     498:	8009883a 	mov	r4,r16
     49c:	00049180 	call	4918 <__sinit>
     4a0:	003fe906 	br	448 <__alt_data_end+0xfffe0448>
     4a4:	00bfffc4 	movi	r2,-1
     4a8:	003ff606 	br	484 <__alt_data_end+0xfffe0484>

000004ac <puts>:
     4ac:	00800074 	movhi	r2,1
     4b0:	1085a404 	addi	r2,r2,5776
     4b4:	200b883a 	mov	r5,r4
     4b8:	11000017 	ldw	r4,0(r2)
     4bc:	00003ec1 	jmpi	3ec <_puts_r>

000004c0 <strlen>:
     4c0:	208000cc 	andi	r2,r4,3
     4c4:	10002026 	beq	r2,zero,548 <strlen+0x88>
     4c8:	20800007 	ldb	r2,0(r4)
     4cc:	10002026 	beq	r2,zero,550 <strlen+0x90>
     4d0:	2005883a 	mov	r2,r4
     4d4:	00000206 	br	4e0 <strlen+0x20>
     4d8:	10c00007 	ldb	r3,0(r2)
     4dc:	18001826 	beq	r3,zero,540 <strlen+0x80>
     4e0:	10800044 	addi	r2,r2,1
     4e4:	10c000cc 	andi	r3,r2,3
     4e8:	183ffb1e 	bne	r3,zero,4d8 <__alt_data_end+0xfffe04d8>
     4ec:	10c00017 	ldw	r3,0(r2)
     4f0:	01ffbff4 	movhi	r7,65279
     4f4:	39ffbfc4 	addi	r7,r7,-257
     4f8:	00ca303a 	nor	r5,zero,r3
     4fc:	01a02074 	movhi	r6,32897
     500:	19c7883a 	add	r3,r3,r7
     504:	31a02004 	addi	r6,r6,-32640
     508:	1946703a 	and	r3,r3,r5
     50c:	1986703a 	and	r3,r3,r6
     510:	1800091e 	bne	r3,zero,538 <strlen+0x78>
     514:	10800104 	addi	r2,r2,4
     518:	10c00017 	ldw	r3,0(r2)
     51c:	19cb883a 	add	r5,r3,r7
     520:	00c6303a 	nor	r3,zero,r3
     524:	28c6703a 	and	r3,r5,r3
     528:	1986703a 	and	r3,r3,r6
     52c:	183ff926 	beq	r3,zero,514 <__alt_data_end+0xfffe0514>
     530:	00000106 	br	538 <strlen+0x78>
     534:	10800044 	addi	r2,r2,1
     538:	10c00007 	ldb	r3,0(r2)
     53c:	183ffd1e 	bne	r3,zero,534 <__alt_data_end+0xfffe0534>
     540:	1105c83a 	sub	r2,r2,r4
     544:	f800283a 	ret
     548:	2005883a 	mov	r2,r4
     54c:	003fe706 	br	4ec <__alt_data_end+0xfffe04ec>
     550:	0005883a 	mov	r2,zero
     554:	f800283a 	ret

00000558 <___vfprintf_internal_r>:
     558:	deffb804 	addi	sp,sp,-288
     55c:	dfc04715 	stw	ra,284(sp)
     560:	ddc04515 	stw	r23,276(sp)
     564:	dd404315 	stw	r21,268(sp)
     568:	d9002d15 	stw	r4,180(sp)
     56c:	282f883a 	mov	r23,r5
     570:	302b883a 	mov	r21,r6
     574:	d9c02e15 	stw	r7,184(sp)
     578:	df004615 	stw	fp,280(sp)
     57c:	dd804415 	stw	r22,272(sp)
     580:	dd004215 	stw	r20,264(sp)
     584:	dcc04115 	stw	r19,260(sp)
     588:	dc804015 	stw	r18,256(sp)
     58c:	dc403f15 	stw	r17,252(sp)
     590:	dc003e15 	stw	r16,248(sp)
     594:	00054980 	call	5498 <_localeconv_r>
     598:	10800017 	ldw	r2,0(r2)
     59c:	1009883a 	mov	r4,r2
     5a0:	d8803415 	stw	r2,208(sp)
     5a4:	00004c00 	call	4c0 <strlen>
     5a8:	d8803715 	stw	r2,220(sp)
     5ac:	d8802d17 	ldw	r2,180(sp)
     5b0:	10000226 	beq	r2,zero,5bc <___vfprintf_internal_r+0x64>
     5b4:	10800e17 	ldw	r2,56(r2)
     5b8:	1000fb26 	beq	r2,zero,9a8 <___vfprintf_internal_r+0x450>
     5bc:	b880030b 	ldhu	r2,12(r23)
     5c0:	10c8000c 	andi	r3,r2,8192
     5c4:	1800061e 	bne	r3,zero,5e0 <___vfprintf_internal_r+0x88>
     5c8:	b9001917 	ldw	r4,100(r23)
     5cc:	00f7ffc4 	movi	r3,-8193
     5d0:	10880014 	ori	r2,r2,8192
     5d4:	20c6703a 	and	r3,r4,r3
     5d8:	b880030d 	sth	r2,12(r23)
     5dc:	b8c01915 	stw	r3,100(r23)
     5e0:	10c0020c 	andi	r3,r2,8
     5e4:	1800c326 	beq	r3,zero,8f4 <___vfprintf_internal_r+0x39c>
     5e8:	b8c00417 	ldw	r3,16(r23)
     5ec:	1800c126 	beq	r3,zero,8f4 <___vfprintf_internal_r+0x39c>
     5f0:	1080068c 	andi	r2,r2,26
     5f4:	00c00284 	movi	r3,10
     5f8:	10c0c626 	beq	r2,r3,914 <___vfprintf_internal_r+0x3bc>
     5fc:	d8c00404 	addi	r3,sp,16
     600:	05000074 	movhi	r20,1
     604:	d9001e04 	addi	r4,sp,120
     608:	a53e4984 	addi	r20,r20,-1754
     60c:	d8c01e15 	stw	r3,120(sp)
     610:	d8002015 	stw	zero,128(sp)
     614:	d8001f15 	stw	zero,124(sp)
     618:	d8003315 	stw	zero,204(sp)
     61c:	d8003615 	stw	zero,216(sp)
     620:	d8003815 	stw	zero,224(sp)
     624:	1811883a 	mov	r8,r3
     628:	d8003915 	stw	zero,228(sp)
     62c:	d8003a15 	stw	zero,232(sp)
     630:	d8002f15 	stw	zero,188(sp)
     634:	d9002815 	stw	r4,160(sp)
     638:	a8800007 	ldb	r2,0(r21)
     63c:	10028b26 	beq	r2,zero,106c <___vfprintf_internal_r+0xb14>
     640:	00c00944 	movi	r3,37
     644:	a823883a 	mov	r17,r21
     648:	10c0021e 	bne	r2,r3,654 <___vfprintf_internal_r+0xfc>
     64c:	00001406 	br	6a0 <___vfprintf_internal_r+0x148>
     650:	10c00326 	beq	r2,r3,660 <___vfprintf_internal_r+0x108>
     654:	8c400044 	addi	r17,r17,1
     658:	88800007 	ldb	r2,0(r17)
     65c:	103ffc1e 	bne	r2,zero,650 <__alt_data_end+0xfffe0650>
     660:	8d61c83a 	sub	r16,r17,r21
     664:	80000e26 	beq	r16,zero,6a0 <___vfprintf_internal_r+0x148>
     668:	d8c02017 	ldw	r3,128(sp)
     66c:	d8801f17 	ldw	r2,124(sp)
     670:	45400015 	stw	r21,0(r8)
     674:	1c07883a 	add	r3,r3,r16
     678:	10800044 	addi	r2,r2,1
     67c:	d8c02015 	stw	r3,128(sp)
     680:	44000115 	stw	r16,4(r8)
     684:	d8801f15 	stw	r2,124(sp)
     688:	00c001c4 	movi	r3,7
     68c:	1880a916 	blt	r3,r2,934 <___vfprintf_internal_r+0x3dc>
     690:	42000204 	addi	r8,r8,8
     694:	d9402f17 	ldw	r5,188(sp)
     698:	2c0b883a 	add	r5,r5,r16
     69c:	d9402f15 	stw	r5,188(sp)
     6a0:	88800007 	ldb	r2,0(r17)
     6a4:	1000aa26 	beq	r2,zero,950 <___vfprintf_internal_r+0x3f8>
     6a8:	8d400044 	addi	r21,r17,1
     6ac:	8c400047 	ldb	r17,1(r17)
     6b0:	0021883a 	mov	r16,zero
     6b4:	00bfffc4 	movi	r2,-1
     6b8:	0025883a 	mov	r18,zero
     6bc:	dc002905 	stb	r16,164(sp)
     6c0:	d8002785 	stb	zero,158(sp)
     6c4:	d8002b05 	stb	zero,172(sp)
     6c8:	d8802a15 	stw	r2,168(sp)
     6cc:	d8003115 	stw	zero,196(sp)
     6d0:	04c01604 	movi	r19,88
     6d4:	05800244 	movi	r22,9
     6d8:	9021883a 	mov	r16,r18
     6dc:	4039883a 	mov	fp,r8
     6e0:	ad400044 	addi	r21,r21,1
     6e4:	88bff804 	addi	r2,r17,-32
     6e8:	98833236 	bltu	r19,r2,13b4 <___vfprintf_internal_r+0xe5c>
     6ec:	100490ba 	slli	r2,r2,2
     6f0:	00c00034 	movhi	r3,0
     6f4:	18c1c104 	addi	r3,r3,1796
     6f8:	10c5883a 	add	r2,r2,r3
     6fc:	10800017 	ldw	r2,0(r2)
     700:	1000683a 	jmp	r2
     704:	000012ac 	andhi	zero,zero,74
     708:	000013b4 	movhi	zero,78
     70c:	000013b4 	movhi	zero,78
     710:	000012cc 	andi	zero,zero,75
     714:	000013b4 	movhi	zero,78
     718:	000013b4 	movhi	zero,78
     71c:	000013b4 	movhi	zero,78
     720:	000013b4 	movhi	zero,78
     724:	000013b4 	movhi	zero,78
     728:	000013b4 	movhi	zero,78
     72c:	000009b4 	movhi	zero,38
     730:	000011bc 	xorhi	zero,zero,70
     734:	000013b4 	movhi	zero,78
     738:	00000878 	rdprs	zero,zero,33
     73c:	000009d8 	cmpnei	zero,zero,39
     740:	000013b4 	movhi	zero,78
     744:	00000a28 	cmpgeui	zero,zero,40
     748:	00000a34 	movhi	zero,40
     74c:	00000a34 	movhi	zero,40
     750:	00000a34 	movhi	zero,40
     754:	00000a34 	movhi	zero,40
     758:	00000a34 	movhi	zero,40
     75c:	00000a34 	movhi	zero,40
     760:	00000a34 	movhi	zero,40
     764:	00000a34 	movhi	zero,40
     768:	00000a34 	movhi	zero,40
     76c:	000013b4 	movhi	zero,78
     770:	000013b4 	movhi	zero,78
     774:	000013b4 	movhi	zero,78
     778:	000013b4 	movhi	zero,78
     77c:	000013b4 	movhi	zero,78
     780:	000013b4 	movhi	zero,78
     784:	000013b4 	movhi	zero,78
     788:	000013b4 	movhi	zero,78
     78c:	000013b4 	movhi	zero,78
     790:	000013b4 	movhi	zero,78
     794:	00000a70 	cmpltui	zero,zero,41
     798:	00000b38 	rdprs	zero,zero,44
     79c:	000013b4 	movhi	zero,78
     7a0:	00000b38 	rdprs	zero,zero,44
     7a4:	000013b4 	movhi	zero,78
     7a8:	000013b4 	movhi	zero,78
     7ac:	000013b4 	movhi	zero,78
     7b0:	000013b4 	movhi	zero,78
     7b4:	00000be4 	muli	zero,zero,47
     7b8:	000013b4 	movhi	zero,78
     7bc:	000013b4 	movhi	zero,78
     7c0:	00000bf0 	cmpltui	zero,zero,47
     7c4:	000013b4 	movhi	zero,78
     7c8:	000013b4 	movhi	zero,78
     7cc:	000013b4 	movhi	zero,78
     7d0:	000013b4 	movhi	zero,78
     7d4:	000013b4 	movhi	zero,78
     7d8:	00001074 	movhi	zero,65
     7dc:	000013b4 	movhi	zero,78
     7e0:	000013b4 	movhi	zero,78
     7e4:	000010e0 	cmpeqi	zero,zero,67
     7e8:	000013b4 	movhi	zero,78
     7ec:	000013b4 	movhi	zero,78
     7f0:	000013b4 	movhi	zero,78
     7f4:	000013b4 	movhi	zero,78
     7f8:	000013b4 	movhi	zero,78
     7fc:	000013b4 	movhi	zero,78
     800:	000013b4 	movhi	zero,78
     804:	000013b4 	movhi	zero,78
     808:	000013b4 	movhi	zero,78
     80c:	000013b4 	movhi	zero,78
     810:	00001358 	cmpnei	zero,zero,77
     814:	000012d8 	cmpnei	zero,zero,75
     818:	00000b38 	rdprs	zero,zero,44
     81c:	00000b38 	rdprs	zero,zero,44
     820:	00000b38 	rdprs	zero,zero,44
     824:	000012f8 	rdprs	zero,zero,75
     828:	000012d8 	cmpnei	zero,zero,75
     82c:	000013b4 	movhi	zero,78
     830:	000013b4 	movhi	zero,78
     834:	00001304 	movi	zero,76
     838:	000013b4 	movhi	zero,78
     83c:	00001318 	cmpnei	zero,zero,76
     840:	0000119c 	xori	zero,zero,70
     844:	00000884 	movi	zero,34
     848:	000011d4 	movui	zero,71
     84c:	000013b4 	movhi	zero,78
     850:	000011e0 	cmpeqi	zero,zero,71
     854:	000013b4 	movhi	zero,78
     858:	00001244 	movi	zero,73
     85c:	000013b4 	movhi	zero,78
     860:	000013b4 	movhi	zero,78
     864:	00001264 	muli	zero,zero,73
     868:	d8c03117 	ldw	r3,196(sp)
     86c:	d8802e15 	stw	r2,184(sp)
     870:	00c7c83a 	sub	r3,zero,r3
     874:	d8c03115 	stw	r3,196(sp)
     878:	84000114 	ori	r16,r16,4
     87c:	ac400007 	ldb	r17,0(r21)
     880:	003f9706 	br	6e0 <__alt_data_end+0xfffe06e0>
     884:	00800c04 	movi	r2,48
     888:	d8802705 	stb	r2,156(sp)
     88c:	00801e04 	movi	r2,120
     890:	d8802745 	stb	r2,157(sp)
     894:	d9002a17 	ldw	r4,168(sp)
     898:	d8802e17 	ldw	r2,184(sp)
     89c:	d8002785 	stb	zero,158(sp)
     8a0:	e011883a 	mov	r8,fp
     8a4:	10c00104 	addi	r3,r2,4
     8a8:	14c00017 	ldw	r19,0(r2)
     8ac:	002d883a 	mov	r22,zero
     8b0:	80800094 	ori	r2,r16,2
     8b4:	2002ca16 	blt	r4,zero,13e0 <___vfprintf_internal_r+0xe88>
     8b8:	00bfdfc4 	movi	r2,-129
     8bc:	80a4703a 	and	r18,r16,r2
     8c0:	d8c02e15 	stw	r3,184(sp)
     8c4:	94800094 	ori	r18,r18,2
     8c8:	9802b41e 	bne	r19,zero,139c <___vfprintf_internal_r+0xe44>
     8cc:	01400074 	movhi	r5,1
     8d0:	297e4204 	addi	r5,r5,-1784
     8d4:	d9403915 	stw	r5,228(sp)
     8d8:	04401e04 	movi	r17,120
     8dc:	d8802a17 	ldw	r2,168(sp)
     8e0:	0039883a 	mov	fp,zero
     8e4:	1001fa26 	beq	r2,zero,10d0 <___vfprintf_internal_r+0xb78>
     8e8:	0027883a 	mov	r19,zero
     8ec:	002d883a 	mov	r22,zero
     8f0:	00021906 	br	1158 <___vfprintf_internal_r+0xc00>
     8f4:	d9002d17 	ldw	r4,180(sp)
     8f8:	b80b883a 	mov	r5,r23
     8fc:	000290c0 	call	290c <__swsetup_r>
     900:	1005dc1e 	bne	r2,zero,2074 <___vfprintf_internal_r+0x1b1c>
     904:	b880030b 	ldhu	r2,12(r23)
     908:	00c00284 	movi	r3,10
     90c:	1080068c 	andi	r2,r2,26
     910:	10ff3a1e 	bne	r2,r3,5fc <__alt_data_end+0xfffe05fc>
     914:	b880038f 	ldh	r2,14(r23)
     918:	103f3816 	blt	r2,zero,5fc <__alt_data_end+0xfffe05fc>
     91c:	d9c02e17 	ldw	r7,184(sp)
     920:	d9002d17 	ldw	r4,180(sp)
     924:	a80d883a 	mov	r6,r21
     928:	b80b883a 	mov	r5,r23
     92c:	00028500 	call	2850 <__sbprintf>
     930:	00001106 	br	978 <___vfprintf_internal_r+0x420>
     934:	d9002d17 	ldw	r4,180(sp)
     938:	d9801e04 	addi	r6,sp,120
     93c:	b80b883a 	mov	r5,r23
     940:	0007d380 	call	7d38 <__sprint_r>
     944:	1000081e 	bne	r2,zero,968 <___vfprintf_internal_r+0x410>
     948:	da000404 	addi	r8,sp,16
     94c:	003f5106 	br	694 <__alt_data_end+0xfffe0694>
     950:	d8802017 	ldw	r2,128(sp)
     954:	10000426 	beq	r2,zero,968 <___vfprintf_internal_r+0x410>
     958:	d9002d17 	ldw	r4,180(sp)
     95c:	d9801e04 	addi	r6,sp,120
     960:	b80b883a 	mov	r5,r23
     964:	0007d380 	call	7d38 <__sprint_r>
     968:	b880030b 	ldhu	r2,12(r23)
     96c:	1080100c 	andi	r2,r2,64
     970:	1005c01e 	bne	r2,zero,2074 <___vfprintf_internal_r+0x1b1c>
     974:	d8802f17 	ldw	r2,188(sp)
     978:	dfc04717 	ldw	ra,284(sp)
     97c:	df004617 	ldw	fp,280(sp)
     980:	ddc04517 	ldw	r23,276(sp)
     984:	dd804417 	ldw	r22,272(sp)
     988:	dd404317 	ldw	r21,268(sp)
     98c:	dd004217 	ldw	r20,264(sp)
     990:	dcc04117 	ldw	r19,260(sp)
     994:	dc804017 	ldw	r18,256(sp)
     998:	dc403f17 	ldw	r17,252(sp)
     99c:	dc003e17 	ldw	r16,248(sp)
     9a0:	dec04804 	addi	sp,sp,288
     9a4:	f800283a 	ret
     9a8:	d9002d17 	ldw	r4,180(sp)
     9ac:	00049180 	call	4918 <__sinit>
     9b0:	003f0206 	br	5bc <__alt_data_end+0xfffe05bc>
     9b4:	d9002e17 	ldw	r4,184(sp)
     9b8:	d9402e17 	ldw	r5,184(sp)
     9bc:	21000017 	ldw	r4,0(r4)
     9c0:	28800104 	addi	r2,r5,4
     9c4:	d9003115 	stw	r4,196(sp)
     9c8:	203fa716 	blt	r4,zero,868 <__alt_data_end+0xfffe0868>
     9cc:	d8802e15 	stw	r2,184(sp)
     9d0:	ac400007 	ldb	r17,0(r21)
     9d4:	003f4206 	br	6e0 <__alt_data_end+0xfffe06e0>
     9d8:	ac400007 	ldb	r17,0(r21)
     9dc:	01000a84 	movi	r4,42
     9e0:	a8c00044 	addi	r3,r21,1
     9e4:	89075826 	beq	r17,r4,2748 <___vfprintf_internal_r+0x21f0>
     9e8:	8cbff404 	addi	r18,r17,-48
     9ec:	b486ae36 	bltu	r22,r18,24a8 <___vfprintf_internal_r+0x1f50>
     9f0:	0009883a 	mov	r4,zero
     9f4:	1823883a 	mov	r17,r3
     9f8:	01400284 	movi	r5,10
     9fc:	000a9f40 	call	a9f4 <__mulsi3>
     a00:	88c00007 	ldb	r3,0(r17)
     a04:	1489883a 	add	r4,r2,r18
     a08:	8d400044 	addi	r21,r17,1
     a0c:	1cbff404 	addi	r18,r3,-48
     a10:	a823883a 	mov	r17,r21
     a14:	b4bff82e 	bgeu	r22,r18,9f8 <__alt_data_end+0xfffe09f8>
     a18:	1823883a 	mov	r17,r3
     a1c:	2005f616 	blt	r4,zero,21f8 <___vfprintf_internal_r+0x1ca0>
     a20:	d9002a15 	stw	r4,168(sp)
     a24:	003f2f06 	br	6e4 <__alt_data_end+0xfffe06e4>
     a28:	84002014 	ori	r16,r16,128
     a2c:	ac400007 	ldb	r17,0(r21)
     a30:	003f2b06 	br	6e0 <__alt_data_end+0xfffe06e0>
     a34:	8cbff404 	addi	r18,r17,-48
     a38:	d8003115 	stw	zero,196(sp)
     a3c:	0009883a 	mov	r4,zero
     a40:	a823883a 	mov	r17,r21
     a44:	01400284 	movi	r5,10
     a48:	000a9f40 	call	a9f4 <__mulsi3>
     a4c:	88c00007 	ldb	r3,0(r17)
     a50:	9089883a 	add	r4,r18,r2
     a54:	ad400044 	addi	r21,r21,1
     a58:	1cbff404 	addi	r18,r3,-48
     a5c:	a823883a 	mov	r17,r21
     a60:	b4bff82e 	bgeu	r22,r18,a44 <__alt_data_end+0xfffe0a44>
     a64:	1823883a 	mov	r17,r3
     a68:	d9003115 	stw	r4,196(sp)
     a6c:	003f1d06 	br	6e4 <__alt_data_end+0xfffe06e4>
     a70:	8025883a 	mov	r18,r16
     a74:	dc002903 	ldbu	r16,164(sp)
     a78:	e011883a 	mov	r8,fp
     a7c:	84003fcc 	andi	r16,r16,255
     a80:	8007531e 	bne	r16,zero,27d0 <___vfprintf_internal_r+0x2278>
     a84:	94800414 	ori	r18,r18,16
     a88:	9080080c 	andi	r2,r18,32
     a8c:	1003a326 	beq	r2,zero,191c <___vfprintf_internal_r+0x13c4>
     a90:	d9002e17 	ldw	r4,184(sp)
     a94:	20800117 	ldw	r2,4(r4)
     a98:	24c00017 	ldw	r19,0(r4)
     a9c:	21000204 	addi	r4,r4,8
     aa0:	d9002e15 	stw	r4,184(sp)
     aa4:	102d883a 	mov	r22,r2
     aa8:	10047316 	blt	r2,zero,1c78 <___vfprintf_internal_r+0x1720>
     aac:	d9002a17 	ldw	r4,168(sp)
     ab0:	df002783 	ldbu	fp,158(sp)
     ab4:	2003e416 	blt	r4,zero,1a48 <___vfprintf_internal_r+0x14f0>
     ab8:	00ffdfc4 	movi	r3,-129
     abc:	9d84b03a 	or	r2,r19,r22
     ac0:	90e4703a 	and	r18,r18,r3
     ac4:	10018026 	beq	r2,zero,10c8 <___vfprintf_internal_r+0xb70>
     ac8:	b003ab26 	beq	r22,zero,1978 <___vfprintf_internal_r+0x1420>
     acc:	dc402915 	stw	r17,164(sp)
     ad0:	dc001e04 	addi	r16,sp,120
     ad4:	b023883a 	mov	r17,r22
     ad8:	402d883a 	mov	r22,r8
     adc:	9809883a 	mov	r4,r19
     ae0:	880b883a 	mov	r5,r17
     ae4:	01800284 	movi	r6,10
     ae8:	000f883a 	mov	r7,zero
     aec:	000a27c0 	call	a27c <__umoddi3>
     af0:	10800c04 	addi	r2,r2,48
     af4:	843fffc4 	addi	r16,r16,-1
     af8:	9809883a 	mov	r4,r19
     afc:	880b883a 	mov	r5,r17
     b00:	80800005 	stb	r2,0(r16)
     b04:	01800284 	movi	r6,10
     b08:	000f883a 	mov	r7,zero
     b0c:	0009c800 	call	9c80 <__udivdi3>
     b10:	1027883a 	mov	r19,r2
     b14:	10c4b03a 	or	r2,r2,r3
     b18:	1823883a 	mov	r17,r3
     b1c:	103fef1e 	bne	r2,zero,adc <__alt_data_end+0xfffe0adc>
     b20:	d8c02817 	ldw	r3,160(sp)
     b24:	dc402917 	ldw	r17,164(sp)
     b28:	b011883a 	mov	r8,r22
     b2c:	1c07c83a 	sub	r3,r3,r16
     b30:	d8c02b15 	stw	r3,172(sp)
     b34:	00005f06 	br	cb4 <___vfprintf_internal_r+0x75c>
     b38:	8025883a 	mov	r18,r16
     b3c:	dc002903 	ldbu	r16,164(sp)
     b40:	e011883a 	mov	r8,fp
     b44:	84003fcc 	andi	r16,r16,255
     b48:	80071e1e 	bne	r16,zero,27c4 <___vfprintf_internal_r+0x226c>
     b4c:	9080020c 	andi	r2,r18,8
     b50:	1004af26 	beq	r2,zero,1e10 <___vfprintf_internal_r+0x18b8>
     b54:	d9002e17 	ldw	r4,184(sp)
     b58:	d9402e17 	ldw	r5,184(sp)
     b5c:	d8802e17 	ldw	r2,184(sp)
     b60:	21000017 	ldw	r4,0(r4)
     b64:	29400117 	ldw	r5,4(r5)
     b68:	10800204 	addi	r2,r2,8
     b6c:	d9003615 	stw	r4,216(sp)
     b70:	d9403815 	stw	r5,224(sp)
     b74:	d8802e15 	stw	r2,184(sp)
     b78:	d9003617 	ldw	r4,216(sp)
     b7c:	d9403817 	ldw	r5,224(sp)
     b80:	da003d15 	stw	r8,244(sp)
     b84:	04000044 	movi	r16,1
     b88:	000795c0 	call	795c <__fpclassifyd>
     b8c:	da003d17 	ldw	r8,244(sp)
     b90:	1404441e 	bne	r2,r16,1ca4 <___vfprintf_internal_r+0x174c>
     b94:	d9003617 	ldw	r4,216(sp)
     b98:	d9403817 	ldw	r5,224(sp)
     b9c:	000d883a 	mov	r6,zero
     ba0:	000f883a 	mov	r7,zero
     ba4:	000bdfc0 	call	bdfc <__ledf2>
     ba8:	da003d17 	ldw	r8,244(sp)
     bac:	1005e316 	blt	r2,zero,233c <___vfprintf_internal_r+0x1de4>
     bb0:	df002783 	ldbu	fp,158(sp)
     bb4:	008011c4 	movi	r2,71
     bb8:	1445580e 	bge	r2,r17,211c <___vfprintf_internal_r+0x1bc4>
     bbc:	04000074 	movhi	r16,1
     bc0:	843e3a04 	addi	r16,r16,-1816
     bc4:	00c000c4 	movi	r3,3
     bc8:	00bfdfc4 	movi	r2,-129
     bcc:	d8c02915 	stw	r3,164(sp)
     bd0:	90a4703a 	and	r18,r18,r2
     bd4:	d8c02b15 	stw	r3,172(sp)
     bd8:	d8002a15 	stw	zero,168(sp)
     bdc:	d8003215 	stw	zero,200(sp)
     be0:	00003a06 	br	ccc <___vfprintf_internal_r+0x774>
     be4:	84000214 	ori	r16,r16,8
     be8:	ac400007 	ldb	r17,0(r21)
     bec:	003ebc06 	br	6e0 <__alt_data_end+0xfffe06e0>
     bf0:	8025883a 	mov	r18,r16
     bf4:	dc002903 	ldbu	r16,164(sp)
     bf8:	e011883a 	mov	r8,fp
     bfc:	84003fcc 	andi	r16,r16,255
     c00:	8007001e 	bne	r16,zero,2804 <___vfprintf_internal_r+0x22ac>
     c04:	94800414 	ori	r18,r18,16
     c08:	9080080c 	andi	r2,r18,32
     c0c:	1002fa26 	beq	r2,zero,17f8 <___vfprintf_internal_r+0x12a0>
     c10:	d9002e17 	ldw	r4,184(sp)
     c14:	d9402a17 	ldw	r5,168(sp)
     c18:	d8002785 	stb	zero,158(sp)
     c1c:	20800204 	addi	r2,r4,8
     c20:	24c00017 	ldw	r19,0(r4)
     c24:	25800117 	ldw	r22,4(r4)
     c28:	2804b116 	blt	r5,zero,1ef0 <___vfprintf_internal_r+0x1998>
     c2c:	013fdfc4 	movi	r4,-129
     c30:	9d86b03a 	or	r3,r19,r22
     c34:	d8802e15 	stw	r2,184(sp)
     c38:	9124703a 	and	r18,r18,r4
     c3c:	1802fb1e 	bne	r3,zero,182c <___vfprintf_internal_r+0x12d4>
     c40:	d8c02a17 	ldw	r3,168(sp)
     c44:	0039883a 	mov	fp,zero
     c48:	1805e526 	beq	r3,zero,23e0 <___vfprintf_internal_r+0x1e88>
     c4c:	0027883a 	mov	r19,zero
     c50:	002d883a 	mov	r22,zero
     c54:	dc001e04 	addi	r16,sp,120
     c58:	9806d0fa 	srli	r3,r19,3
     c5c:	b008977a 	slli	r4,r22,29
     c60:	b02cd0fa 	srli	r22,r22,3
     c64:	9cc001cc 	andi	r19,r19,7
     c68:	98800c04 	addi	r2,r19,48
     c6c:	843fffc4 	addi	r16,r16,-1
     c70:	20e6b03a 	or	r19,r4,r3
     c74:	80800005 	stb	r2,0(r16)
     c78:	9d86b03a 	or	r3,r19,r22
     c7c:	183ff61e 	bne	r3,zero,c58 <__alt_data_end+0xfffe0c58>
     c80:	90c0004c 	andi	r3,r18,1
     c84:	18014126 	beq	r3,zero,118c <___vfprintf_internal_r+0xc34>
     c88:	10803fcc 	andi	r2,r2,255
     c8c:	1080201c 	xori	r2,r2,128
     c90:	10bfe004 	addi	r2,r2,-128
     c94:	00c00c04 	movi	r3,48
     c98:	10c13c26 	beq	r2,r3,118c <___vfprintf_internal_r+0xc34>
     c9c:	80ffffc5 	stb	r3,-1(r16)
     ca0:	d8c02817 	ldw	r3,160(sp)
     ca4:	80bfffc4 	addi	r2,r16,-1
     ca8:	1021883a 	mov	r16,r2
     cac:	1887c83a 	sub	r3,r3,r2
     cb0:	d8c02b15 	stw	r3,172(sp)
     cb4:	d8802b17 	ldw	r2,172(sp)
     cb8:	d9002a17 	ldw	r4,168(sp)
     cbc:	1100010e 	bge	r2,r4,cc4 <___vfprintf_internal_r+0x76c>
     cc0:	2005883a 	mov	r2,r4
     cc4:	d8802915 	stw	r2,164(sp)
     cc8:	d8003215 	stw	zero,200(sp)
     ccc:	e7003fcc 	andi	fp,fp,255
     cd0:	e700201c 	xori	fp,fp,128
     cd4:	e73fe004 	addi	fp,fp,-128
     cd8:	e0000326 	beq	fp,zero,ce8 <___vfprintf_internal_r+0x790>
     cdc:	d8c02917 	ldw	r3,164(sp)
     ce0:	18c00044 	addi	r3,r3,1
     ce4:	d8c02915 	stw	r3,164(sp)
     ce8:	90c0008c 	andi	r3,r18,2
     cec:	d8c02c15 	stw	r3,176(sp)
     cf0:	18000326 	beq	r3,zero,d00 <___vfprintf_internal_r+0x7a8>
     cf4:	d8c02917 	ldw	r3,164(sp)
     cf8:	18c00084 	addi	r3,r3,2
     cfc:	d8c02915 	stw	r3,164(sp)
     d00:	90c0210c 	andi	r3,r18,132
     d04:	d8c03015 	stw	r3,192(sp)
     d08:	1801c51e 	bne	r3,zero,1420 <___vfprintf_internal_r+0xec8>
     d0c:	d9003117 	ldw	r4,196(sp)
     d10:	d8c02917 	ldw	r3,164(sp)
     d14:	20e7c83a 	sub	r19,r4,r3
     d18:	04c1c10e 	bge	zero,r19,1420 <___vfprintf_internal_r+0xec8>
     d1c:	02400404 	movi	r9,16
     d20:	d8c02017 	ldw	r3,128(sp)
     d24:	d8801f17 	ldw	r2,124(sp)
     d28:	4cc52f0e 	bge	r9,r19,21e8 <___vfprintf_internal_r+0x1c90>
     d2c:	01400074 	movhi	r5,1
     d30:	297e4d84 	addi	r5,r5,-1738
     d34:	dc403b15 	stw	r17,236(sp)
     d38:	d9403515 	stw	r5,212(sp)
     d3c:	9823883a 	mov	r17,r19
     d40:	482d883a 	mov	r22,r9
     d44:	9027883a 	mov	r19,r18
     d48:	070001c4 	movi	fp,7
     d4c:	8025883a 	mov	r18,r16
     d50:	dc002d17 	ldw	r16,180(sp)
     d54:	00000306 	br	d64 <___vfprintf_internal_r+0x80c>
     d58:	8c7ffc04 	addi	r17,r17,-16
     d5c:	42000204 	addi	r8,r8,8
     d60:	b440130e 	bge	r22,r17,db0 <___vfprintf_internal_r+0x858>
     d64:	01000074 	movhi	r4,1
     d68:	18c00404 	addi	r3,r3,16
     d6c:	10800044 	addi	r2,r2,1
     d70:	213e4d84 	addi	r4,r4,-1738
     d74:	41000015 	stw	r4,0(r8)
     d78:	45800115 	stw	r22,4(r8)
     d7c:	d8c02015 	stw	r3,128(sp)
     d80:	d8801f15 	stw	r2,124(sp)
     d84:	e0bff40e 	bge	fp,r2,d58 <__alt_data_end+0xfffe0d58>
     d88:	d9801e04 	addi	r6,sp,120
     d8c:	b80b883a 	mov	r5,r23
     d90:	8009883a 	mov	r4,r16
     d94:	0007d380 	call	7d38 <__sprint_r>
     d98:	103ef31e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
     d9c:	8c7ffc04 	addi	r17,r17,-16
     da0:	d8c02017 	ldw	r3,128(sp)
     da4:	d8801f17 	ldw	r2,124(sp)
     da8:	da000404 	addi	r8,sp,16
     dac:	b47fed16 	blt	r22,r17,d64 <__alt_data_end+0xfffe0d64>
     db0:	9021883a 	mov	r16,r18
     db4:	9825883a 	mov	r18,r19
     db8:	8827883a 	mov	r19,r17
     dbc:	dc403b17 	ldw	r17,236(sp)
     dc0:	d9403517 	ldw	r5,212(sp)
     dc4:	98c7883a 	add	r3,r19,r3
     dc8:	10800044 	addi	r2,r2,1
     dcc:	41400015 	stw	r5,0(r8)
     dd0:	44c00115 	stw	r19,4(r8)
     dd4:	d8c02015 	stw	r3,128(sp)
     dd8:	d8801f15 	stw	r2,124(sp)
     ddc:	010001c4 	movi	r4,7
     de0:	2082c516 	blt	r4,r2,18f8 <___vfprintf_internal_r+0x13a0>
     de4:	df002787 	ldb	fp,158(sp)
     de8:	42000204 	addi	r8,r8,8
     dec:	e0000c26 	beq	fp,zero,e20 <___vfprintf_internal_r+0x8c8>
     df0:	d8801f17 	ldw	r2,124(sp)
     df4:	d9002784 	addi	r4,sp,158
     df8:	18c00044 	addi	r3,r3,1
     dfc:	10800044 	addi	r2,r2,1
     e00:	41000015 	stw	r4,0(r8)
     e04:	01000044 	movi	r4,1
     e08:	41000115 	stw	r4,4(r8)
     e0c:	d8c02015 	stw	r3,128(sp)
     e10:	d8801f15 	stw	r2,124(sp)
     e14:	010001c4 	movi	r4,7
     e18:	20825e16 	blt	r4,r2,1794 <___vfprintf_internal_r+0x123c>
     e1c:	42000204 	addi	r8,r8,8
     e20:	d8802c17 	ldw	r2,176(sp)
     e24:	10000c26 	beq	r2,zero,e58 <___vfprintf_internal_r+0x900>
     e28:	d8801f17 	ldw	r2,124(sp)
     e2c:	d9002704 	addi	r4,sp,156
     e30:	18c00084 	addi	r3,r3,2
     e34:	10800044 	addi	r2,r2,1
     e38:	41000015 	stw	r4,0(r8)
     e3c:	01000084 	movi	r4,2
     e40:	41000115 	stw	r4,4(r8)
     e44:	d8c02015 	stw	r3,128(sp)
     e48:	d8801f15 	stw	r2,124(sp)
     e4c:	010001c4 	movi	r4,7
     e50:	20825816 	blt	r4,r2,17b4 <___vfprintf_internal_r+0x125c>
     e54:	42000204 	addi	r8,r8,8
     e58:	d9003017 	ldw	r4,192(sp)
     e5c:	00802004 	movi	r2,128
     e60:	2081bb26 	beq	r4,r2,1550 <___vfprintf_internal_r+0xff8>
     e64:	d9402a17 	ldw	r5,168(sp)
     e68:	d8802b17 	ldw	r2,172(sp)
     e6c:	28adc83a 	sub	r22,r5,r2
     e70:	0580310e 	bge	zero,r22,f38 <___vfprintf_internal_r+0x9e0>
     e74:	07000404 	movi	fp,16
     e78:	d8801f17 	ldw	r2,124(sp)
     e7c:	e584360e 	bge	fp,r22,1f58 <___vfprintf_internal_r+0x1a00>
     e80:	01400074 	movhi	r5,1
     e84:	297e4984 	addi	r5,r5,-1754
     e88:	dc402a15 	stw	r17,168(sp)
     e8c:	d9402c15 	stw	r5,176(sp)
     e90:	b023883a 	mov	r17,r22
     e94:	04c001c4 	movi	r19,7
     e98:	a82d883a 	mov	r22,r21
     e9c:	902b883a 	mov	r21,r18
     ea0:	8025883a 	mov	r18,r16
     ea4:	dc002d17 	ldw	r16,180(sp)
     ea8:	00000306 	br	eb8 <___vfprintf_internal_r+0x960>
     eac:	8c7ffc04 	addi	r17,r17,-16
     eb0:	42000204 	addi	r8,r8,8
     eb4:	e440110e 	bge	fp,r17,efc <___vfprintf_internal_r+0x9a4>
     eb8:	18c00404 	addi	r3,r3,16
     ebc:	10800044 	addi	r2,r2,1
     ec0:	45000015 	stw	r20,0(r8)
     ec4:	47000115 	stw	fp,4(r8)
     ec8:	d8c02015 	stw	r3,128(sp)
     ecc:	d8801f15 	stw	r2,124(sp)
     ed0:	98bff60e 	bge	r19,r2,eac <__alt_data_end+0xfffe0eac>
     ed4:	d9801e04 	addi	r6,sp,120
     ed8:	b80b883a 	mov	r5,r23
     edc:	8009883a 	mov	r4,r16
     ee0:	0007d380 	call	7d38 <__sprint_r>
     ee4:	103ea01e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
     ee8:	8c7ffc04 	addi	r17,r17,-16
     eec:	d8c02017 	ldw	r3,128(sp)
     ef0:	d8801f17 	ldw	r2,124(sp)
     ef4:	da000404 	addi	r8,sp,16
     ef8:	e47fef16 	blt	fp,r17,eb8 <__alt_data_end+0xfffe0eb8>
     efc:	9021883a 	mov	r16,r18
     f00:	a825883a 	mov	r18,r21
     f04:	b02b883a 	mov	r21,r22
     f08:	882d883a 	mov	r22,r17
     f0c:	dc402a17 	ldw	r17,168(sp)
     f10:	d9002c17 	ldw	r4,176(sp)
     f14:	1d87883a 	add	r3,r3,r22
     f18:	10800044 	addi	r2,r2,1
     f1c:	41000015 	stw	r4,0(r8)
     f20:	45800115 	stw	r22,4(r8)
     f24:	d8c02015 	stw	r3,128(sp)
     f28:	d8801f15 	stw	r2,124(sp)
     f2c:	010001c4 	movi	r4,7
     f30:	20821016 	blt	r4,r2,1774 <___vfprintf_internal_r+0x121c>
     f34:	42000204 	addi	r8,r8,8
     f38:	9080400c 	andi	r2,r18,256
     f3c:	10013a1e 	bne	r2,zero,1428 <___vfprintf_internal_r+0xed0>
     f40:	d9402b17 	ldw	r5,172(sp)
     f44:	d8801f17 	ldw	r2,124(sp)
     f48:	44000015 	stw	r16,0(r8)
     f4c:	1947883a 	add	r3,r3,r5
     f50:	10800044 	addi	r2,r2,1
     f54:	41400115 	stw	r5,4(r8)
     f58:	d8c02015 	stw	r3,128(sp)
     f5c:	d8801f15 	stw	r2,124(sp)
     f60:	010001c4 	movi	r4,7
     f64:	2081f516 	blt	r4,r2,173c <___vfprintf_internal_r+0x11e4>
     f68:	42000204 	addi	r8,r8,8
     f6c:	9480010c 	andi	r18,r18,4
     f70:	90003226 	beq	r18,zero,103c <___vfprintf_internal_r+0xae4>
     f74:	d9403117 	ldw	r5,196(sp)
     f78:	d8802917 	ldw	r2,164(sp)
     f7c:	28a1c83a 	sub	r16,r5,r2
     f80:	04002e0e 	bge	zero,r16,103c <___vfprintf_internal_r+0xae4>
     f84:	04400404 	movi	r17,16
     f88:	d8801f17 	ldw	r2,124(sp)
     f8c:	8c04c40e 	bge	r17,r16,22a0 <___vfprintf_internal_r+0x1d48>
     f90:	01400074 	movhi	r5,1
     f94:	297e4d84 	addi	r5,r5,-1738
     f98:	d9403515 	stw	r5,212(sp)
     f9c:	048001c4 	movi	r18,7
     fa0:	dcc02d17 	ldw	r19,180(sp)
     fa4:	00000306 	br	fb4 <___vfprintf_internal_r+0xa5c>
     fa8:	843ffc04 	addi	r16,r16,-16
     fac:	42000204 	addi	r8,r8,8
     fb0:	8c00130e 	bge	r17,r16,1000 <___vfprintf_internal_r+0xaa8>
     fb4:	01000074 	movhi	r4,1
     fb8:	18c00404 	addi	r3,r3,16
     fbc:	10800044 	addi	r2,r2,1
     fc0:	213e4d84 	addi	r4,r4,-1738
     fc4:	41000015 	stw	r4,0(r8)
     fc8:	44400115 	stw	r17,4(r8)
     fcc:	d8c02015 	stw	r3,128(sp)
     fd0:	d8801f15 	stw	r2,124(sp)
     fd4:	90bff40e 	bge	r18,r2,fa8 <__alt_data_end+0xfffe0fa8>
     fd8:	d9801e04 	addi	r6,sp,120
     fdc:	b80b883a 	mov	r5,r23
     fe0:	9809883a 	mov	r4,r19
     fe4:	0007d380 	call	7d38 <__sprint_r>
     fe8:	103e5f1e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
     fec:	843ffc04 	addi	r16,r16,-16
     ff0:	d8c02017 	ldw	r3,128(sp)
     ff4:	d8801f17 	ldw	r2,124(sp)
     ff8:	da000404 	addi	r8,sp,16
     ffc:	8c3fed16 	blt	r17,r16,fb4 <__alt_data_end+0xfffe0fb4>
    1000:	d9403517 	ldw	r5,212(sp)
    1004:	1c07883a 	add	r3,r3,r16
    1008:	10800044 	addi	r2,r2,1
    100c:	41400015 	stw	r5,0(r8)
    1010:	44000115 	stw	r16,4(r8)
    1014:	d8c02015 	stw	r3,128(sp)
    1018:	d8801f15 	stw	r2,124(sp)
    101c:	010001c4 	movi	r4,7
    1020:	2080060e 	bge	r4,r2,103c <___vfprintf_internal_r+0xae4>
    1024:	d9002d17 	ldw	r4,180(sp)
    1028:	d9801e04 	addi	r6,sp,120
    102c:	b80b883a 	mov	r5,r23
    1030:	0007d380 	call	7d38 <__sprint_r>
    1034:	103e4c1e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    1038:	d8c02017 	ldw	r3,128(sp)
    103c:	d8803117 	ldw	r2,196(sp)
    1040:	d9002917 	ldw	r4,164(sp)
    1044:	1100010e 	bge	r2,r4,104c <___vfprintf_internal_r+0xaf4>
    1048:	2005883a 	mov	r2,r4
    104c:	d9402f17 	ldw	r5,188(sp)
    1050:	288b883a 	add	r5,r5,r2
    1054:	d9402f15 	stw	r5,188(sp)
    1058:	1801c01e 	bne	r3,zero,175c <___vfprintf_internal_r+0x1204>
    105c:	a8800007 	ldb	r2,0(r21)
    1060:	d8001f15 	stw	zero,124(sp)
    1064:	da000404 	addi	r8,sp,16
    1068:	103d751e 	bne	r2,zero,640 <__alt_data_end+0xfffe0640>
    106c:	a823883a 	mov	r17,r21
    1070:	003d8b06 	br	6a0 <__alt_data_end+0xfffe06a0>
    1074:	8025883a 	mov	r18,r16
    1078:	dc002903 	ldbu	r16,164(sp)
    107c:	e011883a 	mov	r8,fp
    1080:	84003fcc 	andi	r16,r16,255
    1084:	8005e51e 	bne	r16,zero,281c <___vfprintf_internal_r+0x22c4>
    1088:	94800414 	ori	r18,r18,16
    108c:	9080080c 	andi	r2,r18,32
    1090:	10022b26 	beq	r2,zero,1940 <___vfprintf_internal_r+0x13e8>
    1094:	d9002e17 	ldw	r4,184(sp)
    1098:	d9402a17 	ldw	r5,168(sp)
    109c:	d8002785 	stb	zero,158(sp)
    10a0:	20c00204 	addi	r3,r4,8
    10a4:	24c00017 	ldw	r19,0(r4)
    10a8:	25800117 	ldw	r22,4(r4)
    10ac:	28042e16 	blt	r5,zero,2168 <___vfprintf_internal_r+0x1c10>
    10b0:	013fdfc4 	movi	r4,-129
    10b4:	9d84b03a 	or	r2,r19,r22
    10b8:	d8c02e15 	stw	r3,184(sp)
    10bc:	9124703a 	and	r18,r18,r4
    10c0:	0039883a 	mov	fp,zero
    10c4:	103e801e 	bne	r2,zero,ac8 <__alt_data_end+0xfffe0ac8>
    10c8:	d9002a17 	ldw	r4,168(sp)
    10cc:	2002e01e 	bne	r4,zero,1c50 <___vfprintf_internal_r+0x16f8>
    10d0:	d8002a15 	stw	zero,168(sp)
    10d4:	d8002b15 	stw	zero,172(sp)
    10d8:	dc001e04 	addi	r16,sp,120
    10dc:	003ef506 	br	cb4 <__alt_data_end+0xfffe0cb4>
    10e0:	8025883a 	mov	r18,r16
    10e4:	dc002903 	ldbu	r16,164(sp)
    10e8:	e011883a 	mov	r8,fp
    10ec:	84003fcc 	andi	r16,r16,255
    10f0:	8005ba1e 	bne	r16,zero,27dc <___vfprintf_internal_r+0x2284>
    10f4:	01000074 	movhi	r4,1
    10f8:	213e3d04 	addi	r4,r4,-1804
    10fc:	d9003915 	stw	r4,228(sp)
    1100:	9080080c 	andi	r2,r18,32
    1104:	10006126 	beq	r2,zero,128c <___vfprintf_internal_r+0xd34>
    1108:	d9402e17 	ldw	r5,184(sp)
    110c:	2cc00017 	ldw	r19,0(r5)
    1110:	2d800117 	ldw	r22,4(r5)
    1114:	29400204 	addi	r5,r5,8
    1118:	d9402e15 	stw	r5,184(sp)
    111c:	9080004c 	andi	r2,r18,1
    1120:	1001ac26 	beq	r2,zero,17d4 <___vfprintf_internal_r+0x127c>
    1124:	9d84b03a 	or	r2,r19,r22
    1128:	10038526 	beq	r2,zero,1f40 <___vfprintf_internal_r+0x19e8>
    112c:	d8c02a17 	ldw	r3,168(sp)
    1130:	00800c04 	movi	r2,48
    1134:	d8802705 	stb	r2,156(sp)
    1138:	dc402745 	stb	r17,157(sp)
    113c:	d8002785 	stb	zero,158(sp)
    1140:	90800094 	ori	r2,r18,2
    1144:	18047916 	blt	r3,zero,232c <___vfprintf_internal_r+0x1dd4>
    1148:	00bfdfc4 	movi	r2,-129
    114c:	90a4703a 	and	r18,r18,r2
    1150:	94800094 	ori	r18,r18,2
    1154:	0039883a 	mov	fp,zero
    1158:	d9003917 	ldw	r4,228(sp)
    115c:	dc001e04 	addi	r16,sp,120
    1160:	988003cc 	andi	r2,r19,15
    1164:	b006973a 	slli	r3,r22,28
    1168:	2085883a 	add	r2,r4,r2
    116c:	9826d13a 	srli	r19,r19,4
    1170:	10800003 	ldbu	r2,0(r2)
    1174:	b02cd13a 	srli	r22,r22,4
    1178:	843fffc4 	addi	r16,r16,-1
    117c:	1ce6b03a 	or	r19,r3,r19
    1180:	80800005 	stb	r2,0(r16)
    1184:	9d84b03a 	or	r2,r19,r22
    1188:	103ff51e 	bne	r2,zero,1160 <__alt_data_end+0xfffe1160>
    118c:	d8c02817 	ldw	r3,160(sp)
    1190:	1c07c83a 	sub	r3,r3,r16
    1194:	d8c02b15 	stw	r3,172(sp)
    1198:	003ec606 	br	cb4 <__alt_data_end+0xfffe0cb4>
    119c:	8025883a 	mov	r18,r16
    11a0:	dc002903 	ldbu	r16,164(sp)
    11a4:	e011883a 	mov	r8,fp
    11a8:	84003fcc 	andi	r16,r16,255
    11ac:	803e9626 	beq	r16,zero,c08 <__alt_data_end+0xfffe0c08>
    11b0:	d8c02b03 	ldbu	r3,172(sp)
    11b4:	d8c02785 	stb	r3,158(sp)
    11b8:	003e9306 	br	c08 <__alt_data_end+0xfffe0c08>
    11bc:	00c00044 	movi	r3,1
    11c0:	d8c02905 	stb	r3,164(sp)
    11c4:	00c00ac4 	movi	r3,43
    11c8:	d8c02b05 	stb	r3,172(sp)
    11cc:	ac400007 	ldb	r17,0(r21)
    11d0:	003d4306 	br	6e0 <__alt_data_end+0xfffe06e0>
    11d4:	84000814 	ori	r16,r16,32
    11d8:	ac400007 	ldb	r17,0(r21)
    11dc:	003d4006 	br	6e0 <__alt_data_end+0xfffe06e0>
    11e0:	d8802e17 	ldw	r2,184(sp)
    11e4:	8025883a 	mov	r18,r16
    11e8:	d8002785 	stb	zero,158(sp)
    11ec:	14000017 	ldw	r16,0(r2)
    11f0:	e011883a 	mov	r8,fp
    11f4:	14c00104 	addi	r19,r2,4
    11f8:	80042d26 	beq	r16,zero,22b0 <___vfprintf_internal_r+0x1d58>
    11fc:	d8c02a17 	ldw	r3,168(sp)
    1200:	1803e416 	blt	r3,zero,2194 <___vfprintf_internal_r+0x1c3c>
    1204:	180d883a 	mov	r6,r3
    1208:	000b883a 	mov	r5,zero
    120c:	8009883a 	mov	r4,r16
    1210:	df003d15 	stw	fp,244(sp)
    1214:	0005e900 	call	5e90 <memchr>
    1218:	da003d17 	ldw	r8,244(sp)
    121c:	10046826 	beq	r2,zero,23c0 <___vfprintf_internal_r+0x1e68>
    1220:	1405c83a 	sub	r2,r2,r16
    1224:	d8802b15 	stw	r2,172(sp)
    1228:	1003e016 	blt	r2,zero,21ac <___vfprintf_internal_r+0x1c54>
    122c:	df002783 	ldbu	fp,158(sp)
    1230:	d8802915 	stw	r2,164(sp)
    1234:	dcc02e15 	stw	r19,184(sp)
    1238:	d8002a15 	stw	zero,168(sp)
    123c:	d8003215 	stw	zero,200(sp)
    1240:	003ea206 	br	ccc <__alt_data_end+0xfffe0ccc>
    1244:	8025883a 	mov	r18,r16
    1248:	dc002903 	ldbu	r16,164(sp)
    124c:	e011883a 	mov	r8,fp
    1250:	84003fcc 	andi	r16,r16,255
    1254:	803f8d26 	beq	r16,zero,108c <__alt_data_end+0xfffe108c>
    1258:	d8c02b03 	ldbu	r3,172(sp)
    125c:	d8c02785 	stb	r3,158(sp)
    1260:	003f8a06 	br	108c <__alt_data_end+0xfffe108c>
    1264:	8025883a 	mov	r18,r16
    1268:	dc002903 	ldbu	r16,164(sp)
    126c:	e011883a 	mov	r8,fp
    1270:	84003fcc 	andi	r16,r16,255
    1274:	8005661e 	bne	r16,zero,2810 <___vfprintf_internal_r+0x22b8>
    1278:	01000074 	movhi	r4,1
    127c:	213e4204 	addi	r4,r4,-1784
    1280:	d9003915 	stw	r4,228(sp)
    1284:	9080080c 	andi	r2,r18,32
    1288:	103f9f1e 	bne	r2,zero,1108 <__alt_data_end+0xfffe1108>
    128c:	9080040c 	andi	r2,r18,16
    1290:	1002eb26 	beq	r2,zero,1e40 <___vfprintf_internal_r+0x18e8>
    1294:	d8802e17 	ldw	r2,184(sp)
    1298:	002d883a 	mov	r22,zero
    129c:	14c00017 	ldw	r19,0(r2)
    12a0:	10800104 	addi	r2,r2,4
    12a4:	d8802e15 	stw	r2,184(sp)
    12a8:	003f9c06 	br	111c <__alt_data_end+0xfffe111c>
    12ac:	d8802b07 	ldb	r2,172(sp)
    12b0:	1002e11e 	bne	r2,zero,1e38 <___vfprintf_internal_r+0x18e0>
    12b4:	00c00044 	movi	r3,1
    12b8:	d8c02905 	stb	r3,164(sp)
    12bc:	00c00804 	movi	r3,32
    12c0:	d8c02b05 	stb	r3,172(sp)
    12c4:	ac400007 	ldb	r17,0(r21)
    12c8:	003d0506 	br	6e0 <__alt_data_end+0xfffe06e0>
    12cc:	84000054 	ori	r16,r16,1
    12d0:	ac400007 	ldb	r17,0(r21)
    12d4:	003d0206 	br	6e0 <__alt_data_end+0xfffe06e0>
    12d8:	8025883a 	mov	r18,r16
    12dc:	dc002903 	ldbu	r16,164(sp)
    12e0:	e011883a 	mov	r8,fp
    12e4:	84003fcc 	andi	r16,r16,255
    12e8:	803de726 	beq	r16,zero,a88 <__alt_data_end+0xfffe0a88>
    12ec:	d8c02b03 	ldbu	r3,172(sp)
    12f0:	d8c02785 	stb	r3,158(sp)
    12f4:	003de406 	br	a88 <__alt_data_end+0xfffe0a88>
    12f8:	84001014 	ori	r16,r16,64
    12fc:	ac400007 	ldb	r17,0(r21)
    1300:	003cf706 	br	6e0 <__alt_data_end+0xfffe06e0>
    1304:	ac400007 	ldb	r17,0(r21)
    1308:	00801b04 	movi	r2,108
    130c:	88838f26 	beq	r17,r2,214c <___vfprintf_internal_r+0x1bf4>
    1310:	84000414 	ori	r16,r16,16
    1314:	003cf206 	br	6e0 <__alt_data_end+0xfffe06e0>
    1318:	8025883a 	mov	r18,r16
    131c:	dc002903 	ldbu	r16,164(sp)
    1320:	e011883a 	mov	r8,fp
    1324:	84003fcc 	andi	r16,r16,255
    1328:	80053f1e 	bne	r16,zero,2828 <___vfprintf_internal_r+0x22d0>
    132c:	9080080c 	andi	r2,r18,32
    1330:	1002d226 	beq	r2,zero,1e7c <___vfprintf_internal_r+0x1924>
    1334:	d9002e17 	ldw	r4,184(sp)
    1338:	d9402f17 	ldw	r5,188(sp)
    133c:	20800017 	ldw	r2,0(r4)
    1340:	2807d7fa 	srai	r3,r5,31
    1344:	21000104 	addi	r4,r4,4
    1348:	d9002e15 	stw	r4,184(sp)
    134c:	11400015 	stw	r5,0(r2)
    1350:	10c00115 	stw	r3,4(r2)
    1354:	003cb806 	br	638 <__alt_data_end+0xfffe0638>
    1358:	d8c02e17 	ldw	r3,184(sp)
    135c:	d9002e17 	ldw	r4,184(sp)
    1360:	8025883a 	mov	r18,r16
    1364:	18800017 	ldw	r2,0(r3)
    1368:	21000104 	addi	r4,r4,4
    136c:	00c00044 	movi	r3,1
    1370:	e011883a 	mov	r8,fp
    1374:	d8c02915 	stw	r3,164(sp)
    1378:	d8002785 	stb	zero,158(sp)
    137c:	d8801405 	stb	r2,80(sp)
    1380:	d9002e15 	stw	r4,184(sp)
    1384:	d8c02b15 	stw	r3,172(sp)
    1388:	d8002a15 	stw	zero,168(sp)
    138c:	d8003215 	stw	zero,200(sp)
    1390:	dc001404 	addi	r16,sp,80
    1394:	0039883a 	mov	fp,zero
    1398:	003e5306 	br	ce8 <__alt_data_end+0xfffe0ce8>
    139c:	01000074 	movhi	r4,1
    13a0:	213e4204 	addi	r4,r4,-1784
    13a4:	0039883a 	mov	fp,zero
    13a8:	d9003915 	stw	r4,228(sp)
    13ac:	04401e04 	movi	r17,120
    13b0:	003f6906 	br	1158 <__alt_data_end+0xfffe1158>
    13b4:	8025883a 	mov	r18,r16
    13b8:	dc002903 	ldbu	r16,164(sp)
    13bc:	e011883a 	mov	r8,fp
    13c0:	84003fcc 	andi	r16,r16,255
    13c4:	8005081e 	bne	r16,zero,27e8 <___vfprintf_internal_r+0x2290>
    13c8:	883d6126 	beq	r17,zero,950 <__alt_data_end+0xfffe0950>
    13cc:	00c00044 	movi	r3,1
    13d0:	d8c02915 	stw	r3,164(sp)
    13d4:	dc401405 	stb	r17,80(sp)
    13d8:	d8002785 	stb	zero,158(sp)
    13dc:	003fe906 	br	1384 <__alt_data_end+0xfffe1384>
    13e0:	01400074 	movhi	r5,1
    13e4:	297e4204 	addi	r5,r5,-1784
    13e8:	d9403915 	stw	r5,228(sp)
    13ec:	d8c02e15 	stw	r3,184(sp)
    13f0:	1025883a 	mov	r18,r2
    13f4:	04401e04 	movi	r17,120
    13f8:	9d84b03a 	or	r2,r19,r22
    13fc:	1000fc1e 	bne	r2,zero,17f0 <___vfprintf_internal_r+0x1298>
    1400:	0039883a 	mov	fp,zero
    1404:	00800084 	movi	r2,2
    1408:	10803fcc 	andi	r2,r2,255
    140c:	00c00044 	movi	r3,1
    1410:	10c20f26 	beq	r2,r3,1c50 <___vfprintf_internal_r+0x16f8>
    1414:	00c00084 	movi	r3,2
    1418:	10fd3326 	beq	r2,r3,8e8 <__alt_data_end+0xfffe08e8>
    141c:	003e0b06 	br	c4c <__alt_data_end+0xfffe0c4c>
    1420:	d8c02017 	ldw	r3,128(sp)
    1424:	003e7106 	br	dec <__alt_data_end+0xfffe0dec>
    1428:	00801944 	movi	r2,101
    142c:	14407e0e 	bge	r2,r17,1628 <___vfprintf_internal_r+0x10d0>
    1430:	d9003617 	ldw	r4,216(sp)
    1434:	d9403817 	ldw	r5,224(sp)
    1438:	000d883a 	mov	r6,zero
    143c:	000f883a 	mov	r7,zero
    1440:	d8c03c15 	stw	r3,240(sp)
    1444:	da003d15 	stw	r8,244(sp)
    1448:	000bc980 	call	bc98 <__eqdf2>
    144c:	d8c03c17 	ldw	r3,240(sp)
    1450:	da003d17 	ldw	r8,244(sp)
    1454:	1000f71e 	bne	r2,zero,1834 <___vfprintf_internal_r+0x12dc>
    1458:	d8801f17 	ldw	r2,124(sp)
    145c:	01000074 	movhi	r4,1
    1460:	213e4904 	addi	r4,r4,-1756
    1464:	18c00044 	addi	r3,r3,1
    1468:	10800044 	addi	r2,r2,1
    146c:	41000015 	stw	r4,0(r8)
    1470:	01000044 	movi	r4,1
    1474:	41000115 	stw	r4,4(r8)
    1478:	d8c02015 	stw	r3,128(sp)
    147c:	d8801f15 	stw	r2,124(sp)
    1480:	010001c4 	movi	r4,7
    1484:	2082b816 	blt	r4,r2,1f68 <___vfprintf_internal_r+0x1a10>
    1488:	42000204 	addi	r8,r8,8
    148c:	d8802617 	ldw	r2,152(sp)
    1490:	d9403317 	ldw	r5,204(sp)
    1494:	11400216 	blt	r2,r5,14a0 <___vfprintf_internal_r+0xf48>
    1498:	9080004c 	andi	r2,r18,1
    149c:	103eb326 	beq	r2,zero,f6c <__alt_data_end+0xfffe0f6c>
    14a0:	d8803717 	ldw	r2,220(sp)
    14a4:	d9003417 	ldw	r4,208(sp)
    14a8:	d9403717 	ldw	r5,220(sp)
    14ac:	1887883a 	add	r3,r3,r2
    14b0:	d8801f17 	ldw	r2,124(sp)
    14b4:	41000015 	stw	r4,0(r8)
    14b8:	41400115 	stw	r5,4(r8)
    14bc:	10800044 	addi	r2,r2,1
    14c0:	d8c02015 	stw	r3,128(sp)
    14c4:	d8801f15 	stw	r2,124(sp)
    14c8:	010001c4 	movi	r4,7
    14cc:	20832916 	blt	r4,r2,2174 <___vfprintf_internal_r+0x1c1c>
    14d0:	42000204 	addi	r8,r8,8
    14d4:	d8803317 	ldw	r2,204(sp)
    14d8:	143fffc4 	addi	r16,r2,-1
    14dc:	043ea30e 	bge	zero,r16,f6c <__alt_data_end+0xfffe0f6c>
    14e0:	04400404 	movi	r17,16
    14e4:	d8801f17 	ldw	r2,124(sp)
    14e8:	8c00880e 	bge	r17,r16,170c <___vfprintf_internal_r+0x11b4>
    14ec:	01400074 	movhi	r5,1
    14f0:	297e4984 	addi	r5,r5,-1754
    14f4:	d9402c15 	stw	r5,176(sp)
    14f8:	058001c4 	movi	r22,7
    14fc:	dcc02d17 	ldw	r19,180(sp)
    1500:	00000306 	br	1510 <___vfprintf_internal_r+0xfb8>
    1504:	42000204 	addi	r8,r8,8
    1508:	843ffc04 	addi	r16,r16,-16
    150c:	8c00820e 	bge	r17,r16,1718 <___vfprintf_internal_r+0x11c0>
    1510:	18c00404 	addi	r3,r3,16
    1514:	10800044 	addi	r2,r2,1
    1518:	45000015 	stw	r20,0(r8)
    151c:	44400115 	stw	r17,4(r8)
    1520:	d8c02015 	stw	r3,128(sp)
    1524:	d8801f15 	stw	r2,124(sp)
    1528:	b0bff60e 	bge	r22,r2,1504 <__alt_data_end+0xfffe1504>
    152c:	d9801e04 	addi	r6,sp,120
    1530:	b80b883a 	mov	r5,r23
    1534:	9809883a 	mov	r4,r19
    1538:	0007d380 	call	7d38 <__sprint_r>
    153c:	103d0a1e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    1540:	d8c02017 	ldw	r3,128(sp)
    1544:	d8801f17 	ldw	r2,124(sp)
    1548:	da000404 	addi	r8,sp,16
    154c:	003fee06 	br	1508 <__alt_data_end+0xfffe1508>
    1550:	d9403117 	ldw	r5,196(sp)
    1554:	d8802917 	ldw	r2,164(sp)
    1558:	28adc83a 	sub	r22,r5,r2
    155c:	05be410e 	bge	zero,r22,e64 <__alt_data_end+0xfffe0e64>
    1560:	07000404 	movi	fp,16
    1564:	d8801f17 	ldw	r2,124(sp)
    1568:	e5838f0e 	bge	fp,r22,23a8 <___vfprintf_internal_r+0x1e50>
    156c:	01400074 	movhi	r5,1
    1570:	297e4984 	addi	r5,r5,-1754
    1574:	dc403015 	stw	r17,192(sp)
    1578:	d9402c15 	stw	r5,176(sp)
    157c:	b023883a 	mov	r17,r22
    1580:	04c001c4 	movi	r19,7
    1584:	a82d883a 	mov	r22,r21
    1588:	902b883a 	mov	r21,r18
    158c:	8025883a 	mov	r18,r16
    1590:	dc002d17 	ldw	r16,180(sp)
    1594:	00000306 	br	15a4 <___vfprintf_internal_r+0x104c>
    1598:	8c7ffc04 	addi	r17,r17,-16
    159c:	42000204 	addi	r8,r8,8
    15a0:	e440110e 	bge	fp,r17,15e8 <___vfprintf_internal_r+0x1090>
    15a4:	18c00404 	addi	r3,r3,16
    15a8:	10800044 	addi	r2,r2,1
    15ac:	45000015 	stw	r20,0(r8)
    15b0:	47000115 	stw	fp,4(r8)
    15b4:	d8c02015 	stw	r3,128(sp)
    15b8:	d8801f15 	stw	r2,124(sp)
    15bc:	98bff60e 	bge	r19,r2,1598 <__alt_data_end+0xfffe1598>
    15c0:	d9801e04 	addi	r6,sp,120
    15c4:	b80b883a 	mov	r5,r23
    15c8:	8009883a 	mov	r4,r16
    15cc:	0007d380 	call	7d38 <__sprint_r>
    15d0:	103ce51e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    15d4:	8c7ffc04 	addi	r17,r17,-16
    15d8:	d8c02017 	ldw	r3,128(sp)
    15dc:	d8801f17 	ldw	r2,124(sp)
    15e0:	da000404 	addi	r8,sp,16
    15e4:	e47fef16 	blt	fp,r17,15a4 <__alt_data_end+0xfffe15a4>
    15e8:	9021883a 	mov	r16,r18
    15ec:	a825883a 	mov	r18,r21
    15f0:	b02b883a 	mov	r21,r22
    15f4:	882d883a 	mov	r22,r17
    15f8:	dc403017 	ldw	r17,192(sp)
    15fc:	d9002c17 	ldw	r4,176(sp)
    1600:	1d87883a 	add	r3,r3,r22
    1604:	10800044 	addi	r2,r2,1
    1608:	41000015 	stw	r4,0(r8)
    160c:	45800115 	stw	r22,4(r8)
    1610:	d8c02015 	stw	r3,128(sp)
    1614:	d8801f15 	stw	r2,124(sp)
    1618:	010001c4 	movi	r4,7
    161c:	20818e16 	blt	r4,r2,1c58 <___vfprintf_internal_r+0x1700>
    1620:	42000204 	addi	r8,r8,8
    1624:	003e0f06 	br	e64 <__alt_data_end+0xfffe0e64>
    1628:	d9403317 	ldw	r5,204(sp)
    162c:	00800044 	movi	r2,1
    1630:	18c00044 	addi	r3,r3,1
    1634:	1141530e 	bge	r2,r5,1b84 <___vfprintf_internal_r+0x162c>
    1638:	dc401f17 	ldw	r17,124(sp)
    163c:	00800044 	movi	r2,1
    1640:	40800115 	stw	r2,4(r8)
    1644:	8c400044 	addi	r17,r17,1
    1648:	44000015 	stw	r16,0(r8)
    164c:	d8c02015 	stw	r3,128(sp)
    1650:	dc401f15 	stw	r17,124(sp)
    1654:	008001c4 	movi	r2,7
    1658:	14416b16 	blt	r2,r17,1c08 <___vfprintf_internal_r+0x16b0>
    165c:	42000204 	addi	r8,r8,8
    1660:	d8803717 	ldw	r2,220(sp)
    1664:	d9003417 	ldw	r4,208(sp)
    1668:	8c400044 	addi	r17,r17,1
    166c:	10c7883a 	add	r3,r2,r3
    1670:	40800115 	stw	r2,4(r8)
    1674:	41000015 	stw	r4,0(r8)
    1678:	d8c02015 	stw	r3,128(sp)
    167c:	dc401f15 	stw	r17,124(sp)
    1680:	008001c4 	movi	r2,7
    1684:	14416916 	blt	r2,r17,1c2c <___vfprintf_internal_r+0x16d4>
    1688:	45800204 	addi	r22,r8,8
    168c:	d9003617 	ldw	r4,216(sp)
    1690:	d9403817 	ldw	r5,224(sp)
    1694:	000d883a 	mov	r6,zero
    1698:	000f883a 	mov	r7,zero
    169c:	d8c03c15 	stw	r3,240(sp)
    16a0:	000bc980 	call	bc98 <__eqdf2>
    16a4:	d8c03c17 	ldw	r3,240(sp)
    16a8:	1000bc26 	beq	r2,zero,199c <___vfprintf_internal_r+0x1444>
    16ac:	d9403317 	ldw	r5,204(sp)
    16b0:	84000044 	addi	r16,r16,1
    16b4:	8c400044 	addi	r17,r17,1
    16b8:	28bfffc4 	addi	r2,r5,-1
    16bc:	1887883a 	add	r3,r3,r2
    16c0:	b0800115 	stw	r2,4(r22)
    16c4:	b4000015 	stw	r16,0(r22)
    16c8:	d8c02015 	stw	r3,128(sp)
    16cc:	dc401f15 	stw	r17,124(sp)
    16d0:	008001c4 	movi	r2,7
    16d4:	14414316 	blt	r2,r17,1be4 <___vfprintf_internal_r+0x168c>
    16d8:	b5800204 	addi	r22,r22,8
    16dc:	d9003a17 	ldw	r4,232(sp)
    16e0:	df0022c4 	addi	fp,sp,139
    16e4:	8c400044 	addi	r17,r17,1
    16e8:	20c7883a 	add	r3,r4,r3
    16ec:	b7000015 	stw	fp,0(r22)
    16f0:	b1000115 	stw	r4,4(r22)
    16f4:	d8c02015 	stw	r3,128(sp)
    16f8:	dc401f15 	stw	r17,124(sp)
    16fc:	008001c4 	movi	r2,7
    1700:	14400e16 	blt	r2,r17,173c <___vfprintf_internal_r+0x11e4>
    1704:	b2000204 	addi	r8,r22,8
    1708:	003e1806 	br	f6c <__alt_data_end+0xfffe0f6c>
    170c:	01000074 	movhi	r4,1
    1710:	213e4984 	addi	r4,r4,-1754
    1714:	d9002c15 	stw	r4,176(sp)
    1718:	d9002c17 	ldw	r4,176(sp)
    171c:	1c07883a 	add	r3,r3,r16
    1720:	44000115 	stw	r16,4(r8)
    1724:	41000015 	stw	r4,0(r8)
    1728:	10800044 	addi	r2,r2,1
    172c:	d8c02015 	stw	r3,128(sp)
    1730:	d8801f15 	stw	r2,124(sp)
    1734:	010001c4 	movi	r4,7
    1738:	20be0b0e 	bge	r4,r2,f68 <__alt_data_end+0xfffe0f68>
    173c:	d9002d17 	ldw	r4,180(sp)
    1740:	d9801e04 	addi	r6,sp,120
    1744:	b80b883a 	mov	r5,r23
    1748:	0007d380 	call	7d38 <__sprint_r>
    174c:	103c861e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    1750:	d8c02017 	ldw	r3,128(sp)
    1754:	da000404 	addi	r8,sp,16
    1758:	003e0406 	br	f6c <__alt_data_end+0xfffe0f6c>
    175c:	d9002d17 	ldw	r4,180(sp)
    1760:	d9801e04 	addi	r6,sp,120
    1764:	b80b883a 	mov	r5,r23
    1768:	0007d380 	call	7d38 <__sprint_r>
    176c:	103e3b26 	beq	r2,zero,105c <__alt_data_end+0xfffe105c>
    1770:	003c7d06 	br	968 <__alt_data_end+0xfffe0968>
    1774:	d9002d17 	ldw	r4,180(sp)
    1778:	d9801e04 	addi	r6,sp,120
    177c:	b80b883a 	mov	r5,r23
    1780:	0007d380 	call	7d38 <__sprint_r>
    1784:	103c781e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    1788:	d8c02017 	ldw	r3,128(sp)
    178c:	da000404 	addi	r8,sp,16
    1790:	003de906 	br	f38 <__alt_data_end+0xfffe0f38>
    1794:	d9002d17 	ldw	r4,180(sp)
    1798:	d9801e04 	addi	r6,sp,120
    179c:	b80b883a 	mov	r5,r23
    17a0:	0007d380 	call	7d38 <__sprint_r>
    17a4:	103c701e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    17a8:	d8c02017 	ldw	r3,128(sp)
    17ac:	da000404 	addi	r8,sp,16
    17b0:	003d9b06 	br	e20 <__alt_data_end+0xfffe0e20>
    17b4:	d9002d17 	ldw	r4,180(sp)
    17b8:	d9801e04 	addi	r6,sp,120
    17bc:	b80b883a 	mov	r5,r23
    17c0:	0007d380 	call	7d38 <__sprint_r>
    17c4:	103c681e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    17c8:	d8c02017 	ldw	r3,128(sp)
    17cc:	da000404 	addi	r8,sp,16
    17d0:	003da106 	br	e58 <__alt_data_end+0xfffe0e58>
    17d4:	d9402a17 	ldw	r5,168(sp)
    17d8:	d8002785 	stb	zero,158(sp)
    17dc:	283f0616 	blt	r5,zero,13f8 <__alt_data_end+0xfffe13f8>
    17e0:	00ffdfc4 	movi	r3,-129
    17e4:	9d84b03a 	or	r2,r19,r22
    17e8:	90e4703a 	and	r18,r18,r3
    17ec:	103c3b26 	beq	r2,zero,8dc <__alt_data_end+0xfffe08dc>
    17f0:	0039883a 	mov	fp,zero
    17f4:	003e5806 	br	1158 <__alt_data_end+0xfffe1158>
    17f8:	9080040c 	andi	r2,r18,16
    17fc:	1001b326 	beq	r2,zero,1ecc <___vfprintf_internal_r+0x1974>
    1800:	d8c02e17 	ldw	r3,184(sp)
    1804:	d9002a17 	ldw	r4,168(sp)
    1808:	d8002785 	stb	zero,158(sp)
    180c:	18800104 	addi	r2,r3,4
    1810:	1cc00017 	ldw	r19,0(r3)
    1814:	002d883a 	mov	r22,zero
    1818:	2001b516 	blt	r4,zero,1ef0 <___vfprintf_internal_r+0x1998>
    181c:	00ffdfc4 	movi	r3,-129
    1820:	d8802e15 	stw	r2,184(sp)
    1824:	90e4703a 	and	r18,r18,r3
    1828:	983d0526 	beq	r19,zero,c40 <__alt_data_end+0xfffe0c40>
    182c:	0039883a 	mov	fp,zero
    1830:	003d0806 	br	c54 <__alt_data_end+0xfffe0c54>
    1834:	dc402617 	ldw	r17,152(sp)
    1838:	0441d30e 	bge	zero,r17,1f88 <___vfprintf_internal_r+0x1a30>
    183c:	dc403217 	ldw	r17,200(sp)
    1840:	d8803317 	ldw	r2,204(sp)
    1844:	1440010e 	bge	r2,r17,184c <___vfprintf_internal_r+0x12f4>
    1848:	1023883a 	mov	r17,r2
    184c:	04400a0e 	bge	zero,r17,1878 <___vfprintf_internal_r+0x1320>
    1850:	d8801f17 	ldw	r2,124(sp)
    1854:	1c47883a 	add	r3,r3,r17
    1858:	44000015 	stw	r16,0(r8)
    185c:	10800044 	addi	r2,r2,1
    1860:	44400115 	stw	r17,4(r8)
    1864:	d8c02015 	stw	r3,128(sp)
    1868:	d8801f15 	stw	r2,124(sp)
    186c:	010001c4 	movi	r4,7
    1870:	20826516 	blt	r4,r2,2208 <___vfprintf_internal_r+0x1cb0>
    1874:	42000204 	addi	r8,r8,8
    1878:	88026116 	blt	r17,zero,2200 <___vfprintf_internal_r+0x1ca8>
    187c:	d9003217 	ldw	r4,200(sp)
    1880:	2463c83a 	sub	r17,r4,r17
    1884:	04407b0e 	bge	zero,r17,1a74 <___vfprintf_internal_r+0x151c>
    1888:	05800404 	movi	r22,16
    188c:	d8801f17 	ldw	r2,124(sp)
    1890:	b4419d0e 	bge	r22,r17,1f08 <___vfprintf_internal_r+0x19b0>
    1894:	01000074 	movhi	r4,1
    1898:	213e4984 	addi	r4,r4,-1754
    189c:	d9002c15 	stw	r4,176(sp)
    18a0:	070001c4 	movi	fp,7
    18a4:	dcc02d17 	ldw	r19,180(sp)
    18a8:	00000306 	br	18b8 <___vfprintf_internal_r+0x1360>
    18ac:	42000204 	addi	r8,r8,8
    18b0:	8c7ffc04 	addi	r17,r17,-16
    18b4:	b441970e 	bge	r22,r17,1f14 <___vfprintf_internal_r+0x19bc>
    18b8:	18c00404 	addi	r3,r3,16
    18bc:	10800044 	addi	r2,r2,1
    18c0:	45000015 	stw	r20,0(r8)
    18c4:	45800115 	stw	r22,4(r8)
    18c8:	d8c02015 	stw	r3,128(sp)
    18cc:	d8801f15 	stw	r2,124(sp)
    18d0:	e0bff60e 	bge	fp,r2,18ac <__alt_data_end+0xfffe18ac>
    18d4:	d9801e04 	addi	r6,sp,120
    18d8:	b80b883a 	mov	r5,r23
    18dc:	9809883a 	mov	r4,r19
    18e0:	0007d380 	call	7d38 <__sprint_r>
    18e4:	103c201e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    18e8:	d8c02017 	ldw	r3,128(sp)
    18ec:	d8801f17 	ldw	r2,124(sp)
    18f0:	da000404 	addi	r8,sp,16
    18f4:	003fee06 	br	18b0 <__alt_data_end+0xfffe18b0>
    18f8:	d9002d17 	ldw	r4,180(sp)
    18fc:	d9801e04 	addi	r6,sp,120
    1900:	b80b883a 	mov	r5,r23
    1904:	0007d380 	call	7d38 <__sprint_r>
    1908:	103c171e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    190c:	d8c02017 	ldw	r3,128(sp)
    1910:	df002787 	ldb	fp,158(sp)
    1914:	da000404 	addi	r8,sp,16
    1918:	003d3406 	br	dec <__alt_data_end+0xfffe0dec>
    191c:	9080040c 	andi	r2,r18,16
    1920:	10016126 	beq	r2,zero,1ea8 <___vfprintf_internal_r+0x1950>
    1924:	d9402e17 	ldw	r5,184(sp)
    1928:	2cc00017 	ldw	r19,0(r5)
    192c:	29400104 	addi	r5,r5,4
    1930:	d9402e15 	stw	r5,184(sp)
    1934:	982dd7fa 	srai	r22,r19,31
    1938:	b005883a 	mov	r2,r22
    193c:	003c5a06 	br	aa8 <__alt_data_end+0xfffe0aa8>
    1940:	9080040c 	andi	r2,r18,16
    1944:	10003526 	beq	r2,zero,1a1c <___vfprintf_internal_r+0x14c4>
    1948:	d8c02e17 	ldw	r3,184(sp)
    194c:	d9002a17 	ldw	r4,168(sp)
    1950:	d8002785 	stb	zero,158(sp)
    1954:	18800104 	addi	r2,r3,4
    1958:	1cc00017 	ldw	r19,0(r3)
    195c:	002d883a 	mov	r22,zero
    1960:	20003716 	blt	r4,zero,1a40 <___vfprintf_internal_r+0x14e8>
    1964:	00ffdfc4 	movi	r3,-129
    1968:	d8802e15 	stw	r2,184(sp)
    196c:	90e4703a 	and	r18,r18,r3
    1970:	0039883a 	mov	fp,zero
    1974:	983dd426 	beq	r19,zero,10c8 <__alt_data_end+0xfffe10c8>
    1978:	00800244 	movi	r2,9
    197c:	14fc5336 	bltu	r2,r19,acc <__alt_data_end+0xfffe0acc>
    1980:	d8c02817 	ldw	r3,160(sp)
    1984:	dc001dc4 	addi	r16,sp,119
    1988:	9cc00c04 	addi	r19,r19,48
    198c:	1c07c83a 	sub	r3,r3,r16
    1990:	dcc01dc5 	stb	r19,119(sp)
    1994:	d8c02b15 	stw	r3,172(sp)
    1998:	003cc606 	br	cb4 <__alt_data_end+0xfffe0cb4>
    199c:	d8803317 	ldw	r2,204(sp)
    19a0:	143fffc4 	addi	r16,r2,-1
    19a4:	043f4d0e 	bge	zero,r16,16dc <__alt_data_end+0xfffe16dc>
    19a8:	07000404 	movi	fp,16
    19ac:	e400810e 	bge	fp,r16,1bb4 <___vfprintf_internal_r+0x165c>
    19b0:	01400074 	movhi	r5,1
    19b4:	297e4984 	addi	r5,r5,-1754
    19b8:	d9402c15 	stw	r5,176(sp)
    19bc:	01c001c4 	movi	r7,7
    19c0:	dcc02d17 	ldw	r19,180(sp)
    19c4:	00000306 	br	19d4 <___vfprintf_internal_r+0x147c>
    19c8:	b5800204 	addi	r22,r22,8
    19cc:	843ffc04 	addi	r16,r16,-16
    19d0:	e4007b0e 	bge	fp,r16,1bc0 <___vfprintf_internal_r+0x1668>
    19d4:	18c00404 	addi	r3,r3,16
    19d8:	8c400044 	addi	r17,r17,1
    19dc:	b5000015 	stw	r20,0(r22)
    19e0:	b7000115 	stw	fp,4(r22)
    19e4:	d8c02015 	stw	r3,128(sp)
    19e8:	dc401f15 	stw	r17,124(sp)
    19ec:	3c7ff60e 	bge	r7,r17,19c8 <__alt_data_end+0xfffe19c8>
    19f0:	d9801e04 	addi	r6,sp,120
    19f4:	b80b883a 	mov	r5,r23
    19f8:	9809883a 	mov	r4,r19
    19fc:	d9c03c15 	stw	r7,240(sp)
    1a00:	0007d380 	call	7d38 <__sprint_r>
    1a04:	d9c03c17 	ldw	r7,240(sp)
    1a08:	103bd71e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    1a0c:	d8c02017 	ldw	r3,128(sp)
    1a10:	dc401f17 	ldw	r17,124(sp)
    1a14:	dd800404 	addi	r22,sp,16
    1a18:	003fec06 	br	19cc <__alt_data_end+0xfffe19cc>
    1a1c:	9080100c 	andi	r2,r18,64
    1a20:	d8002785 	stb	zero,158(sp)
    1a24:	10010e26 	beq	r2,zero,1e60 <___vfprintf_internal_r+0x1908>
    1a28:	d9402e17 	ldw	r5,184(sp)
    1a2c:	d8c02a17 	ldw	r3,168(sp)
    1a30:	002d883a 	mov	r22,zero
    1a34:	28800104 	addi	r2,r5,4
    1a38:	2cc0000b 	ldhu	r19,0(r5)
    1a3c:	183fc90e 	bge	r3,zero,1964 <__alt_data_end+0xfffe1964>
    1a40:	d8802e15 	stw	r2,184(sp)
    1a44:	0039883a 	mov	fp,zero
    1a48:	9d84b03a 	or	r2,r19,r22
    1a4c:	103c1e1e 	bne	r2,zero,ac8 <__alt_data_end+0xfffe0ac8>
    1a50:	00800044 	movi	r2,1
    1a54:	003e6c06 	br	1408 <__alt_data_end+0xfffe1408>
    1a58:	d9002d17 	ldw	r4,180(sp)
    1a5c:	d9801e04 	addi	r6,sp,120
    1a60:	b80b883a 	mov	r5,r23
    1a64:	0007d380 	call	7d38 <__sprint_r>
    1a68:	103bbf1e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    1a6c:	d8c02017 	ldw	r3,128(sp)
    1a70:	da000404 	addi	r8,sp,16
    1a74:	d9003217 	ldw	r4,200(sp)
    1a78:	d8802617 	ldw	r2,152(sp)
    1a7c:	d9403317 	ldw	r5,204(sp)
    1a80:	8123883a 	add	r17,r16,r4
    1a84:	11400216 	blt	r2,r5,1a90 <___vfprintf_internal_r+0x1538>
    1a88:	9100004c 	andi	r4,r18,1
    1a8c:	20000d26 	beq	r4,zero,1ac4 <___vfprintf_internal_r+0x156c>
    1a90:	d9003717 	ldw	r4,220(sp)
    1a94:	d9403417 	ldw	r5,208(sp)
    1a98:	1907883a 	add	r3,r3,r4
    1a9c:	d9001f17 	ldw	r4,124(sp)
    1aa0:	41400015 	stw	r5,0(r8)
    1aa4:	d9403717 	ldw	r5,220(sp)
    1aa8:	21000044 	addi	r4,r4,1
    1aac:	d8c02015 	stw	r3,128(sp)
    1ab0:	41400115 	stw	r5,4(r8)
    1ab4:	d9001f15 	stw	r4,124(sp)
    1ab8:	014001c4 	movi	r5,7
    1abc:	2901e816 	blt	r5,r4,2260 <___vfprintf_internal_r+0x1d08>
    1ac0:	42000204 	addi	r8,r8,8
    1ac4:	d9003317 	ldw	r4,204(sp)
    1ac8:	8121883a 	add	r16,r16,r4
    1acc:	2085c83a 	sub	r2,r4,r2
    1ad0:	8461c83a 	sub	r16,r16,r17
    1ad4:	1400010e 	bge	r2,r16,1adc <___vfprintf_internal_r+0x1584>
    1ad8:	1021883a 	mov	r16,r2
    1adc:	04000a0e 	bge	zero,r16,1b08 <___vfprintf_internal_r+0x15b0>
    1ae0:	d9001f17 	ldw	r4,124(sp)
    1ae4:	1c07883a 	add	r3,r3,r16
    1ae8:	44400015 	stw	r17,0(r8)
    1aec:	21000044 	addi	r4,r4,1
    1af0:	44000115 	stw	r16,4(r8)
    1af4:	d8c02015 	stw	r3,128(sp)
    1af8:	d9001f15 	stw	r4,124(sp)
    1afc:	014001c4 	movi	r5,7
    1b00:	2901fb16 	blt	r5,r4,22f0 <___vfprintf_internal_r+0x1d98>
    1b04:	42000204 	addi	r8,r8,8
    1b08:	8001f716 	blt	r16,zero,22e8 <___vfprintf_internal_r+0x1d90>
    1b0c:	1421c83a 	sub	r16,r2,r16
    1b10:	043d160e 	bge	zero,r16,f6c <__alt_data_end+0xfffe0f6c>
    1b14:	04400404 	movi	r17,16
    1b18:	d8801f17 	ldw	r2,124(sp)
    1b1c:	8c3efb0e 	bge	r17,r16,170c <__alt_data_end+0xfffe170c>
    1b20:	01400074 	movhi	r5,1
    1b24:	297e4984 	addi	r5,r5,-1754
    1b28:	d9402c15 	stw	r5,176(sp)
    1b2c:	058001c4 	movi	r22,7
    1b30:	dcc02d17 	ldw	r19,180(sp)
    1b34:	00000306 	br	1b44 <___vfprintf_internal_r+0x15ec>
    1b38:	42000204 	addi	r8,r8,8
    1b3c:	843ffc04 	addi	r16,r16,-16
    1b40:	8c3ef50e 	bge	r17,r16,1718 <__alt_data_end+0xfffe1718>
    1b44:	18c00404 	addi	r3,r3,16
    1b48:	10800044 	addi	r2,r2,1
    1b4c:	45000015 	stw	r20,0(r8)
    1b50:	44400115 	stw	r17,4(r8)
    1b54:	d8c02015 	stw	r3,128(sp)
    1b58:	d8801f15 	stw	r2,124(sp)
    1b5c:	b0bff60e 	bge	r22,r2,1b38 <__alt_data_end+0xfffe1b38>
    1b60:	d9801e04 	addi	r6,sp,120
    1b64:	b80b883a 	mov	r5,r23
    1b68:	9809883a 	mov	r4,r19
    1b6c:	0007d380 	call	7d38 <__sprint_r>
    1b70:	103b7d1e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    1b74:	d8c02017 	ldw	r3,128(sp)
    1b78:	d8801f17 	ldw	r2,124(sp)
    1b7c:	da000404 	addi	r8,sp,16
    1b80:	003fee06 	br	1b3c <__alt_data_end+0xfffe1b3c>
    1b84:	9088703a 	and	r4,r18,r2
    1b88:	203eab1e 	bne	r4,zero,1638 <__alt_data_end+0xfffe1638>
    1b8c:	dc401f17 	ldw	r17,124(sp)
    1b90:	40800115 	stw	r2,4(r8)
    1b94:	44000015 	stw	r16,0(r8)
    1b98:	8c400044 	addi	r17,r17,1
    1b9c:	d8c02015 	stw	r3,128(sp)
    1ba0:	dc401f15 	stw	r17,124(sp)
    1ba4:	008001c4 	movi	r2,7
    1ba8:	14400e16 	blt	r2,r17,1be4 <___vfprintf_internal_r+0x168c>
    1bac:	45800204 	addi	r22,r8,8
    1bb0:	003eca06 	br	16dc <__alt_data_end+0xfffe16dc>
    1bb4:	01000074 	movhi	r4,1
    1bb8:	213e4984 	addi	r4,r4,-1754
    1bbc:	d9002c15 	stw	r4,176(sp)
    1bc0:	d8802c17 	ldw	r2,176(sp)
    1bc4:	1c07883a 	add	r3,r3,r16
    1bc8:	8c400044 	addi	r17,r17,1
    1bcc:	b0800015 	stw	r2,0(r22)
    1bd0:	b4000115 	stw	r16,4(r22)
    1bd4:	d8c02015 	stw	r3,128(sp)
    1bd8:	dc401f15 	stw	r17,124(sp)
    1bdc:	008001c4 	movi	r2,7
    1be0:	147ebd0e 	bge	r2,r17,16d8 <__alt_data_end+0xfffe16d8>
    1be4:	d9002d17 	ldw	r4,180(sp)
    1be8:	d9801e04 	addi	r6,sp,120
    1bec:	b80b883a 	mov	r5,r23
    1bf0:	0007d380 	call	7d38 <__sprint_r>
    1bf4:	103b5c1e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    1bf8:	d8c02017 	ldw	r3,128(sp)
    1bfc:	dc401f17 	ldw	r17,124(sp)
    1c00:	dd800404 	addi	r22,sp,16
    1c04:	003eb506 	br	16dc <__alt_data_end+0xfffe16dc>
    1c08:	d9002d17 	ldw	r4,180(sp)
    1c0c:	d9801e04 	addi	r6,sp,120
    1c10:	b80b883a 	mov	r5,r23
    1c14:	0007d380 	call	7d38 <__sprint_r>
    1c18:	103b531e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    1c1c:	d8c02017 	ldw	r3,128(sp)
    1c20:	dc401f17 	ldw	r17,124(sp)
    1c24:	da000404 	addi	r8,sp,16
    1c28:	003e8d06 	br	1660 <__alt_data_end+0xfffe1660>
    1c2c:	d9002d17 	ldw	r4,180(sp)
    1c30:	d9801e04 	addi	r6,sp,120
    1c34:	b80b883a 	mov	r5,r23
    1c38:	0007d380 	call	7d38 <__sprint_r>
    1c3c:	103b4a1e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    1c40:	d8c02017 	ldw	r3,128(sp)
    1c44:	dc401f17 	ldw	r17,124(sp)
    1c48:	dd800404 	addi	r22,sp,16
    1c4c:	003e8f06 	br	168c <__alt_data_end+0xfffe168c>
    1c50:	0027883a 	mov	r19,zero
    1c54:	003f4a06 	br	1980 <__alt_data_end+0xfffe1980>
    1c58:	d9002d17 	ldw	r4,180(sp)
    1c5c:	d9801e04 	addi	r6,sp,120
    1c60:	b80b883a 	mov	r5,r23
    1c64:	0007d380 	call	7d38 <__sprint_r>
    1c68:	103b3f1e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    1c6c:	d8c02017 	ldw	r3,128(sp)
    1c70:	da000404 	addi	r8,sp,16
    1c74:	003c7b06 	br	e64 <__alt_data_end+0xfffe0e64>
    1c78:	d9402a17 	ldw	r5,168(sp)
    1c7c:	04e7c83a 	sub	r19,zero,r19
    1c80:	07000b44 	movi	fp,45
    1c84:	9804c03a 	cmpne	r2,r19,zero
    1c88:	05adc83a 	sub	r22,zero,r22
    1c8c:	df002785 	stb	fp,158(sp)
    1c90:	b0adc83a 	sub	r22,r22,r2
    1c94:	28017b16 	blt	r5,zero,2284 <___vfprintf_internal_r+0x1d2c>
    1c98:	00bfdfc4 	movi	r2,-129
    1c9c:	90a4703a 	and	r18,r18,r2
    1ca0:	003b8906 	br	ac8 <__alt_data_end+0xfffe0ac8>
    1ca4:	d9003617 	ldw	r4,216(sp)
    1ca8:	d9403817 	ldw	r5,224(sp)
    1cac:	da003d15 	stw	r8,244(sp)
    1cb0:	000795c0 	call	795c <__fpclassifyd>
    1cb4:	da003d17 	ldw	r8,244(sp)
    1cb8:	1000f026 	beq	r2,zero,207c <___vfprintf_internal_r+0x1b24>
    1cbc:	d9002a17 	ldw	r4,168(sp)
    1cc0:	05bff7c4 	movi	r22,-33
    1cc4:	00bfffc4 	movi	r2,-1
    1cc8:	8dac703a 	and	r22,r17,r22
    1ccc:	20820026 	beq	r4,r2,24d0 <___vfprintf_internal_r+0x1f78>
    1cd0:	008011c4 	movi	r2,71
    1cd4:	b081f726 	beq	r22,r2,24b4 <___vfprintf_internal_r+0x1f5c>
    1cd8:	d9003817 	ldw	r4,224(sp)
    1cdc:	90c04014 	ori	r3,r18,256
    1ce0:	d8c02c15 	stw	r3,176(sp)
    1ce4:	20021516 	blt	r4,zero,253c <___vfprintf_internal_r+0x1fe4>
    1ce8:	dcc03817 	ldw	r19,224(sp)
    1cec:	d8002905 	stb	zero,164(sp)
    1cf0:	00801984 	movi	r2,102
    1cf4:	8881f926 	beq	r17,r2,24dc <___vfprintf_internal_r+0x1f84>
    1cf8:	00801184 	movi	r2,70
    1cfc:	88821c26 	beq	r17,r2,2570 <___vfprintf_internal_r+0x2018>
    1d00:	00801144 	movi	r2,69
    1d04:	b081ef26 	beq	r22,r2,24c4 <___vfprintf_internal_r+0x1f6c>
    1d08:	d8c02a17 	ldw	r3,168(sp)
    1d0c:	d8802104 	addi	r2,sp,132
    1d10:	d8800315 	stw	r2,12(sp)
    1d14:	d9403617 	ldw	r5,216(sp)
    1d18:	d8802504 	addi	r2,sp,148
    1d1c:	d9002d17 	ldw	r4,180(sp)
    1d20:	d8800215 	stw	r2,8(sp)
    1d24:	d8802604 	addi	r2,sp,152
    1d28:	d8c00015 	stw	r3,0(sp)
    1d2c:	d8800115 	stw	r2,4(sp)
    1d30:	01c00084 	movi	r7,2
    1d34:	980d883a 	mov	r6,r19
    1d38:	d8c03c15 	stw	r3,240(sp)
    1d3c:	da003d15 	stw	r8,244(sp)
    1d40:	0002c880 	call	2c88 <_dtoa_r>
    1d44:	1021883a 	mov	r16,r2
    1d48:	008019c4 	movi	r2,103
    1d4c:	d8c03c17 	ldw	r3,240(sp)
    1d50:	da003d17 	ldw	r8,244(sp)
    1d54:	88817126 	beq	r17,r2,231c <___vfprintf_internal_r+0x1dc4>
    1d58:	008011c4 	movi	r2,71
    1d5c:	88829126 	beq	r17,r2,27a4 <___vfprintf_internal_r+0x224c>
    1d60:	80f9883a 	add	fp,r16,r3
    1d64:	d9003617 	ldw	r4,216(sp)
    1d68:	000d883a 	mov	r6,zero
    1d6c:	000f883a 	mov	r7,zero
    1d70:	980b883a 	mov	r5,r19
    1d74:	da003d15 	stw	r8,244(sp)
    1d78:	000bc980 	call	bc98 <__eqdf2>
    1d7c:	da003d17 	ldw	r8,244(sp)
    1d80:	10018d26 	beq	r2,zero,23b8 <___vfprintf_internal_r+0x1e60>
    1d84:	d8802117 	ldw	r2,132(sp)
    1d88:	1700062e 	bgeu	r2,fp,1da4 <___vfprintf_internal_r+0x184c>
    1d8c:	01000c04 	movi	r4,48
    1d90:	10c00044 	addi	r3,r2,1
    1d94:	d8c02115 	stw	r3,132(sp)
    1d98:	11000005 	stb	r4,0(r2)
    1d9c:	d8802117 	ldw	r2,132(sp)
    1da0:	173ffb36 	bltu	r2,fp,1d90 <__alt_data_end+0xfffe1d90>
    1da4:	1405c83a 	sub	r2,r2,r16
    1da8:	d8803315 	stw	r2,204(sp)
    1dac:	008011c4 	movi	r2,71
    1db0:	b0817626 	beq	r22,r2,238c <___vfprintf_internal_r+0x1e34>
    1db4:	00801944 	movi	r2,101
    1db8:	1442800e 	bge	r2,r17,27bc <___vfprintf_internal_r+0x2264>
    1dbc:	d8c02617 	ldw	r3,152(sp)
    1dc0:	00801984 	movi	r2,102
    1dc4:	d8c03215 	stw	r3,200(sp)
    1dc8:	8881fe26 	beq	r17,r2,25c4 <___vfprintf_internal_r+0x206c>
    1dcc:	d8c03217 	ldw	r3,200(sp)
    1dd0:	d9003317 	ldw	r4,204(sp)
    1dd4:	1901dd16 	blt	r3,r4,254c <___vfprintf_internal_r+0x1ff4>
    1dd8:	9480004c 	andi	r18,r18,1
    1ddc:	90022b1e 	bne	r18,zero,268c <___vfprintf_internal_r+0x2134>
    1de0:	1805883a 	mov	r2,r3
    1de4:	18028316 	blt	r3,zero,27f4 <___vfprintf_internal_r+0x229c>
    1de8:	d8c03217 	ldw	r3,200(sp)
    1dec:	044019c4 	movi	r17,103
    1df0:	d8c02b15 	stw	r3,172(sp)
    1df4:	df002907 	ldb	fp,164(sp)
    1df8:	e001531e 	bne	fp,zero,2348 <___vfprintf_internal_r+0x1df0>
    1dfc:	df002783 	ldbu	fp,158(sp)
    1e00:	d8802915 	stw	r2,164(sp)
    1e04:	dc802c17 	ldw	r18,176(sp)
    1e08:	d8002a15 	stw	zero,168(sp)
    1e0c:	003baf06 	br	ccc <__alt_data_end+0xfffe0ccc>
    1e10:	d8c02e17 	ldw	r3,184(sp)
    1e14:	d9002e17 	ldw	r4,184(sp)
    1e18:	d9402e17 	ldw	r5,184(sp)
    1e1c:	18c00017 	ldw	r3,0(r3)
    1e20:	21000117 	ldw	r4,4(r4)
    1e24:	29400204 	addi	r5,r5,8
    1e28:	d8c03615 	stw	r3,216(sp)
    1e2c:	d9003815 	stw	r4,224(sp)
    1e30:	d9402e15 	stw	r5,184(sp)
    1e34:	003b5006 	br	b78 <__alt_data_end+0xfffe0b78>
    1e38:	ac400007 	ldb	r17,0(r21)
    1e3c:	003a2806 	br	6e0 <__alt_data_end+0xfffe06e0>
    1e40:	9080100c 	andi	r2,r18,64
    1e44:	1000a826 	beq	r2,zero,20e8 <___vfprintf_internal_r+0x1b90>
    1e48:	d8c02e17 	ldw	r3,184(sp)
    1e4c:	002d883a 	mov	r22,zero
    1e50:	1cc0000b 	ldhu	r19,0(r3)
    1e54:	18c00104 	addi	r3,r3,4
    1e58:	d8c02e15 	stw	r3,184(sp)
    1e5c:	003caf06 	br	111c <__alt_data_end+0xfffe111c>
    1e60:	d9002e17 	ldw	r4,184(sp)
    1e64:	d9402a17 	ldw	r5,168(sp)
    1e68:	002d883a 	mov	r22,zero
    1e6c:	20800104 	addi	r2,r4,4
    1e70:	24c00017 	ldw	r19,0(r4)
    1e74:	283ebb0e 	bge	r5,zero,1964 <__alt_data_end+0xfffe1964>
    1e78:	003ef106 	br	1a40 <__alt_data_end+0xfffe1a40>
    1e7c:	9080040c 	andi	r2,r18,16
    1e80:	1000921e 	bne	r2,zero,20cc <___vfprintf_internal_r+0x1b74>
    1e84:	9480100c 	andi	r18,r18,64
    1e88:	90013926 	beq	r18,zero,2370 <___vfprintf_internal_r+0x1e18>
    1e8c:	d9402e17 	ldw	r5,184(sp)
    1e90:	d8c02f17 	ldw	r3,188(sp)
    1e94:	28800017 	ldw	r2,0(r5)
    1e98:	29400104 	addi	r5,r5,4
    1e9c:	d9402e15 	stw	r5,184(sp)
    1ea0:	10c0000d 	sth	r3,0(r2)
    1ea4:	0039e406 	br	638 <__alt_data_end+0xfffe0638>
    1ea8:	9080100c 	andi	r2,r18,64
    1eac:	10008026 	beq	r2,zero,20b0 <___vfprintf_internal_r+0x1b58>
    1eb0:	d8802e17 	ldw	r2,184(sp)
    1eb4:	14c0000f 	ldh	r19,0(r2)
    1eb8:	10800104 	addi	r2,r2,4
    1ebc:	d8802e15 	stw	r2,184(sp)
    1ec0:	982dd7fa 	srai	r22,r19,31
    1ec4:	b005883a 	mov	r2,r22
    1ec8:	003af706 	br	aa8 <__alt_data_end+0xfffe0aa8>
    1ecc:	9080100c 	andi	r2,r18,64
    1ed0:	d8002785 	stb	zero,158(sp)
    1ed4:	10008a1e 	bne	r2,zero,2100 <___vfprintf_internal_r+0x1ba8>
    1ed8:	d9002e17 	ldw	r4,184(sp)
    1edc:	d9402a17 	ldw	r5,168(sp)
    1ee0:	002d883a 	mov	r22,zero
    1ee4:	20800104 	addi	r2,r4,4
    1ee8:	24c00017 	ldw	r19,0(r4)
    1eec:	283e4b0e 	bge	r5,zero,181c <__alt_data_end+0xfffe181c>
    1ef0:	9d86b03a 	or	r3,r19,r22
    1ef4:	d8802e15 	stw	r2,184(sp)
    1ef8:	183e4c1e 	bne	r3,zero,182c <__alt_data_end+0xfffe182c>
    1efc:	0039883a 	mov	fp,zero
    1f00:	0005883a 	mov	r2,zero
    1f04:	003d4006 	br	1408 <__alt_data_end+0xfffe1408>
    1f08:	01400074 	movhi	r5,1
    1f0c:	297e4984 	addi	r5,r5,-1754
    1f10:	d9402c15 	stw	r5,176(sp)
    1f14:	d9402c17 	ldw	r5,176(sp)
    1f18:	1c47883a 	add	r3,r3,r17
    1f1c:	10800044 	addi	r2,r2,1
    1f20:	41400015 	stw	r5,0(r8)
    1f24:	44400115 	stw	r17,4(r8)
    1f28:	d8c02015 	stw	r3,128(sp)
    1f2c:	d8801f15 	stw	r2,124(sp)
    1f30:	010001c4 	movi	r4,7
    1f34:	20bec816 	blt	r4,r2,1a58 <__alt_data_end+0xfffe1a58>
    1f38:	42000204 	addi	r8,r8,8
    1f3c:	003ecd06 	br	1a74 <__alt_data_end+0xfffe1a74>
    1f40:	d9002a17 	ldw	r4,168(sp)
    1f44:	d8002785 	stb	zero,158(sp)
    1f48:	203d2d16 	blt	r4,zero,1400 <__alt_data_end+0xfffe1400>
    1f4c:	00bfdfc4 	movi	r2,-129
    1f50:	90a4703a 	and	r18,r18,r2
    1f54:	003a6106 	br	8dc <__alt_data_end+0xfffe08dc>
    1f58:	01000074 	movhi	r4,1
    1f5c:	213e4984 	addi	r4,r4,-1754
    1f60:	d9002c15 	stw	r4,176(sp)
    1f64:	003bea06 	br	f10 <__alt_data_end+0xfffe0f10>
    1f68:	d9002d17 	ldw	r4,180(sp)
    1f6c:	d9801e04 	addi	r6,sp,120
    1f70:	b80b883a 	mov	r5,r23
    1f74:	0007d380 	call	7d38 <__sprint_r>
    1f78:	103a7b1e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    1f7c:	d8c02017 	ldw	r3,128(sp)
    1f80:	da000404 	addi	r8,sp,16
    1f84:	003d4106 	br	148c <__alt_data_end+0xfffe148c>
    1f88:	d8801f17 	ldw	r2,124(sp)
    1f8c:	01400074 	movhi	r5,1
    1f90:	01000044 	movi	r4,1
    1f94:	18c00044 	addi	r3,r3,1
    1f98:	10800044 	addi	r2,r2,1
    1f9c:	297e4904 	addi	r5,r5,-1756
    1fa0:	41000115 	stw	r4,4(r8)
    1fa4:	41400015 	stw	r5,0(r8)
    1fa8:	d8c02015 	stw	r3,128(sp)
    1fac:	d8801f15 	stw	r2,124(sp)
    1fb0:	010001c4 	movi	r4,7
    1fb4:	20805c16 	blt	r4,r2,2128 <___vfprintf_internal_r+0x1bd0>
    1fb8:	42000204 	addi	r8,r8,8
    1fbc:	8800041e 	bne	r17,zero,1fd0 <___vfprintf_internal_r+0x1a78>
    1fc0:	d8803317 	ldw	r2,204(sp)
    1fc4:	1000021e 	bne	r2,zero,1fd0 <___vfprintf_internal_r+0x1a78>
    1fc8:	9080004c 	andi	r2,r18,1
    1fcc:	103be726 	beq	r2,zero,f6c <__alt_data_end+0xfffe0f6c>
    1fd0:	d9003717 	ldw	r4,220(sp)
    1fd4:	d8801f17 	ldw	r2,124(sp)
    1fd8:	d9403417 	ldw	r5,208(sp)
    1fdc:	20c7883a 	add	r3,r4,r3
    1fe0:	10800044 	addi	r2,r2,1
    1fe4:	41000115 	stw	r4,4(r8)
    1fe8:	41400015 	stw	r5,0(r8)
    1fec:	d8c02015 	stw	r3,128(sp)
    1ff0:	d8801f15 	stw	r2,124(sp)
    1ff4:	010001c4 	movi	r4,7
    1ff8:	20812116 	blt	r4,r2,2480 <___vfprintf_internal_r+0x1f28>
    1ffc:	42000204 	addi	r8,r8,8
    2000:	0463c83a 	sub	r17,zero,r17
    2004:	0440730e 	bge	zero,r17,21d4 <___vfprintf_internal_r+0x1c7c>
    2008:	05800404 	movi	r22,16
    200c:	b440860e 	bge	r22,r17,2228 <___vfprintf_internal_r+0x1cd0>
    2010:	01400074 	movhi	r5,1
    2014:	297e4984 	addi	r5,r5,-1754
    2018:	d9402c15 	stw	r5,176(sp)
    201c:	070001c4 	movi	fp,7
    2020:	dcc02d17 	ldw	r19,180(sp)
    2024:	00000306 	br	2034 <___vfprintf_internal_r+0x1adc>
    2028:	42000204 	addi	r8,r8,8
    202c:	8c7ffc04 	addi	r17,r17,-16
    2030:	b440800e 	bge	r22,r17,2234 <___vfprintf_internal_r+0x1cdc>
    2034:	18c00404 	addi	r3,r3,16
    2038:	10800044 	addi	r2,r2,1
    203c:	45000015 	stw	r20,0(r8)
    2040:	45800115 	stw	r22,4(r8)
    2044:	d8c02015 	stw	r3,128(sp)
    2048:	d8801f15 	stw	r2,124(sp)
    204c:	e0bff60e 	bge	fp,r2,2028 <__alt_data_end+0xfffe2028>
    2050:	d9801e04 	addi	r6,sp,120
    2054:	b80b883a 	mov	r5,r23
    2058:	9809883a 	mov	r4,r19
    205c:	0007d380 	call	7d38 <__sprint_r>
    2060:	103a411e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    2064:	d8c02017 	ldw	r3,128(sp)
    2068:	d8801f17 	ldw	r2,124(sp)
    206c:	da000404 	addi	r8,sp,16
    2070:	003fee06 	br	202c <__alt_data_end+0xfffe202c>
    2074:	00bfffc4 	movi	r2,-1
    2078:	003a3f06 	br	978 <__alt_data_end+0xfffe0978>
    207c:	008011c4 	movi	r2,71
    2080:	1440b816 	blt	r2,r17,2364 <___vfprintf_internal_r+0x1e0c>
    2084:	04000074 	movhi	r16,1
    2088:	843e3b04 	addi	r16,r16,-1812
    208c:	00c000c4 	movi	r3,3
    2090:	00bfdfc4 	movi	r2,-129
    2094:	d8c02915 	stw	r3,164(sp)
    2098:	90a4703a 	and	r18,r18,r2
    209c:	df002783 	ldbu	fp,158(sp)
    20a0:	d8c02b15 	stw	r3,172(sp)
    20a4:	d8002a15 	stw	zero,168(sp)
    20a8:	d8003215 	stw	zero,200(sp)
    20ac:	003b0706 	br	ccc <__alt_data_end+0xfffe0ccc>
    20b0:	d8c02e17 	ldw	r3,184(sp)
    20b4:	1cc00017 	ldw	r19,0(r3)
    20b8:	18c00104 	addi	r3,r3,4
    20bc:	d8c02e15 	stw	r3,184(sp)
    20c0:	982dd7fa 	srai	r22,r19,31
    20c4:	b005883a 	mov	r2,r22
    20c8:	003a7706 	br	aa8 <__alt_data_end+0xfffe0aa8>
    20cc:	d8c02e17 	ldw	r3,184(sp)
    20d0:	d9002f17 	ldw	r4,188(sp)
    20d4:	18800017 	ldw	r2,0(r3)
    20d8:	18c00104 	addi	r3,r3,4
    20dc:	d8c02e15 	stw	r3,184(sp)
    20e0:	11000015 	stw	r4,0(r2)
    20e4:	00395406 	br	638 <__alt_data_end+0xfffe0638>
    20e8:	d9002e17 	ldw	r4,184(sp)
    20ec:	002d883a 	mov	r22,zero
    20f0:	24c00017 	ldw	r19,0(r4)
    20f4:	21000104 	addi	r4,r4,4
    20f8:	d9002e15 	stw	r4,184(sp)
    20fc:	003c0706 	br	111c <__alt_data_end+0xfffe111c>
    2100:	d9402e17 	ldw	r5,184(sp)
    2104:	d8c02a17 	ldw	r3,168(sp)
    2108:	002d883a 	mov	r22,zero
    210c:	28800104 	addi	r2,r5,4
    2110:	2cc0000b 	ldhu	r19,0(r5)
    2114:	183dc10e 	bge	r3,zero,181c <__alt_data_end+0xfffe181c>
    2118:	003f7506 	br	1ef0 <__alt_data_end+0xfffe1ef0>
    211c:	04000074 	movhi	r16,1
    2120:	843e3904 	addi	r16,r16,-1820
    2124:	003aa706 	br	bc4 <__alt_data_end+0xfffe0bc4>
    2128:	d9002d17 	ldw	r4,180(sp)
    212c:	d9801e04 	addi	r6,sp,120
    2130:	b80b883a 	mov	r5,r23
    2134:	0007d380 	call	7d38 <__sprint_r>
    2138:	103a0b1e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    213c:	dc402617 	ldw	r17,152(sp)
    2140:	d8c02017 	ldw	r3,128(sp)
    2144:	da000404 	addi	r8,sp,16
    2148:	003f9c06 	br	1fbc <__alt_data_end+0xfffe1fbc>
    214c:	ac400043 	ldbu	r17,1(r21)
    2150:	84000814 	ori	r16,r16,32
    2154:	ad400044 	addi	r21,r21,1
    2158:	8c403fcc 	andi	r17,r17,255
    215c:	8c40201c 	xori	r17,r17,128
    2160:	8c7fe004 	addi	r17,r17,-128
    2164:	00395e06 	br	6e0 <__alt_data_end+0xfffe06e0>
    2168:	d8c02e15 	stw	r3,184(sp)
    216c:	0039883a 	mov	fp,zero
    2170:	003e3506 	br	1a48 <__alt_data_end+0xfffe1a48>
    2174:	d9002d17 	ldw	r4,180(sp)
    2178:	d9801e04 	addi	r6,sp,120
    217c:	b80b883a 	mov	r5,r23
    2180:	0007d380 	call	7d38 <__sprint_r>
    2184:	1039f81e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    2188:	d8c02017 	ldw	r3,128(sp)
    218c:	da000404 	addi	r8,sp,16
    2190:	003cd006 	br	14d4 <__alt_data_end+0xfffe14d4>
    2194:	8009883a 	mov	r4,r16
    2198:	df003d15 	stw	fp,244(sp)
    219c:	00004c00 	call	4c0 <strlen>
    21a0:	d8802b15 	stw	r2,172(sp)
    21a4:	da003d17 	ldw	r8,244(sp)
    21a8:	103c200e 	bge	r2,zero,122c <__alt_data_end+0xfffe122c>
    21ac:	0005883a 	mov	r2,zero
    21b0:	003c1e06 	br	122c <__alt_data_end+0xfffe122c>
    21b4:	d9002d17 	ldw	r4,180(sp)
    21b8:	d9801e04 	addi	r6,sp,120
    21bc:	b80b883a 	mov	r5,r23
    21c0:	0007d380 	call	7d38 <__sprint_r>
    21c4:	1039e81e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    21c8:	d8c02017 	ldw	r3,128(sp)
    21cc:	d8801f17 	ldw	r2,124(sp)
    21d0:	da000404 	addi	r8,sp,16
    21d4:	d9403317 	ldw	r5,204(sp)
    21d8:	10800044 	addi	r2,r2,1
    21dc:	44000015 	stw	r16,0(r8)
    21e0:	28c7883a 	add	r3,r5,r3
    21e4:	003b5b06 	br	f54 <__alt_data_end+0xfffe0f54>
    21e8:	01000074 	movhi	r4,1
    21ec:	213e4d84 	addi	r4,r4,-1738
    21f0:	d9003515 	stw	r4,212(sp)
    21f4:	003af206 	br	dc0 <__alt_data_end+0xfffe0dc0>
    21f8:	013fffc4 	movi	r4,-1
    21fc:	003a0806 	br	a20 <__alt_data_end+0xfffe0a20>
    2200:	0023883a 	mov	r17,zero
    2204:	003d9d06 	br	187c <__alt_data_end+0xfffe187c>
    2208:	d9002d17 	ldw	r4,180(sp)
    220c:	d9801e04 	addi	r6,sp,120
    2210:	b80b883a 	mov	r5,r23
    2214:	0007d380 	call	7d38 <__sprint_r>
    2218:	1039d31e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    221c:	d8c02017 	ldw	r3,128(sp)
    2220:	da000404 	addi	r8,sp,16
    2224:	003d9406 	br	1878 <__alt_data_end+0xfffe1878>
    2228:	01000074 	movhi	r4,1
    222c:	213e4984 	addi	r4,r4,-1754
    2230:	d9002c15 	stw	r4,176(sp)
    2234:	d9002c17 	ldw	r4,176(sp)
    2238:	1c47883a 	add	r3,r3,r17
    223c:	10800044 	addi	r2,r2,1
    2240:	41000015 	stw	r4,0(r8)
    2244:	44400115 	stw	r17,4(r8)
    2248:	d8c02015 	stw	r3,128(sp)
    224c:	d8801f15 	stw	r2,124(sp)
    2250:	010001c4 	movi	r4,7
    2254:	20bfd716 	blt	r4,r2,21b4 <__alt_data_end+0xfffe21b4>
    2258:	42000204 	addi	r8,r8,8
    225c:	003fdd06 	br	21d4 <__alt_data_end+0xfffe21d4>
    2260:	d9002d17 	ldw	r4,180(sp)
    2264:	d9801e04 	addi	r6,sp,120
    2268:	b80b883a 	mov	r5,r23
    226c:	0007d380 	call	7d38 <__sprint_r>
    2270:	1039bd1e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    2274:	d8802617 	ldw	r2,152(sp)
    2278:	d8c02017 	ldw	r3,128(sp)
    227c:	da000404 	addi	r8,sp,16
    2280:	003e1006 	br	1ac4 <__alt_data_end+0xfffe1ac4>
    2284:	00800044 	movi	r2,1
    2288:	10803fcc 	andi	r2,r2,255
    228c:	00c00044 	movi	r3,1
    2290:	10fa0d26 	beq	r2,r3,ac8 <__alt_data_end+0xfffe0ac8>
    2294:	00c00084 	movi	r3,2
    2298:	10fbaf26 	beq	r2,r3,1158 <__alt_data_end+0xfffe1158>
    229c:	003a6d06 	br	c54 <__alt_data_end+0xfffe0c54>
    22a0:	01000074 	movhi	r4,1
    22a4:	213e4d84 	addi	r4,r4,-1738
    22a8:	d9003515 	stw	r4,212(sp)
    22ac:	003b5406 	br	1000 <__alt_data_end+0xfffe1000>
    22b0:	d8802a17 	ldw	r2,168(sp)
    22b4:	00c00184 	movi	r3,6
    22b8:	1880012e 	bgeu	r3,r2,22c0 <___vfprintf_internal_r+0x1d68>
    22bc:	1805883a 	mov	r2,r3
    22c0:	d8802b15 	stw	r2,172(sp)
    22c4:	1000ef16 	blt	r2,zero,2684 <___vfprintf_internal_r+0x212c>
    22c8:	04000074 	movhi	r16,1
    22cc:	d8802915 	stw	r2,164(sp)
    22d0:	dcc02e15 	stw	r19,184(sp)
    22d4:	d8002a15 	stw	zero,168(sp)
    22d8:	d8003215 	stw	zero,200(sp)
    22dc:	843e4704 	addi	r16,r16,-1764
    22e0:	0039883a 	mov	fp,zero
    22e4:	003a8006 	br	ce8 <__alt_data_end+0xfffe0ce8>
    22e8:	0021883a 	mov	r16,zero
    22ec:	003e0706 	br	1b0c <__alt_data_end+0xfffe1b0c>
    22f0:	d9002d17 	ldw	r4,180(sp)
    22f4:	d9801e04 	addi	r6,sp,120
    22f8:	b80b883a 	mov	r5,r23
    22fc:	0007d380 	call	7d38 <__sprint_r>
    2300:	1039991e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    2304:	d8802617 	ldw	r2,152(sp)
    2308:	d9403317 	ldw	r5,204(sp)
    230c:	d8c02017 	ldw	r3,128(sp)
    2310:	da000404 	addi	r8,sp,16
    2314:	2885c83a 	sub	r2,r5,r2
    2318:	003dfb06 	br	1b08 <__alt_data_end+0xfffe1b08>
    231c:	9080004c 	andi	r2,r18,1
    2320:	103e8f1e 	bne	r2,zero,1d60 <__alt_data_end+0xfffe1d60>
    2324:	d8802117 	ldw	r2,132(sp)
    2328:	003e9e06 	br	1da4 <__alt_data_end+0xfffe1da4>
    232c:	1025883a 	mov	r18,r2
    2330:	0039883a 	mov	fp,zero
    2334:	00800084 	movi	r2,2
    2338:	003fd306 	br	2288 <__alt_data_end+0xfffe2288>
    233c:	07000b44 	movi	fp,45
    2340:	df002785 	stb	fp,158(sp)
    2344:	003a1b06 	br	bb4 <__alt_data_end+0xfffe0bb4>
    2348:	00c00b44 	movi	r3,45
    234c:	d8c02785 	stb	r3,158(sp)
    2350:	d8802915 	stw	r2,164(sp)
    2354:	dc802c17 	ldw	r18,176(sp)
    2358:	d8002a15 	stw	zero,168(sp)
    235c:	07000b44 	movi	fp,45
    2360:	003a5e06 	br	cdc <__alt_data_end+0xfffe0cdc>
    2364:	04000074 	movhi	r16,1
    2368:	843e3c04 	addi	r16,r16,-1808
    236c:	003f4706 	br	208c <__alt_data_end+0xfffe208c>
    2370:	d9002e17 	ldw	r4,184(sp)
    2374:	d9402f17 	ldw	r5,188(sp)
    2378:	20800017 	ldw	r2,0(r4)
    237c:	21000104 	addi	r4,r4,4
    2380:	d9002e15 	stw	r4,184(sp)
    2384:	11400015 	stw	r5,0(r2)
    2388:	0038ab06 	br	638 <__alt_data_end+0xfffe0638>
    238c:	dd802617 	ldw	r22,152(sp)
    2390:	00bfff44 	movi	r2,-3
    2394:	b0801c16 	blt	r22,r2,2408 <___vfprintf_internal_r+0x1eb0>
    2398:	d9402a17 	ldw	r5,168(sp)
    239c:	2d801a16 	blt	r5,r22,2408 <___vfprintf_internal_r+0x1eb0>
    23a0:	dd803215 	stw	r22,200(sp)
    23a4:	003e8906 	br	1dcc <__alt_data_end+0xfffe1dcc>
    23a8:	01000074 	movhi	r4,1
    23ac:	213e4984 	addi	r4,r4,-1754
    23b0:	d9002c15 	stw	r4,176(sp)
    23b4:	003c9106 	br	15fc <__alt_data_end+0xfffe15fc>
    23b8:	e005883a 	mov	r2,fp
    23bc:	003e7906 	br	1da4 <__alt_data_end+0xfffe1da4>
    23c0:	d9002a17 	ldw	r4,168(sp)
    23c4:	df002783 	ldbu	fp,158(sp)
    23c8:	dcc02e15 	stw	r19,184(sp)
    23cc:	d9002915 	stw	r4,164(sp)
    23d0:	d9002b15 	stw	r4,172(sp)
    23d4:	d8002a15 	stw	zero,168(sp)
    23d8:	d8003215 	stw	zero,200(sp)
    23dc:	003a3b06 	br	ccc <__alt_data_end+0xfffe0ccc>
    23e0:	9080004c 	andi	r2,r18,1
    23e4:	0039883a 	mov	fp,zero
    23e8:	10000426 	beq	r2,zero,23fc <___vfprintf_internal_r+0x1ea4>
    23ec:	00800c04 	movi	r2,48
    23f0:	dc001dc4 	addi	r16,sp,119
    23f4:	d8801dc5 	stb	r2,119(sp)
    23f8:	003b6406 	br	118c <__alt_data_end+0xfffe118c>
    23fc:	d8002b15 	stw	zero,172(sp)
    2400:	dc001e04 	addi	r16,sp,120
    2404:	003a2b06 	br	cb4 <__alt_data_end+0xfffe0cb4>
    2408:	8c7fff84 	addi	r17,r17,-2
    240c:	b5bfffc4 	addi	r22,r22,-1
    2410:	dd802615 	stw	r22,152(sp)
    2414:	dc4022c5 	stb	r17,139(sp)
    2418:	b000bf16 	blt	r22,zero,2718 <___vfprintf_internal_r+0x21c0>
    241c:	00800ac4 	movi	r2,43
    2420:	d8802305 	stb	r2,140(sp)
    2424:	00800244 	movi	r2,9
    2428:	15807016 	blt	r2,r22,25ec <___vfprintf_internal_r+0x2094>
    242c:	00800c04 	movi	r2,48
    2430:	b5800c04 	addi	r22,r22,48
    2434:	d8802345 	stb	r2,141(sp)
    2438:	dd802385 	stb	r22,142(sp)
    243c:	d88023c4 	addi	r2,sp,143
    2440:	df0022c4 	addi	fp,sp,139
    2444:	d8c03317 	ldw	r3,204(sp)
    2448:	1739c83a 	sub	fp,r2,fp
    244c:	d9003317 	ldw	r4,204(sp)
    2450:	e0c7883a 	add	r3,fp,r3
    2454:	df003a15 	stw	fp,232(sp)
    2458:	d8c02b15 	stw	r3,172(sp)
    245c:	00800044 	movi	r2,1
    2460:	1100b30e 	bge	r2,r4,2730 <___vfprintf_internal_r+0x21d8>
    2464:	d8c02b17 	ldw	r3,172(sp)
    2468:	18c00044 	addi	r3,r3,1
    246c:	d8c02b15 	stw	r3,172(sp)
    2470:	1805883a 	mov	r2,r3
    2474:	1800ac16 	blt	r3,zero,2728 <___vfprintf_internal_r+0x21d0>
    2478:	d8003215 	stw	zero,200(sp)
    247c:	003e5d06 	br	1df4 <__alt_data_end+0xfffe1df4>
    2480:	d9002d17 	ldw	r4,180(sp)
    2484:	d9801e04 	addi	r6,sp,120
    2488:	b80b883a 	mov	r5,r23
    248c:	0007d380 	call	7d38 <__sprint_r>
    2490:	1039351e 	bne	r2,zero,968 <__alt_data_end+0xfffe0968>
    2494:	dc402617 	ldw	r17,152(sp)
    2498:	d8c02017 	ldw	r3,128(sp)
    249c:	d8801f17 	ldw	r2,124(sp)
    24a0:	da000404 	addi	r8,sp,16
    24a4:	003ed606 	br	2000 <__alt_data_end+0xfffe2000>
    24a8:	182b883a 	mov	r21,r3
    24ac:	d8002a15 	stw	zero,168(sp)
    24b0:	00388c06 	br	6e4 <__alt_data_end+0xfffe06e4>
    24b4:	d8802a17 	ldw	r2,168(sp)
    24b8:	103e071e 	bne	r2,zero,1cd8 <__alt_data_end+0xfffe1cd8>
    24bc:	dc002a15 	stw	r16,168(sp)
    24c0:	003e0506 	br	1cd8 <__alt_data_end+0xfffe1cd8>
    24c4:	d9002a17 	ldw	r4,168(sp)
    24c8:	20c00044 	addi	r3,r4,1
    24cc:	003e0f06 	br	1d0c <__alt_data_end+0xfffe1d0c>
    24d0:	01400184 	movi	r5,6
    24d4:	d9402a15 	stw	r5,168(sp)
    24d8:	003dff06 	br	1cd8 <__alt_data_end+0xfffe1cd8>
    24dc:	d8802104 	addi	r2,sp,132
    24e0:	d8800315 	stw	r2,12(sp)
    24e4:	d8802504 	addi	r2,sp,148
    24e8:	d8800215 	stw	r2,8(sp)
    24ec:	d8802604 	addi	r2,sp,152
    24f0:	d8800115 	stw	r2,4(sp)
    24f4:	d8802a17 	ldw	r2,168(sp)
    24f8:	d9403617 	ldw	r5,216(sp)
    24fc:	d9002d17 	ldw	r4,180(sp)
    2500:	d8800015 	stw	r2,0(sp)
    2504:	01c000c4 	movi	r7,3
    2508:	980d883a 	mov	r6,r19
    250c:	da003d15 	stw	r8,244(sp)
    2510:	0002c880 	call	2c88 <_dtoa_r>
    2514:	d8c02a17 	ldw	r3,168(sp)
    2518:	da003d17 	ldw	r8,244(sp)
    251c:	1021883a 	mov	r16,r2
    2520:	10f9883a 	add	fp,r2,r3
    2524:	81000007 	ldb	r4,0(r16)
    2528:	00800c04 	movi	r2,48
    252c:	20805e26 	beq	r4,r2,26a8 <___vfprintf_internal_r+0x2150>
    2530:	d8c02617 	ldw	r3,152(sp)
    2534:	e0f9883a 	add	fp,fp,r3
    2538:	003e0a06 	br	1d64 <__alt_data_end+0xfffe1d64>
    253c:	00c00b44 	movi	r3,45
    2540:	24e0003c 	xorhi	r19,r4,32768
    2544:	d8c02905 	stb	r3,164(sp)
    2548:	003de906 	br	1cf0 <__alt_data_end+0xfffe1cf0>
    254c:	d8c03217 	ldw	r3,200(sp)
    2550:	00c07a0e 	bge	zero,r3,273c <___vfprintf_internal_r+0x21e4>
    2554:	00800044 	movi	r2,1
    2558:	d9003317 	ldw	r4,204(sp)
    255c:	1105883a 	add	r2,r2,r4
    2560:	d8802b15 	stw	r2,172(sp)
    2564:	10004e16 	blt	r2,zero,26a0 <___vfprintf_internal_r+0x2148>
    2568:	044019c4 	movi	r17,103
    256c:	003e2106 	br	1df4 <__alt_data_end+0xfffe1df4>
    2570:	d9002a17 	ldw	r4,168(sp)
    2574:	d8802104 	addi	r2,sp,132
    2578:	d8800315 	stw	r2,12(sp)
    257c:	d9000015 	stw	r4,0(sp)
    2580:	d8802504 	addi	r2,sp,148
    2584:	d9403617 	ldw	r5,216(sp)
    2588:	d9002d17 	ldw	r4,180(sp)
    258c:	d8800215 	stw	r2,8(sp)
    2590:	d8802604 	addi	r2,sp,152
    2594:	d8800115 	stw	r2,4(sp)
    2598:	01c000c4 	movi	r7,3
    259c:	980d883a 	mov	r6,r19
    25a0:	da003d15 	stw	r8,244(sp)
    25a4:	0002c880 	call	2c88 <_dtoa_r>
    25a8:	d8c02a17 	ldw	r3,168(sp)
    25ac:	da003d17 	ldw	r8,244(sp)
    25b0:	1021883a 	mov	r16,r2
    25b4:	00801184 	movi	r2,70
    25b8:	80f9883a 	add	fp,r16,r3
    25bc:	88bfd926 	beq	r17,r2,2524 <__alt_data_end+0xfffe2524>
    25c0:	003de806 	br	1d64 <__alt_data_end+0xfffe1d64>
    25c4:	d9002a17 	ldw	r4,168(sp)
    25c8:	00c04d0e 	bge	zero,r3,2700 <___vfprintf_internal_r+0x21a8>
    25cc:	2000441e 	bne	r4,zero,26e0 <___vfprintf_internal_r+0x2188>
    25d0:	9480004c 	andi	r18,r18,1
    25d4:	9000421e 	bne	r18,zero,26e0 <___vfprintf_internal_r+0x2188>
    25d8:	1805883a 	mov	r2,r3
    25dc:	18006f16 	blt	r3,zero,279c <___vfprintf_internal_r+0x2244>
    25e0:	d8c03217 	ldw	r3,200(sp)
    25e4:	d8c02b15 	stw	r3,172(sp)
    25e8:	003e0206 	br	1df4 <__alt_data_end+0xfffe1df4>
    25ec:	df0022c4 	addi	fp,sp,139
    25f0:	dc002a15 	stw	r16,168(sp)
    25f4:	4027883a 	mov	r19,r8
    25f8:	e021883a 	mov	r16,fp
    25fc:	b009883a 	mov	r4,r22
    2600:	01400284 	movi	r5,10
    2604:	000a8c40 	call	a8c4 <__modsi3>
    2608:	10800c04 	addi	r2,r2,48
    260c:	843fffc4 	addi	r16,r16,-1
    2610:	b009883a 	mov	r4,r22
    2614:	01400284 	movi	r5,10
    2618:	80800005 	stb	r2,0(r16)
    261c:	000a8400 	call	a840 <__divsi3>
    2620:	102d883a 	mov	r22,r2
    2624:	00800244 	movi	r2,9
    2628:	15bff416 	blt	r2,r22,25fc <__alt_data_end+0xfffe25fc>
    262c:	9811883a 	mov	r8,r19
    2630:	b0800c04 	addi	r2,r22,48
    2634:	8027883a 	mov	r19,r16
    2638:	997fffc4 	addi	r5,r19,-1
    263c:	98bfffc5 	stb	r2,-1(r19)
    2640:	dc002a17 	ldw	r16,168(sp)
    2644:	2f006d2e 	bgeu	r5,fp,27fc <___vfprintf_internal_r+0x22a4>
    2648:	d9c02384 	addi	r7,sp,142
    264c:	3ccfc83a 	sub	r7,r7,r19
    2650:	d9002344 	addi	r4,sp,141
    2654:	e1cf883a 	add	r7,fp,r7
    2658:	00000106 	br	2660 <___vfprintf_internal_r+0x2108>
    265c:	28800003 	ldbu	r2,0(r5)
    2660:	20800005 	stb	r2,0(r4)
    2664:	21000044 	addi	r4,r4,1
    2668:	29400044 	addi	r5,r5,1
    266c:	393ffb1e 	bne	r7,r4,265c <__alt_data_end+0xfffe265c>
    2670:	d8802304 	addi	r2,sp,140
    2674:	14c5c83a 	sub	r2,r2,r19
    2678:	d8c02344 	addi	r3,sp,141
    267c:	1885883a 	add	r2,r3,r2
    2680:	003f7006 	br	2444 <__alt_data_end+0xfffe2444>
    2684:	0005883a 	mov	r2,zero
    2688:	003f0f06 	br	22c8 <__alt_data_end+0xfffe22c8>
    268c:	d8c03217 	ldw	r3,200(sp)
    2690:	18c00044 	addi	r3,r3,1
    2694:	d8c02b15 	stw	r3,172(sp)
    2698:	1805883a 	mov	r2,r3
    269c:	183fb20e 	bge	r3,zero,2568 <__alt_data_end+0xfffe2568>
    26a0:	0005883a 	mov	r2,zero
    26a4:	003fb006 	br	2568 <__alt_data_end+0xfffe2568>
    26a8:	d9003617 	ldw	r4,216(sp)
    26ac:	000d883a 	mov	r6,zero
    26b0:	000f883a 	mov	r7,zero
    26b4:	980b883a 	mov	r5,r19
    26b8:	d8c03c15 	stw	r3,240(sp)
    26bc:	da003d15 	stw	r8,244(sp)
    26c0:	000bc980 	call	bc98 <__eqdf2>
    26c4:	d8c03c17 	ldw	r3,240(sp)
    26c8:	da003d17 	ldw	r8,244(sp)
    26cc:	103f9826 	beq	r2,zero,2530 <__alt_data_end+0xfffe2530>
    26d0:	00800044 	movi	r2,1
    26d4:	10c7c83a 	sub	r3,r2,r3
    26d8:	d8c02615 	stw	r3,152(sp)
    26dc:	003f9506 	br	2534 <__alt_data_end+0xfffe2534>
    26e0:	d9002a17 	ldw	r4,168(sp)
    26e4:	d8c03217 	ldw	r3,200(sp)
    26e8:	20800044 	addi	r2,r4,1
    26ec:	1885883a 	add	r2,r3,r2
    26f0:	d8802b15 	stw	r2,172(sp)
    26f4:	103dbf0e 	bge	r2,zero,1df4 <__alt_data_end+0xfffe1df4>
    26f8:	0005883a 	mov	r2,zero
    26fc:	003dbd06 	br	1df4 <__alt_data_end+0xfffe1df4>
    2700:	2000201e 	bne	r4,zero,2784 <___vfprintf_internal_r+0x222c>
    2704:	9480004c 	andi	r18,r18,1
    2708:	90001e1e 	bne	r18,zero,2784 <___vfprintf_internal_r+0x222c>
    270c:	00800044 	movi	r2,1
    2710:	d8802b15 	stw	r2,172(sp)
    2714:	003db706 	br	1df4 <__alt_data_end+0xfffe1df4>
    2718:	00800b44 	movi	r2,45
    271c:	05adc83a 	sub	r22,zero,r22
    2720:	d8802305 	stb	r2,140(sp)
    2724:	003f3f06 	br	2424 <__alt_data_end+0xfffe2424>
    2728:	0005883a 	mov	r2,zero
    272c:	003f5206 	br	2478 <__alt_data_end+0xfffe2478>
    2730:	90a4703a 	and	r18,r18,r2
    2734:	903f4e26 	beq	r18,zero,2470 <__alt_data_end+0xfffe2470>
    2738:	003f4a06 	br	2464 <__alt_data_end+0xfffe2464>
    273c:	00800084 	movi	r2,2
    2740:	10c5c83a 	sub	r2,r2,r3
    2744:	003f8406 	br	2558 <__alt_data_end+0xfffe2558>
    2748:	d9402e17 	ldw	r5,184(sp)
    274c:	d9002e17 	ldw	r4,184(sp)
    2750:	ac400043 	ldbu	r17,1(r21)
    2754:	29400017 	ldw	r5,0(r5)
    2758:	20800104 	addi	r2,r4,4
    275c:	d8802e15 	stw	r2,184(sp)
    2760:	d9402a15 	stw	r5,168(sp)
    2764:	182b883a 	mov	r21,r3
    2768:	283e7b0e 	bge	r5,zero,2158 <__alt_data_end+0xfffe2158>
    276c:	8c403fcc 	andi	r17,r17,255
    2770:	017fffc4 	movi	r5,-1
    2774:	8c40201c 	xori	r17,r17,128
    2778:	d9402a15 	stw	r5,168(sp)
    277c:	8c7fe004 	addi	r17,r17,-128
    2780:	0037d706 	br	6e0 <__alt_data_end+0xfffe06e0>
    2784:	d8c02a17 	ldw	r3,168(sp)
    2788:	18c00084 	addi	r3,r3,2
    278c:	d8c02b15 	stw	r3,172(sp)
    2790:	1805883a 	mov	r2,r3
    2794:	183d970e 	bge	r3,zero,1df4 <__alt_data_end+0xfffe1df4>
    2798:	003fd706 	br	26f8 <__alt_data_end+0xfffe26f8>
    279c:	0005883a 	mov	r2,zero
    27a0:	003f8f06 	br	25e0 <__alt_data_end+0xfffe25e0>
    27a4:	9080004c 	andi	r2,r18,1
    27a8:	103f821e 	bne	r2,zero,25b4 <__alt_data_end+0xfffe25b4>
    27ac:	d8802117 	ldw	r2,132(sp)
    27b0:	1405c83a 	sub	r2,r2,r16
    27b4:	d8803315 	stw	r2,204(sp)
    27b8:	b47ef426 	beq	r22,r17,238c <__alt_data_end+0xfffe238c>
    27bc:	dd802617 	ldw	r22,152(sp)
    27c0:	003f1206 	br	240c <__alt_data_end+0xfffe240c>
    27c4:	d8c02b03 	ldbu	r3,172(sp)
    27c8:	d8c02785 	stb	r3,158(sp)
    27cc:	0038df06 	br	b4c <__alt_data_end+0xfffe0b4c>
    27d0:	d8c02b03 	ldbu	r3,172(sp)
    27d4:	d8c02785 	stb	r3,158(sp)
    27d8:	0038aa06 	br	a84 <__alt_data_end+0xfffe0a84>
    27dc:	d8c02b03 	ldbu	r3,172(sp)
    27e0:	d8c02785 	stb	r3,158(sp)
    27e4:	003a4306 	br	10f4 <__alt_data_end+0xfffe10f4>
    27e8:	d8c02b03 	ldbu	r3,172(sp)
    27ec:	d8c02785 	stb	r3,158(sp)
    27f0:	003af506 	br	13c8 <__alt_data_end+0xfffe13c8>
    27f4:	0005883a 	mov	r2,zero
    27f8:	003d7b06 	br	1de8 <__alt_data_end+0xfffe1de8>
    27fc:	d8802344 	addi	r2,sp,141
    2800:	003f1006 	br	2444 <__alt_data_end+0xfffe2444>
    2804:	d8c02b03 	ldbu	r3,172(sp)
    2808:	d8c02785 	stb	r3,158(sp)
    280c:	0038fd06 	br	c04 <__alt_data_end+0xfffe0c04>
    2810:	d8c02b03 	ldbu	r3,172(sp)
    2814:	d8c02785 	stb	r3,158(sp)
    2818:	003a9706 	br	1278 <__alt_data_end+0xfffe1278>
    281c:	d8c02b03 	ldbu	r3,172(sp)
    2820:	d8c02785 	stb	r3,158(sp)
    2824:	003a1806 	br	1088 <__alt_data_end+0xfffe1088>
    2828:	d8c02b03 	ldbu	r3,172(sp)
    282c:	d8c02785 	stb	r3,158(sp)
    2830:	003abe06 	br	132c <__alt_data_end+0xfffe132c>

00002834 <__vfprintf_internal>:
    2834:	00800074 	movhi	r2,1
    2838:	1085a404 	addi	r2,r2,5776
    283c:	300f883a 	mov	r7,r6
    2840:	280d883a 	mov	r6,r5
    2844:	200b883a 	mov	r5,r4
    2848:	11000017 	ldw	r4,0(r2)
    284c:	00005581 	jmpi	558 <___vfprintf_internal_r>

00002850 <__sbprintf>:
    2850:	2880030b 	ldhu	r2,12(r5)
    2854:	2ac01917 	ldw	r11,100(r5)
    2858:	2a80038b 	ldhu	r10,14(r5)
    285c:	2a400717 	ldw	r9,28(r5)
    2860:	2a000917 	ldw	r8,36(r5)
    2864:	defee204 	addi	sp,sp,-1144
    2868:	00c10004 	movi	r3,1024
    286c:	dc011a15 	stw	r16,1128(sp)
    2870:	10bfff4c 	andi	r2,r2,65533
    2874:	2821883a 	mov	r16,r5
    2878:	d8cb883a 	add	r5,sp,r3
    287c:	dc811c15 	stw	r18,1136(sp)
    2880:	dc411b15 	stw	r17,1132(sp)
    2884:	dfc11d15 	stw	ra,1140(sp)
    2888:	2025883a 	mov	r18,r4
    288c:	d881030d 	sth	r2,1036(sp)
    2890:	dac11915 	stw	r11,1124(sp)
    2894:	da81038d 	sth	r10,1038(sp)
    2898:	da410715 	stw	r9,1052(sp)
    289c:	da010915 	stw	r8,1060(sp)
    28a0:	dec10015 	stw	sp,1024(sp)
    28a4:	dec10415 	stw	sp,1040(sp)
    28a8:	d8c10215 	stw	r3,1032(sp)
    28ac:	d8c10515 	stw	r3,1044(sp)
    28b0:	d8010615 	stw	zero,1048(sp)
    28b4:	00005580 	call	558 <___vfprintf_internal_r>
    28b8:	1023883a 	mov	r17,r2
    28bc:	10000416 	blt	r2,zero,28d0 <__sbprintf+0x80>
    28c0:	d9410004 	addi	r5,sp,1024
    28c4:	9009883a 	mov	r4,r18
    28c8:	000452c0 	call	452c <_fflush_r>
    28cc:	10000d1e 	bne	r2,zero,2904 <__sbprintf+0xb4>
    28d0:	d881030b 	ldhu	r2,1036(sp)
    28d4:	1080100c 	andi	r2,r2,64
    28d8:	10000326 	beq	r2,zero,28e8 <__sbprintf+0x98>
    28dc:	8080030b 	ldhu	r2,12(r16)
    28e0:	10801014 	ori	r2,r2,64
    28e4:	8080030d 	sth	r2,12(r16)
    28e8:	8805883a 	mov	r2,r17
    28ec:	dfc11d17 	ldw	ra,1140(sp)
    28f0:	dc811c17 	ldw	r18,1136(sp)
    28f4:	dc411b17 	ldw	r17,1132(sp)
    28f8:	dc011a17 	ldw	r16,1128(sp)
    28fc:	dec11e04 	addi	sp,sp,1144
    2900:	f800283a 	ret
    2904:	047fffc4 	movi	r17,-1
    2908:	003ff106 	br	28d0 <__alt_data_end+0xfffe28d0>

0000290c <__swsetup_r>:
    290c:	00800074 	movhi	r2,1
    2910:	defffd04 	addi	sp,sp,-12
    2914:	1085a404 	addi	r2,r2,5776
    2918:	dc400115 	stw	r17,4(sp)
    291c:	2023883a 	mov	r17,r4
    2920:	11000017 	ldw	r4,0(r2)
    2924:	dc000015 	stw	r16,0(sp)
    2928:	dfc00215 	stw	ra,8(sp)
    292c:	2821883a 	mov	r16,r5
    2930:	20000226 	beq	r4,zero,293c <__swsetup_r+0x30>
    2934:	20800e17 	ldw	r2,56(r4)
    2938:	10003126 	beq	r2,zero,2a00 <__swsetup_r+0xf4>
    293c:	8080030b 	ldhu	r2,12(r16)
    2940:	10c0020c 	andi	r3,r2,8
    2944:	1009883a 	mov	r4,r2
    2948:	18000f26 	beq	r3,zero,2988 <__swsetup_r+0x7c>
    294c:	80c00417 	ldw	r3,16(r16)
    2950:	18001526 	beq	r3,zero,29a8 <__swsetup_r+0x9c>
    2954:	1100004c 	andi	r4,r2,1
    2958:	20001c1e 	bne	r4,zero,29cc <__swsetup_r+0xc0>
    295c:	1080008c 	andi	r2,r2,2
    2960:	1000291e 	bne	r2,zero,2a08 <__swsetup_r+0xfc>
    2964:	80800517 	ldw	r2,20(r16)
    2968:	80800215 	stw	r2,8(r16)
    296c:	18001c26 	beq	r3,zero,29e0 <__swsetup_r+0xd4>
    2970:	0005883a 	mov	r2,zero
    2974:	dfc00217 	ldw	ra,8(sp)
    2978:	dc400117 	ldw	r17,4(sp)
    297c:	dc000017 	ldw	r16,0(sp)
    2980:	dec00304 	addi	sp,sp,12
    2984:	f800283a 	ret
    2988:	2080040c 	andi	r2,r4,16
    298c:	10002e26 	beq	r2,zero,2a48 <__swsetup_r+0x13c>
    2990:	2080010c 	andi	r2,r4,4
    2994:	10001e1e 	bne	r2,zero,2a10 <__swsetup_r+0x104>
    2998:	80c00417 	ldw	r3,16(r16)
    299c:	20800214 	ori	r2,r4,8
    29a0:	8080030d 	sth	r2,12(r16)
    29a4:	183feb1e 	bne	r3,zero,2954 <__alt_data_end+0xfffe2954>
    29a8:	1100a00c 	andi	r4,r2,640
    29ac:	01408004 	movi	r5,512
    29b0:	217fe826 	beq	r4,r5,2954 <__alt_data_end+0xfffe2954>
    29b4:	800b883a 	mov	r5,r16
    29b8:	8809883a 	mov	r4,r17
    29bc:	00054c80 	call	54c8 <__smakebuf_r>
    29c0:	8080030b 	ldhu	r2,12(r16)
    29c4:	80c00417 	ldw	r3,16(r16)
    29c8:	003fe206 	br	2954 <__alt_data_end+0xfffe2954>
    29cc:	80800517 	ldw	r2,20(r16)
    29d0:	80000215 	stw	zero,8(r16)
    29d4:	0085c83a 	sub	r2,zero,r2
    29d8:	80800615 	stw	r2,24(r16)
    29dc:	183fe41e 	bne	r3,zero,2970 <__alt_data_end+0xfffe2970>
    29e0:	80c0030b 	ldhu	r3,12(r16)
    29e4:	0005883a 	mov	r2,zero
    29e8:	1900200c 	andi	r4,r3,128
    29ec:	203fe126 	beq	r4,zero,2974 <__alt_data_end+0xfffe2974>
    29f0:	18c01014 	ori	r3,r3,64
    29f4:	80c0030d 	sth	r3,12(r16)
    29f8:	00bfffc4 	movi	r2,-1
    29fc:	003fdd06 	br	2974 <__alt_data_end+0xfffe2974>
    2a00:	00049180 	call	4918 <__sinit>
    2a04:	003fcd06 	br	293c <__alt_data_end+0xfffe293c>
    2a08:	0005883a 	mov	r2,zero
    2a0c:	003fd606 	br	2968 <__alt_data_end+0xfffe2968>
    2a10:	81400c17 	ldw	r5,48(r16)
    2a14:	28000626 	beq	r5,zero,2a30 <__swsetup_r+0x124>
    2a18:	80801004 	addi	r2,r16,64
    2a1c:	28800326 	beq	r5,r2,2a2c <__swsetup_r+0x120>
    2a20:	8809883a 	mov	r4,r17
    2a24:	0004a8c0 	call	4a8c <_free_r>
    2a28:	8100030b 	ldhu	r4,12(r16)
    2a2c:	80000c15 	stw	zero,48(r16)
    2a30:	80c00417 	ldw	r3,16(r16)
    2a34:	00bff6c4 	movi	r2,-37
    2a38:	1108703a 	and	r4,r2,r4
    2a3c:	80000115 	stw	zero,4(r16)
    2a40:	80c00015 	stw	r3,0(r16)
    2a44:	003fd506 	br	299c <__alt_data_end+0xfffe299c>
    2a48:	00800244 	movi	r2,9
    2a4c:	88800015 	stw	r2,0(r17)
    2a50:	20801014 	ori	r2,r4,64
    2a54:	8080030d 	sth	r2,12(r16)
    2a58:	00bfffc4 	movi	r2,-1
    2a5c:	003fc506 	br	2974 <__alt_data_end+0xfffe2974>

00002a60 <quorem>:
    2a60:	defff204 	addi	sp,sp,-56
    2a64:	ddc00b15 	stw	r23,44(sp)
    2a68:	20800417 	ldw	r2,16(r4)
    2a6c:	2dc00417 	ldw	r23,16(r5)
    2a70:	dfc00d15 	stw	ra,52(sp)
    2a74:	df000c15 	stw	fp,48(sp)
    2a78:	dd800a15 	stw	r22,40(sp)
    2a7c:	dd400915 	stw	r21,36(sp)
    2a80:	dd000815 	stw	r20,32(sp)
    2a84:	dcc00715 	stw	r19,28(sp)
    2a88:	dc800615 	stw	r18,24(sp)
    2a8c:	dc400515 	stw	r17,20(sp)
    2a90:	dc000415 	stw	r16,16(sp)
    2a94:	15c07a16 	blt	r2,r23,2c80 <quorem+0x220>
    2a98:	bdffffc4 	addi	r23,r23,-1
    2a9c:	bde9883a 	add	r20,r23,r23
    2aa0:	28c00504 	addi	r3,r5,20
    2aa4:	a529883a 	add	r20,r20,r20
    2aa8:	1d39883a 	add	fp,r3,r20
    2aac:	24c00504 	addi	r19,r4,20
    2ab0:	d9400215 	stw	r5,8(sp)
    2ab4:	9d29883a 	add	r20,r19,r20
    2ab8:	e1400017 	ldw	r5,0(fp)
    2abc:	d9000015 	stw	r4,0(sp)
    2ac0:	a1000017 	ldw	r4,0(r20)
    2ac4:	29400044 	addi	r5,r5,1
    2ac8:	d8c00115 	stw	r3,4(sp)
    2acc:	dd000315 	stw	r20,12(sp)
    2ad0:	000a9380 	call	a938 <__udivsi3>
    2ad4:	1025883a 	mov	r18,r2
    2ad8:	10003026 	beq	r2,zero,2b9c <quorem+0x13c>
    2adc:	dc400117 	ldw	r17,4(sp)
    2ae0:	9829883a 	mov	r20,r19
    2ae4:	002d883a 	mov	r22,zero
    2ae8:	0021883a 	mov	r16,zero
    2aec:	8d400017 	ldw	r21,0(r17)
    2af0:	900b883a 	mov	r5,r18
    2af4:	8c400104 	addi	r17,r17,4
    2af8:	a93fffcc 	andi	r4,r21,65535
    2afc:	000a9f40 	call	a9f4 <__mulsi3>
    2b00:	a808d43a 	srli	r4,r21,16
    2b04:	900b883a 	mov	r5,r18
    2b08:	15ad883a 	add	r22,r2,r22
    2b0c:	000a9f40 	call	a9f4 <__mulsi3>
    2b10:	a1000017 	ldw	r4,0(r20)
    2b14:	b00cd43a 	srli	r6,r22,16
    2b18:	b0ffffcc 	andi	r3,r22,65535
    2b1c:	217fffcc 	andi	r5,r4,65535
    2b20:	2c21883a 	add	r16,r5,r16
    2b24:	80c7c83a 	sub	r3,r16,r3
    2b28:	2008d43a 	srli	r4,r4,16
    2b2c:	1185883a 	add	r2,r2,r6
    2b30:	1821d43a 	srai	r16,r3,16
    2b34:	117fffcc 	andi	r5,r2,65535
    2b38:	2149c83a 	sub	r4,r4,r5
    2b3c:	2421883a 	add	r16,r4,r16
    2b40:	8008943a 	slli	r4,r16,16
    2b44:	18ffffcc 	andi	r3,r3,65535
    2b48:	102cd43a 	srli	r22,r2,16
    2b4c:	20c8b03a 	or	r4,r4,r3
    2b50:	a1000015 	stw	r4,0(r20)
    2b54:	8021d43a 	srai	r16,r16,16
    2b58:	a5000104 	addi	r20,r20,4
    2b5c:	e47fe32e 	bgeu	fp,r17,2aec <__alt_data_end+0xfffe2aec>
    2b60:	d8c00317 	ldw	r3,12(sp)
    2b64:	18800017 	ldw	r2,0(r3)
    2b68:	10000c1e 	bne	r2,zero,2b9c <quorem+0x13c>
    2b6c:	18bfff04 	addi	r2,r3,-4
    2b70:	9880082e 	bgeu	r19,r2,2b94 <quorem+0x134>
    2b74:	18ffff17 	ldw	r3,-4(r3)
    2b78:	18000326 	beq	r3,zero,2b88 <quorem+0x128>
    2b7c:	00000506 	br	2b94 <quorem+0x134>
    2b80:	10c00017 	ldw	r3,0(r2)
    2b84:	1800031e 	bne	r3,zero,2b94 <quorem+0x134>
    2b88:	10bfff04 	addi	r2,r2,-4
    2b8c:	bdffffc4 	addi	r23,r23,-1
    2b90:	98bffb36 	bltu	r19,r2,2b80 <__alt_data_end+0xfffe2b80>
    2b94:	d8c00017 	ldw	r3,0(sp)
    2b98:	1dc00415 	stw	r23,16(r3)
    2b9c:	d9400217 	ldw	r5,8(sp)
    2ba0:	d9000017 	ldw	r4,0(sp)
    2ba4:	0006cc40 	call	6cc4 <__mcmp>
    2ba8:	10002816 	blt	r2,zero,2c4c <quorem+0x1ec>
    2bac:	dc400117 	ldw	r17,4(sp)
    2bb0:	94800044 	addi	r18,r18,1
    2bb4:	980d883a 	mov	r6,r19
    2bb8:	0007883a 	mov	r3,zero
    2bbc:	31000017 	ldw	r4,0(r6)
    2bc0:	89400017 	ldw	r5,0(r17)
    2bc4:	31800104 	addi	r6,r6,4
    2bc8:	20bfffcc 	andi	r2,r4,65535
    2bcc:	10c7883a 	add	r3,r2,r3
    2bd0:	28bfffcc 	andi	r2,r5,65535
    2bd4:	1885c83a 	sub	r2,r3,r2
    2bd8:	280ad43a 	srli	r5,r5,16
    2bdc:	2008d43a 	srli	r4,r4,16
    2be0:	1007d43a 	srai	r3,r2,16
    2be4:	10bfffcc 	andi	r2,r2,65535
    2be8:	2149c83a 	sub	r4,r4,r5
    2bec:	20c9883a 	add	r4,r4,r3
    2bf0:	200a943a 	slli	r5,r4,16
    2bf4:	8c400104 	addi	r17,r17,4
    2bf8:	2007d43a 	srai	r3,r4,16
    2bfc:	2884b03a 	or	r2,r5,r2
    2c00:	30bfff15 	stw	r2,-4(r6)
    2c04:	e47fed2e 	bgeu	fp,r17,2bbc <__alt_data_end+0xfffe2bbc>
    2c08:	bdc5883a 	add	r2,r23,r23
    2c0c:	1085883a 	add	r2,r2,r2
    2c10:	9887883a 	add	r3,r19,r2
    2c14:	18800017 	ldw	r2,0(r3)
    2c18:	10000c1e 	bne	r2,zero,2c4c <quorem+0x1ec>
    2c1c:	18bfff04 	addi	r2,r3,-4
    2c20:	9880082e 	bgeu	r19,r2,2c44 <quorem+0x1e4>
    2c24:	18ffff17 	ldw	r3,-4(r3)
    2c28:	18000326 	beq	r3,zero,2c38 <quorem+0x1d8>
    2c2c:	00000506 	br	2c44 <quorem+0x1e4>
    2c30:	10c00017 	ldw	r3,0(r2)
    2c34:	1800031e 	bne	r3,zero,2c44 <quorem+0x1e4>
    2c38:	10bfff04 	addi	r2,r2,-4
    2c3c:	bdffffc4 	addi	r23,r23,-1
    2c40:	98bffb36 	bltu	r19,r2,2c30 <__alt_data_end+0xfffe2c30>
    2c44:	d8c00017 	ldw	r3,0(sp)
    2c48:	1dc00415 	stw	r23,16(r3)
    2c4c:	9005883a 	mov	r2,r18
    2c50:	dfc00d17 	ldw	ra,52(sp)
    2c54:	df000c17 	ldw	fp,48(sp)
    2c58:	ddc00b17 	ldw	r23,44(sp)
    2c5c:	dd800a17 	ldw	r22,40(sp)
    2c60:	dd400917 	ldw	r21,36(sp)
    2c64:	dd000817 	ldw	r20,32(sp)
    2c68:	dcc00717 	ldw	r19,28(sp)
    2c6c:	dc800617 	ldw	r18,24(sp)
    2c70:	dc400517 	ldw	r17,20(sp)
    2c74:	dc000417 	ldw	r16,16(sp)
    2c78:	dec00e04 	addi	sp,sp,56
    2c7c:	f800283a 	ret
    2c80:	0005883a 	mov	r2,zero
    2c84:	003ff206 	br	2c50 <__alt_data_end+0xfffe2c50>

00002c88 <_dtoa_r>:
    2c88:	20801017 	ldw	r2,64(r4)
    2c8c:	deffde04 	addi	sp,sp,-136
    2c90:	df002015 	stw	fp,128(sp)
    2c94:	dcc01b15 	stw	r19,108(sp)
    2c98:	dc801a15 	stw	r18,104(sp)
    2c9c:	dc401915 	stw	r17,100(sp)
    2ca0:	dc001815 	stw	r16,96(sp)
    2ca4:	dfc02115 	stw	ra,132(sp)
    2ca8:	ddc01f15 	stw	r23,124(sp)
    2cac:	dd801e15 	stw	r22,120(sp)
    2cb0:	dd401d15 	stw	r21,116(sp)
    2cb4:	dd001c15 	stw	r20,112(sp)
    2cb8:	d9c00315 	stw	r7,12(sp)
    2cbc:	2039883a 	mov	fp,r4
    2cc0:	3023883a 	mov	r17,r6
    2cc4:	2825883a 	mov	r18,r5
    2cc8:	dc002417 	ldw	r16,144(sp)
    2ccc:	3027883a 	mov	r19,r6
    2cd0:	10000826 	beq	r2,zero,2cf4 <_dtoa_r+0x6c>
    2cd4:	21801117 	ldw	r6,68(r4)
    2cd8:	00c00044 	movi	r3,1
    2cdc:	100b883a 	mov	r5,r2
    2ce0:	1986983a 	sll	r3,r3,r6
    2ce4:	11800115 	stw	r6,4(r2)
    2ce8:	10c00215 	stw	r3,8(r2)
    2cec:	00063e80 	call	63e8 <_Bfree>
    2cf0:	e0001015 	stw	zero,64(fp)
    2cf4:	88002e16 	blt	r17,zero,2db0 <_dtoa_r+0x128>
    2cf8:	80000015 	stw	zero,0(r16)
    2cfc:	889ffc2c 	andhi	r2,r17,32752
    2d00:	00dffc34 	movhi	r3,32752
    2d04:	10c01c26 	beq	r2,r3,2d78 <_dtoa_r+0xf0>
    2d08:	000d883a 	mov	r6,zero
    2d0c:	000f883a 	mov	r7,zero
    2d10:	9009883a 	mov	r4,r18
    2d14:	980b883a 	mov	r5,r19
    2d18:	000bc980 	call	bc98 <__eqdf2>
    2d1c:	10002b1e 	bne	r2,zero,2dcc <_dtoa_r+0x144>
    2d20:	d9c02317 	ldw	r7,140(sp)
    2d24:	00800044 	movi	r2,1
    2d28:	38800015 	stw	r2,0(r7)
    2d2c:	d8802517 	ldw	r2,148(sp)
    2d30:	10019e26 	beq	r2,zero,33ac <_dtoa_r+0x724>
    2d34:	d8c02517 	ldw	r3,148(sp)
    2d38:	00800074 	movhi	r2,1
    2d3c:	10be4944 	addi	r2,r2,-1755
    2d40:	18800015 	stw	r2,0(r3)
    2d44:	10bfffc4 	addi	r2,r2,-1
    2d48:	dfc02117 	ldw	ra,132(sp)
    2d4c:	df002017 	ldw	fp,128(sp)
    2d50:	ddc01f17 	ldw	r23,124(sp)
    2d54:	dd801e17 	ldw	r22,120(sp)
    2d58:	dd401d17 	ldw	r21,116(sp)
    2d5c:	dd001c17 	ldw	r20,112(sp)
    2d60:	dcc01b17 	ldw	r19,108(sp)
    2d64:	dc801a17 	ldw	r18,104(sp)
    2d68:	dc401917 	ldw	r17,100(sp)
    2d6c:	dc001817 	ldw	r16,96(sp)
    2d70:	dec02204 	addi	sp,sp,136
    2d74:	f800283a 	ret
    2d78:	d8c02317 	ldw	r3,140(sp)
    2d7c:	0089c3c4 	movi	r2,9999
    2d80:	18800015 	stw	r2,0(r3)
    2d84:	90017726 	beq	r18,zero,3364 <_dtoa_r+0x6dc>
    2d88:	00800074 	movhi	r2,1
    2d8c:	10be5504 	addi	r2,r2,-1708
    2d90:	d9002517 	ldw	r4,148(sp)
    2d94:	203fec26 	beq	r4,zero,2d48 <__alt_data_end+0xfffe2d48>
    2d98:	10c000c7 	ldb	r3,3(r2)
    2d9c:	1801781e 	bne	r3,zero,3380 <_dtoa_r+0x6f8>
    2da0:	10c000c4 	addi	r3,r2,3
    2da4:	d9802517 	ldw	r6,148(sp)
    2da8:	30c00015 	stw	r3,0(r6)
    2dac:	003fe606 	br	2d48 <__alt_data_end+0xfffe2d48>
    2db0:	04e00034 	movhi	r19,32768
    2db4:	9cffffc4 	addi	r19,r19,-1
    2db8:	00800044 	movi	r2,1
    2dbc:	8ce6703a 	and	r19,r17,r19
    2dc0:	80800015 	stw	r2,0(r16)
    2dc4:	9823883a 	mov	r17,r19
    2dc8:	003fcc06 	br	2cfc <__alt_data_end+0xfffe2cfc>
    2dcc:	d8800204 	addi	r2,sp,8
    2dd0:	d8800015 	stw	r2,0(sp)
    2dd4:	d9c00104 	addi	r7,sp,4
    2dd8:	900b883a 	mov	r5,r18
    2ddc:	980d883a 	mov	r6,r19
    2de0:	e009883a 	mov	r4,fp
    2de4:	8820d53a 	srli	r16,r17,20
    2de8:	00070900 	call	7090 <__d2b>
    2dec:	d8800915 	stw	r2,36(sp)
    2df0:	8001651e 	bne	r16,zero,3388 <_dtoa_r+0x700>
    2df4:	dd800217 	ldw	r22,8(sp)
    2df8:	dc000117 	ldw	r16,4(sp)
    2dfc:	00800804 	movi	r2,32
    2e00:	b421883a 	add	r16,r22,r16
    2e04:	80c10c84 	addi	r3,r16,1074
    2e08:	10c2d10e 	bge	r2,r3,3950 <_dtoa_r+0xcc8>
    2e0c:	00801004 	movi	r2,64
    2e10:	81010484 	addi	r4,r16,1042
    2e14:	10c7c83a 	sub	r3,r2,r3
    2e18:	9108d83a 	srl	r4,r18,r4
    2e1c:	88e2983a 	sll	r17,r17,r3
    2e20:	2448b03a 	or	r4,r4,r17
    2e24:	000d1b40 	call	d1b4 <__floatunsidf>
    2e28:	017f8434 	movhi	r5,65040
    2e2c:	01800044 	movi	r6,1
    2e30:	1009883a 	mov	r4,r2
    2e34:	194b883a 	add	r5,r3,r5
    2e38:	843fffc4 	addi	r16,r16,-1
    2e3c:	d9801115 	stw	r6,68(sp)
    2e40:	000d883a 	mov	r6,zero
    2e44:	01cffe34 	movhi	r7,16376
    2e48:	000c75c0 	call	c75c <__subdf3>
    2e4c:	0198dbf4 	movhi	r6,25455
    2e50:	01cff4f4 	movhi	r7,16339
    2e54:	3190d844 	addi	r6,r6,17249
    2e58:	39e1e9c4 	addi	r7,r7,-30809
    2e5c:	1009883a 	mov	r4,r2
    2e60:	180b883a 	mov	r5,r3
    2e64:	000bef00 	call	bef0 <__muldf3>
    2e68:	01a2d874 	movhi	r6,35681
    2e6c:	01cff1f4 	movhi	r7,16327
    2e70:	31b22cc4 	addi	r6,r6,-14157
    2e74:	39e28a04 	addi	r7,r7,-30168
    2e78:	180b883a 	mov	r5,r3
    2e7c:	1009883a 	mov	r4,r2
    2e80:	000aa1c0 	call	aa1c <__adddf3>
    2e84:	8009883a 	mov	r4,r16
    2e88:	1029883a 	mov	r20,r2
    2e8c:	1823883a 	mov	r17,r3
    2e90:	000d0d80 	call	d0d8 <__floatsidf>
    2e94:	019427f4 	movhi	r6,20639
    2e98:	01cff4f4 	movhi	r7,16339
    2e9c:	319e7ec4 	addi	r6,r6,31227
    2ea0:	39d104c4 	addi	r7,r7,17427
    2ea4:	1009883a 	mov	r4,r2
    2ea8:	180b883a 	mov	r5,r3
    2eac:	000bef00 	call	bef0 <__muldf3>
    2eb0:	100d883a 	mov	r6,r2
    2eb4:	180f883a 	mov	r7,r3
    2eb8:	a009883a 	mov	r4,r20
    2ebc:	880b883a 	mov	r5,r17
    2ec0:	000aa1c0 	call	aa1c <__adddf3>
    2ec4:	1009883a 	mov	r4,r2
    2ec8:	180b883a 	mov	r5,r3
    2ecc:	1029883a 	mov	r20,r2
    2ed0:	1823883a 	mov	r17,r3
    2ed4:	000d0580 	call	d058 <__fixdfsi>
    2ed8:	000d883a 	mov	r6,zero
    2edc:	000f883a 	mov	r7,zero
    2ee0:	a009883a 	mov	r4,r20
    2ee4:	880b883a 	mov	r5,r17
    2ee8:	d8800515 	stw	r2,20(sp)
    2eec:	000bdfc0 	call	bdfc <__ledf2>
    2ef0:	10028716 	blt	r2,zero,3910 <_dtoa_r+0xc88>
    2ef4:	d8c00517 	ldw	r3,20(sp)
    2ef8:	00800584 	movi	r2,22
    2efc:	10c27536 	bltu	r2,r3,38d4 <_dtoa_r+0xc4c>
    2f00:	180490fa 	slli	r2,r3,3
    2f04:	00c00074 	movhi	r3,1
    2f08:	18fe7104 	addi	r3,r3,-1596
    2f0c:	1885883a 	add	r2,r3,r2
    2f10:	11000017 	ldw	r4,0(r2)
    2f14:	11400117 	ldw	r5,4(r2)
    2f18:	900d883a 	mov	r6,r18
    2f1c:	980f883a 	mov	r7,r19
    2f20:	000bd200 	call	bd20 <__gedf2>
    2f24:	00828d0e 	bge	zero,r2,395c <_dtoa_r+0xcd4>
    2f28:	d9000517 	ldw	r4,20(sp)
    2f2c:	d8000e15 	stw	zero,56(sp)
    2f30:	213fffc4 	addi	r4,r4,-1
    2f34:	d9000515 	stw	r4,20(sp)
    2f38:	b42dc83a 	sub	r22,r22,r16
    2f3c:	b5bfffc4 	addi	r22,r22,-1
    2f40:	b0026f16 	blt	r22,zero,3900 <_dtoa_r+0xc78>
    2f44:	d8000815 	stw	zero,32(sp)
    2f48:	d9c00517 	ldw	r7,20(sp)
    2f4c:	38026416 	blt	r7,zero,38e0 <_dtoa_r+0xc58>
    2f50:	b1ed883a 	add	r22,r22,r7
    2f54:	d9c00d15 	stw	r7,52(sp)
    2f58:	d8000a15 	stw	zero,40(sp)
    2f5c:	d9800317 	ldw	r6,12(sp)
    2f60:	00800244 	movi	r2,9
    2f64:	11811436 	bltu	r2,r6,33b8 <_dtoa_r+0x730>
    2f68:	00800144 	movi	r2,5
    2f6c:	1184e10e 	bge	r2,r6,42f4 <_dtoa_r+0x166c>
    2f70:	31bfff04 	addi	r6,r6,-4
    2f74:	d9800315 	stw	r6,12(sp)
    2f78:	0023883a 	mov	r17,zero
    2f7c:	d9800317 	ldw	r6,12(sp)
    2f80:	008000c4 	movi	r2,3
    2f84:	30836726 	beq	r6,r2,3d24 <_dtoa_r+0x109c>
    2f88:	1183410e 	bge	r2,r6,3c90 <_dtoa_r+0x1008>
    2f8c:	d9c00317 	ldw	r7,12(sp)
    2f90:	00800104 	movi	r2,4
    2f94:	38827c26 	beq	r7,r2,3988 <_dtoa_r+0xd00>
    2f98:	00800144 	movi	r2,5
    2f9c:	3884c41e 	bne	r7,r2,42b0 <_dtoa_r+0x1628>
    2fa0:	00800044 	movi	r2,1
    2fa4:	d8800b15 	stw	r2,44(sp)
    2fa8:	d8c00517 	ldw	r3,20(sp)
    2fac:	d9002217 	ldw	r4,136(sp)
    2fb0:	1907883a 	add	r3,r3,r4
    2fb4:	19800044 	addi	r6,r3,1
    2fb8:	d8c00c15 	stw	r3,48(sp)
    2fbc:	d9800615 	stw	r6,24(sp)
    2fc0:	0183a40e 	bge	zero,r6,3e54 <_dtoa_r+0x11cc>
    2fc4:	d9800617 	ldw	r6,24(sp)
    2fc8:	3021883a 	mov	r16,r6
    2fcc:	e0001115 	stw	zero,68(fp)
    2fd0:	008005c4 	movi	r2,23
    2fd4:	1184c92e 	bgeu	r2,r6,42fc <_dtoa_r+0x1674>
    2fd8:	00c00044 	movi	r3,1
    2fdc:	00800104 	movi	r2,4
    2fe0:	1085883a 	add	r2,r2,r2
    2fe4:	11000504 	addi	r4,r2,20
    2fe8:	180b883a 	mov	r5,r3
    2fec:	18c00044 	addi	r3,r3,1
    2ff0:	313ffb2e 	bgeu	r6,r4,2fe0 <__alt_data_end+0xfffe2fe0>
    2ff4:	e1401115 	stw	r5,68(fp)
    2ff8:	e009883a 	mov	r4,fp
    2ffc:	00063400 	call	6340 <_Balloc>
    3000:	d8800715 	stw	r2,28(sp)
    3004:	e0801015 	stw	r2,64(fp)
    3008:	00800384 	movi	r2,14
    300c:	1400f736 	bltu	r2,r16,33ec <_dtoa_r+0x764>
    3010:	8800f626 	beq	r17,zero,33ec <_dtoa_r+0x764>
    3014:	d9c00517 	ldw	r7,20(sp)
    3018:	01c39a0e 	bge	zero,r7,3e84 <_dtoa_r+0x11fc>
    301c:	388003cc 	andi	r2,r7,15
    3020:	100490fa 	slli	r2,r2,3
    3024:	382bd13a 	srai	r21,r7,4
    3028:	00c00074 	movhi	r3,1
    302c:	18fe7104 	addi	r3,r3,-1596
    3030:	1885883a 	add	r2,r3,r2
    3034:	a8c0040c 	andi	r3,r21,16
    3038:	12400017 	ldw	r9,0(r2)
    303c:	12000117 	ldw	r8,4(r2)
    3040:	18037926 	beq	r3,zero,3e28 <_dtoa_r+0x11a0>
    3044:	00800074 	movhi	r2,1
    3048:	10be6704 	addi	r2,r2,-1636
    304c:	11800817 	ldw	r6,32(r2)
    3050:	11c00917 	ldw	r7,36(r2)
    3054:	9009883a 	mov	r4,r18
    3058:	980b883a 	mov	r5,r19
    305c:	da001715 	stw	r8,92(sp)
    3060:	da401615 	stw	r9,88(sp)
    3064:	000b2c80 	call	b2c8 <__divdf3>
    3068:	da001717 	ldw	r8,92(sp)
    306c:	da401617 	ldw	r9,88(sp)
    3070:	ad4003cc 	andi	r21,r21,15
    3074:	040000c4 	movi	r16,3
    3078:	1023883a 	mov	r17,r2
    307c:	1829883a 	mov	r20,r3
    3080:	a8001126 	beq	r21,zero,30c8 <_dtoa_r+0x440>
    3084:	05c00074 	movhi	r23,1
    3088:	bdfe6704 	addi	r23,r23,-1636
    308c:	4805883a 	mov	r2,r9
    3090:	4007883a 	mov	r3,r8
    3094:	a980004c 	andi	r6,r21,1
    3098:	1009883a 	mov	r4,r2
    309c:	a82bd07a 	srai	r21,r21,1
    30a0:	180b883a 	mov	r5,r3
    30a4:	30000426 	beq	r6,zero,30b8 <_dtoa_r+0x430>
    30a8:	b9800017 	ldw	r6,0(r23)
    30ac:	b9c00117 	ldw	r7,4(r23)
    30b0:	84000044 	addi	r16,r16,1
    30b4:	000bef00 	call	bef0 <__muldf3>
    30b8:	bdc00204 	addi	r23,r23,8
    30bc:	a83ff51e 	bne	r21,zero,3094 <__alt_data_end+0xfffe3094>
    30c0:	1013883a 	mov	r9,r2
    30c4:	1811883a 	mov	r8,r3
    30c8:	480d883a 	mov	r6,r9
    30cc:	400f883a 	mov	r7,r8
    30d0:	8809883a 	mov	r4,r17
    30d4:	a00b883a 	mov	r5,r20
    30d8:	000b2c80 	call	b2c8 <__divdf3>
    30dc:	d8800f15 	stw	r2,60(sp)
    30e0:	d8c01015 	stw	r3,64(sp)
    30e4:	d8c00e17 	ldw	r3,56(sp)
    30e8:	18000626 	beq	r3,zero,3104 <_dtoa_r+0x47c>
    30ec:	d9000f17 	ldw	r4,60(sp)
    30f0:	d9401017 	ldw	r5,64(sp)
    30f4:	000d883a 	mov	r6,zero
    30f8:	01cffc34 	movhi	r7,16368
    30fc:	000bdfc0 	call	bdfc <__ledf2>
    3100:	10040b16 	blt	r2,zero,4130 <_dtoa_r+0x14a8>
    3104:	8009883a 	mov	r4,r16
    3108:	000d0d80 	call	d0d8 <__floatsidf>
    310c:	d9800f17 	ldw	r6,60(sp)
    3110:	d9c01017 	ldw	r7,64(sp)
    3114:	1009883a 	mov	r4,r2
    3118:	180b883a 	mov	r5,r3
    311c:	000bef00 	call	bef0 <__muldf3>
    3120:	000d883a 	mov	r6,zero
    3124:	01d00734 	movhi	r7,16412
    3128:	1009883a 	mov	r4,r2
    312c:	180b883a 	mov	r5,r3
    3130:	000aa1c0 	call	aa1c <__adddf3>
    3134:	1021883a 	mov	r16,r2
    3138:	d8800617 	ldw	r2,24(sp)
    313c:	047f3034 	movhi	r17,64704
    3140:	1c63883a 	add	r17,r3,r17
    3144:	10031826 	beq	r2,zero,3da8 <_dtoa_r+0x1120>
    3148:	d8c00517 	ldw	r3,20(sp)
    314c:	db000617 	ldw	r12,24(sp)
    3150:	d8c01315 	stw	r3,76(sp)
    3154:	d9000b17 	ldw	r4,44(sp)
    3158:	20038f26 	beq	r4,zero,3f98 <_dtoa_r+0x1310>
    315c:	60bfffc4 	addi	r2,r12,-1
    3160:	100490fa 	slli	r2,r2,3
    3164:	00c00074 	movhi	r3,1
    3168:	18fe7104 	addi	r3,r3,-1596
    316c:	1885883a 	add	r2,r3,r2
    3170:	11800017 	ldw	r6,0(r2)
    3174:	11c00117 	ldw	r7,4(r2)
    3178:	d8800717 	ldw	r2,28(sp)
    317c:	0009883a 	mov	r4,zero
    3180:	014ff834 	movhi	r5,16352
    3184:	db001615 	stw	r12,88(sp)
    3188:	15c00044 	addi	r23,r2,1
    318c:	000b2c80 	call	b2c8 <__divdf3>
    3190:	800d883a 	mov	r6,r16
    3194:	880f883a 	mov	r7,r17
    3198:	1009883a 	mov	r4,r2
    319c:	180b883a 	mov	r5,r3
    31a0:	000c75c0 	call	c75c <__subdf3>
    31a4:	d9401017 	ldw	r5,64(sp)
    31a8:	d9000f17 	ldw	r4,60(sp)
    31ac:	102b883a 	mov	r21,r2
    31b0:	d8c01215 	stw	r3,72(sp)
    31b4:	000d0580 	call	d058 <__fixdfsi>
    31b8:	1009883a 	mov	r4,r2
    31bc:	1029883a 	mov	r20,r2
    31c0:	000d0d80 	call	d0d8 <__floatsidf>
    31c4:	d9000f17 	ldw	r4,60(sp)
    31c8:	d9401017 	ldw	r5,64(sp)
    31cc:	100d883a 	mov	r6,r2
    31d0:	180f883a 	mov	r7,r3
    31d4:	000c75c0 	call	c75c <__subdf3>
    31d8:	1823883a 	mov	r17,r3
    31dc:	d8c00717 	ldw	r3,28(sp)
    31e0:	d9401217 	ldw	r5,72(sp)
    31e4:	a2000c04 	addi	r8,r20,48
    31e8:	1021883a 	mov	r16,r2
    31ec:	1a000005 	stb	r8,0(r3)
    31f0:	800d883a 	mov	r6,r16
    31f4:	880f883a 	mov	r7,r17
    31f8:	a809883a 	mov	r4,r21
    31fc:	4029883a 	mov	r20,r8
    3200:	000bd200 	call	bd20 <__gedf2>
    3204:	00841d16 	blt	zero,r2,427c <_dtoa_r+0x15f4>
    3208:	800d883a 	mov	r6,r16
    320c:	880f883a 	mov	r7,r17
    3210:	0009883a 	mov	r4,zero
    3214:	014ffc34 	movhi	r5,16368
    3218:	000c75c0 	call	c75c <__subdf3>
    321c:	d9401217 	ldw	r5,72(sp)
    3220:	100d883a 	mov	r6,r2
    3224:	180f883a 	mov	r7,r3
    3228:	a809883a 	mov	r4,r21
    322c:	000bd200 	call	bd20 <__gedf2>
    3230:	db001617 	ldw	r12,88(sp)
    3234:	00840e16 	blt	zero,r2,4270 <_dtoa_r+0x15e8>
    3238:	00800044 	movi	r2,1
    323c:	13006b0e 	bge	r2,r12,33ec <_dtoa_r+0x764>
    3240:	d9000717 	ldw	r4,28(sp)
    3244:	dd800f15 	stw	r22,60(sp)
    3248:	dcc01015 	stw	r19,64(sp)
    324c:	2319883a 	add	r12,r4,r12
    3250:	dcc01217 	ldw	r19,72(sp)
    3254:	602d883a 	mov	r22,r12
    3258:	dc801215 	stw	r18,72(sp)
    325c:	b825883a 	mov	r18,r23
    3260:	00000906 	br	3288 <_dtoa_r+0x600>
    3264:	000c75c0 	call	c75c <__subdf3>
    3268:	a80d883a 	mov	r6,r21
    326c:	980f883a 	mov	r7,r19
    3270:	1009883a 	mov	r4,r2
    3274:	180b883a 	mov	r5,r3
    3278:	000bdfc0 	call	bdfc <__ledf2>
    327c:	1003e816 	blt	r2,zero,4220 <_dtoa_r+0x1598>
    3280:	b825883a 	mov	r18,r23
    3284:	bd83e926 	beq	r23,r22,422c <_dtoa_r+0x15a4>
    3288:	a809883a 	mov	r4,r21
    328c:	980b883a 	mov	r5,r19
    3290:	000d883a 	mov	r6,zero
    3294:	01d00934 	movhi	r7,16420
    3298:	000bef00 	call	bef0 <__muldf3>
    329c:	000d883a 	mov	r6,zero
    32a0:	01d00934 	movhi	r7,16420
    32a4:	8009883a 	mov	r4,r16
    32a8:	880b883a 	mov	r5,r17
    32ac:	102b883a 	mov	r21,r2
    32b0:	1827883a 	mov	r19,r3
    32b4:	000bef00 	call	bef0 <__muldf3>
    32b8:	180b883a 	mov	r5,r3
    32bc:	1009883a 	mov	r4,r2
    32c0:	1821883a 	mov	r16,r3
    32c4:	1023883a 	mov	r17,r2
    32c8:	000d0580 	call	d058 <__fixdfsi>
    32cc:	1009883a 	mov	r4,r2
    32d0:	1029883a 	mov	r20,r2
    32d4:	000d0d80 	call	d0d8 <__floatsidf>
    32d8:	8809883a 	mov	r4,r17
    32dc:	800b883a 	mov	r5,r16
    32e0:	100d883a 	mov	r6,r2
    32e4:	180f883a 	mov	r7,r3
    32e8:	000c75c0 	call	c75c <__subdf3>
    32ec:	a5000c04 	addi	r20,r20,48
    32f0:	a80d883a 	mov	r6,r21
    32f4:	980f883a 	mov	r7,r19
    32f8:	1009883a 	mov	r4,r2
    32fc:	180b883a 	mov	r5,r3
    3300:	95000005 	stb	r20,0(r18)
    3304:	1021883a 	mov	r16,r2
    3308:	1823883a 	mov	r17,r3
    330c:	000bdfc0 	call	bdfc <__ledf2>
    3310:	bdc00044 	addi	r23,r23,1
    3314:	800d883a 	mov	r6,r16
    3318:	880f883a 	mov	r7,r17
    331c:	0009883a 	mov	r4,zero
    3320:	014ffc34 	movhi	r5,16368
    3324:	103fcf0e 	bge	r2,zero,3264 <__alt_data_end+0xfffe3264>
    3328:	d8c01317 	ldw	r3,76(sp)
    332c:	d8c00515 	stw	r3,20(sp)
    3330:	d9400917 	ldw	r5,36(sp)
    3334:	e009883a 	mov	r4,fp
    3338:	00063e80 	call	63e8 <_Bfree>
    333c:	d9000517 	ldw	r4,20(sp)
    3340:	d9802317 	ldw	r6,140(sp)
    3344:	d9c02517 	ldw	r7,148(sp)
    3348:	b8000005 	stb	zero,0(r23)
    334c:	20800044 	addi	r2,r4,1
    3350:	30800015 	stw	r2,0(r6)
    3354:	3802aa26 	beq	r7,zero,3e00 <_dtoa_r+0x1178>
    3358:	3dc00015 	stw	r23,0(r7)
    335c:	d8800717 	ldw	r2,28(sp)
    3360:	003e7906 	br	2d48 <__alt_data_end+0xfffe2d48>
    3364:	00800434 	movhi	r2,16
    3368:	10bfffc4 	addi	r2,r2,-1
    336c:	88a2703a 	and	r17,r17,r2
    3370:	883e851e 	bne	r17,zero,2d88 <__alt_data_end+0xfffe2d88>
    3374:	00800074 	movhi	r2,1
    3378:	10be5204 	addi	r2,r2,-1720
    337c:	003e8406 	br	2d90 <__alt_data_end+0xfffe2d90>
    3380:	10c00204 	addi	r3,r2,8
    3384:	003e8706 	br	2da4 <__alt_data_end+0xfffe2da4>
    3388:	01400434 	movhi	r5,16
    338c:	297fffc4 	addi	r5,r5,-1
    3390:	994a703a 	and	r5,r19,r5
    3394:	9009883a 	mov	r4,r18
    3398:	843f0044 	addi	r16,r16,-1023
    339c:	294ffc34 	orhi	r5,r5,16368
    33a0:	dd800217 	ldw	r22,8(sp)
    33a4:	d8001115 	stw	zero,68(sp)
    33a8:	003ea506 	br	2e40 <__alt_data_end+0xfffe2e40>
    33ac:	00800074 	movhi	r2,1
    33b0:	10be4904 	addi	r2,r2,-1756
    33b4:	003e6406 	br	2d48 <__alt_data_end+0xfffe2d48>
    33b8:	e0001115 	stw	zero,68(fp)
    33bc:	000b883a 	mov	r5,zero
    33c0:	e009883a 	mov	r4,fp
    33c4:	00063400 	call	6340 <_Balloc>
    33c8:	01bfffc4 	movi	r6,-1
    33cc:	01c00044 	movi	r7,1
    33d0:	d8800715 	stw	r2,28(sp)
    33d4:	d9800c15 	stw	r6,48(sp)
    33d8:	e0801015 	stw	r2,64(fp)
    33dc:	d8000315 	stw	zero,12(sp)
    33e0:	d9c00b15 	stw	r7,44(sp)
    33e4:	d9800615 	stw	r6,24(sp)
    33e8:	d8002215 	stw	zero,136(sp)
    33ec:	d8800117 	ldw	r2,4(sp)
    33f0:	10008916 	blt	r2,zero,3618 <_dtoa_r+0x990>
    33f4:	d9000517 	ldw	r4,20(sp)
    33f8:	00c00384 	movi	r3,14
    33fc:	19008616 	blt	r3,r4,3618 <_dtoa_r+0x990>
    3400:	200490fa 	slli	r2,r4,3
    3404:	00c00074 	movhi	r3,1
    3408:	d9802217 	ldw	r6,136(sp)
    340c:	18fe7104 	addi	r3,r3,-1596
    3410:	1885883a 	add	r2,r3,r2
    3414:	14000017 	ldw	r16,0(r2)
    3418:	14400117 	ldw	r17,4(r2)
    341c:	30016316 	blt	r6,zero,39ac <_dtoa_r+0xd24>
    3420:	800d883a 	mov	r6,r16
    3424:	880f883a 	mov	r7,r17
    3428:	9009883a 	mov	r4,r18
    342c:	980b883a 	mov	r5,r19
    3430:	000b2c80 	call	b2c8 <__divdf3>
    3434:	180b883a 	mov	r5,r3
    3438:	1009883a 	mov	r4,r2
    343c:	000d0580 	call	d058 <__fixdfsi>
    3440:	1009883a 	mov	r4,r2
    3444:	102b883a 	mov	r21,r2
    3448:	000d0d80 	call	d0d8 <__floatsidf>
    344c:	800d883a 	mov	r6,r16
    3450:	880f883a 	mov	r7,r17
    3454:	1009883a 	mov	r4,r2
    3458:	180b883a 	mov	r5,r3
    345c:	000bef00 	call	bef0 <__muldf3>
    3460:	100d883a 	mov	r6,r2
    3464:	180f883a 	mov	r7,r3
    3468:	9009883a 	mov	r4,r18
    346c:	980b883a 	mov	r5,r19
    3470:	000c75c0 	call	c75c <__subdf3>
    3474:	d9c00717 	ldw	r7,28(sp)
    3478:	1009883a 	mov	r4,r2
    347c:	a8800c04 	addi	r2,r21,48
    3480:	38800005 	stb	r2,0(r7)
    3484:	3dc00044 	addi	r23,r7,1
    3488:	d9c00617 	ldw	r7,24(sp)
    348c:	01800044 	movi	r6,1
    3490:	180b883a 	mov	r5,r3
    3494:	2005883a 	mov	r2,r4
    3498:	39803826 	beq	r7,r6,357c <_dtoa_r+0x8f4>
    349c:	000d883a 	mov	r6,zero
    34a0:	01d00934 	movhi	r7,16420
    34a4:	000bef00 	call	bef0 <__muldf3>
    34a8:	000d883a 	mov	r6,zero
    34ac:	000f883a 	mov	r7,zero
    34b0:	1009883a 	mov	r4,r2
    34b4:	180b883a 	mov	r5,r3
    34b8:	1025883a 	mov	r18,r2
    34bc:	1827883a 	mov	r19,r3
    34c0:	000bc980 	call	bc98 <__eqdf2>
    34c4:	103f9a26 	beq	r2,zero,3330 <__alt_data_end+0xfffe3330>
    34c8:	d9c00617 	ldw	r7,24(sp)
    34cc:	d8c00717 	ldw	r3,28(sp)
    34d0:	b829883a 	mov	r20,r23
    34d4:	38bfffc4 	addi	r2,r7,-1
    34d8:	18ad883a 	add	r22,r3,r2
    34dc:	00000a06 	br	3508 <_dtoa_r+0x880>
    34e0:	000bef00 	call	bef0 <__muldf3>
    34e4:	000d883a 	mov	r6,zero
    34e8:	000f883a 	mov	r7,zero
    34ec:	1009883a 	mov	r4,r2
    34f0:	180b883a 	mov	r5,r3
    34f4:	1025883a 	mov	r18,r2
    34f8:	1827883a 	mov	r19,r3
    34fc:	b829883a 	mov	r20,r23
    3500:	000bc980 	call	bc98 <__eqdf2>
    3504:	103f8a26 	beq	r2,zero,3330 <__alt_data_end+0xfffe3330>
    3508:	800d883a 	mov	r6,r16
    350c:	880f883a 	mov	r7,r17
    3510:	9009883a 	mov	r4,r18
    3514:	980b883a 	mov	r5,r19
    3518:	000b2c80 	call	b2c8 <__divdf3>
    351c:	180b883a 	mov	r5,r3
    3520:	1009883a 	mov	r4,r2
    3524:	000d0580 	call	d058 <__fixdfsi>
    3528:	1009883a 	mov	r4,r2
    352c:	102b883a 	mov	r21,r2
    3530:	000d0d80 	call	d0d8 <__floatsidf>
    3534:	800d883a 	mov	r6,r16
    3538:	880f883a 	mov	r7,r17
    353c:	1009883a 	mov	r4,r2
    3540:	180b883a 	mov	r5,r3
    3544:	000bef00 	call	bef0 <__muldf3>
    3548:	100d883a 	mov	r6,r2
    354c:	180f883a 	mov	r7,r3
    3550:	9009883a 	mov	r4,r18
    3554:	980b883a 	mov	r5,r19
    3558:	000c75c0 	call	c75c <__subdf3>
    355c:	aa000c04 	addi	r8,r21,48
    3560:	a2000005 	stb	r8,0(r20)
    3564:	000d883a 	mov	r6,zero
    3568:	01d00934 	movhi	r7,16420
    356c:	1009883a 	mov	r4,r2
    3570:	180b883a 	mov	r5,r3
    3574:	a5c00044 	addi	r23,r20,1
    3578:	b53fd91e 	bne	r22,r20,34e0 <__alt_data_end+0xfffe34e0>
    357c:	100d883a 	mov	r6,r2
    3580:	180f883a 	mov	r7,r3
    3584:	1009883a 	mov	r4,r2
    3588:	180b883a 	mov	r5,r3
    358c:	000aa1c0 	call	aa1c <__adddf3>
    3590:	100d883a 	mov	r6,r2
    3594:	180f883a 	mov	r7,r3
    3598:	8009883a 	mov	r4,r16
    359c:	880b883a 	mov	r5,r17
    35a0:	1027883a 	mov	r19,r2
    35a4:	1825883a 	mov	r18,r3
    35a8:	000bdfc0 	call	bdfc <__ledf2>
    35ac:	10000816 	blt	r2,zero,35d0 <_dtoa_r+0x948>
    35b0:	980d883a 	mov	r6,r19
    35b4:	900f883a 	mov	r7,r18
    35b8:	8009883a 	mov	r4,r16
    35bc:	880b883a 	mov	r5,r17
    35c0:	000bc980 	call	bc98 <__eqdf2>
    35c4:	103f5a1e 	bne	r2,zero,3330 <__alt_data_end+0xfffe3330>
    35c8:	ad40004c 	andi	r21,r21,1
    35cc:	a83f5826 	beq	r21,zero,3330 <__alt_data_end+0xfffe3330>
    35d0:	bd3fffc3 	ldbu	r20,-1(r23)
    35d4:	b8bfffc4 	addi	r2,r23,-1
    35d8:	1007883a 	mov	r3,r2
    35dc:	01400e44 	movi	r5,57
    35e0:	d9800717 	ldw	r6,28(sp)
    35e4:	00000506 	br	35fc <_dtoa_r+0x974>
    35e8:	18ffffc4 	addi	r3,r3,-1
    35ec:	11824726 	beq	r2,r6,3f0c <_dtoa_r+0x1284>
    35f0:	1d000003 	ldbu	r20,0(r3)
    35f4:	102f883a 	mov	r23,r2
    35f8:	10bfffc4 	addi	r2,r2,-1
    35fc:	a1003fcc 	andi	r4,r20,255
    3600:	2100201c 	xori	r4,r4,128
    3604:	213fe004 	addi	r4,r4,-128
    3608:	217ff726 	beq	r4,r5,35e8 <__alt_data_end+0xfffe35e8>
    360c:	a2000044 	addi	r8,r20,1
    3610:	12000005 	stb	r8,0(r2)
    3614:	003f4606 	br	3330 <__alt_data_end+0xfffe3330>
    3618:	d9000b17 	ldw	r4,44(sp)
    361c:	2000c826 	beq	r4,zero,3940 <_dtoa_r+0xcb8>
    3620:	d9800317 	ldw	r6,12(sp)
    3624:	00c00044 	movi	r3,1
    3628:	1980f90e 	bge	r3,r6,3a10 <_dtoa_r+0xd88>
    362c:	d8800617 	ldw	r2,24(sp)
    3630:	d8c00a17 	ldw	r3,40(sp)
    3634:	157fffc4 	addi	r21,r2,-1
    3638:	1d41f316 	blt	r3,r21,3e08 <_dtoa_r+0x1180>
    363c:	1d6bc83a 	sub	r21,r3,r21
    3640:	d9c00617 	ldw	r7,24(sp)
    3644:	3802aa16 	blt	r7,zero,40f0 <_dtoa_r+0x1468>
    3648:	dd000817 	ldw	r20,32(sp)
    364c:	d8800617 	ldw	r2,24(sp)
    3650:	d8c00817 	ldw	r3,32(sp)
    3654:	01400044 	movi	r5,1
    3658:	e009883a 	mov	r4,fp
    365c:	1887883a 	add	r3,r3,r2
    3660:	d8c00815 	stw	r3,32(sp)
    3664:	b0ad883a 	add	r22,r22,r2
    3668:	00067740 	call	6774 <__i2b>
    366c:	1023883a 	mov	r17,r2
    3670:	a0000826 	beq	r20,zero,3694 <_dtoa_r+0xa0c>
    3674:	0580070e 	bge	zero,r22,3694 <_dtoa_r+0xa0c>
    3678:	a005883a 	mov	r2,r20
    367c:	b500b916 	blt	r22,r20,3964 <_dtoa_r+0xcdc>
    3680:	d9000817 	ldw	r4,32(sp)
    3684:	a0a9c83a 	sub	r20,r20,r2
    3688:	b0adc83a 	sub	r22,r22,r2
    368c:	2089c83a 	sub	r4,r4,r2
    3690:	d9000815 	stw	r4,32(sp)
    3694:	d9800a17 	ldw	r6,40(sp)
    3698:	0181810e 	bge	zero,r6,3ca0 <_dtoa_r+0x1018>
    369c:	d9c00b17 	ldw	r7,44(sp)
    36a0:	3800b326 	beq	r7,zero,3970 <_dtoa_r+0xce8>
    36a4:	a800b226 	beq	r21,zero,3970 <_dtoa_r+0xce8>
    36a8:	880b883a 	mov	r5,r17
    36ac:	a80d883a 	mov	r6,r21
    36b0:	e009883a 	mov	r4,fp
    36b4:	0006a3c0 	call	6a3c <__pow5mult>
    36b8:	d9800917 	ldw	r6,36(sp)
    36bc:	100b883a 	mov	r5,r2
    36c0:	e009883a 	mov	r4,fp
    36c4:	1023883a 	mov	r17,r2
    36c8:	00067b00 	call	67b0 <__multiply>
    36cc:	1021883a 	mov	r16,r2
    36d0:	d8800a17 	ldw	r2,40(sp)
    36d4:	d9400917 	ldw	r5,36(sp)
    36d8:	e009883a 	mov	r4,fp
    36dc:	1545c83a 	sub	r2,r2,r21
    36e0:	d8800a15 	stw	r2,40(sp)
    36e4:	00063e80 	call	63e8 <_Bfree>
    36e8:	d8c00a17 	ldw	r3,40(sp)
    36ec:	18009f1e 	bne	r3,zero,396c <_dtoa_r+0xce4>
    36f0:	05c00044 	movi	r23,1
    36f4:	e009883a 	mov	r4,fp
    36f8:	b80b883a 	mov	r5,r23
    36fc:	00067740 	call	6774 <__i2b>
    3700:	d9000d17 	ldw	r4,52(sp)
    3704:	102b883a 	mov	r21,r2
    3708:	2000ce26 	beq	r4,zero,3a44 <_dtoa_r+0xdbc>
    370c:	200d883a 	mov	r6,r4
    3710:	100b883a 	mov	r5,r2
    3714:	e009883a 	mov	r4,fp
    3718:	0006a3c0 	call	6a3c <__pow5mult>
    371c:	d9800317 	ldw	r6,12(sp)
    3720:	102b883a 	mov	r21,r2
    3724:	b981810e 	bge	r23,r6,3d2c <_dtoa_r+0x10a4>
    3728:	0027883a 	mov	r19,zero
    372c:	a8800417 	ldw	r2,16(r21)
    3730:	05c00804 	movi	r23,32
    3734:	10800104 	addi	r2,r2,4
    3738:	1085883a 	add	r2,r2,r2
    373c:	1085883a 	add	r2,r2,r2
    3740:	a885883a 	add	r2,r21,r2
    3744:	11000017 	ldw	r4,0(r2)
    3748:	000665c0 	call	665c <__hi0bits>
    374c:	b885c83a 	sub	r2,r23,r2
    3750:	1585883a 	add	r2,r2,r22
    3754:	108007cc 	andi	r2,r2,31
    3758:	1000b326 	beq	r2,zero,3a28 <_dtoa_r+0xda0>
    375c:	00c00804 	movi	r3,32
    3760:	1887c83a 	sub	r3,r3,r2
    3764:	01000104 	movi	r4,4
    3768:	20c2cd0e 	bge	r4,r3,42a0 <_dtoa_r+0x1618>
    376c:	00c00704 	movi	r3,28
    3770:	1885c83a 	sub	r2,r3,r2
    3774:	d8c00817 	ldw	r3,32(sp)
    3778:	a0a9883a 	add	r20,r20,r2
    377c:	b0ad883a 	add	r22,r22,r2
    3780:	1887883a 	add	r3,r3,r2
    3784:	d8c00815 	stw	r3,32(sp)
    3788:	d9800817 	ldw	r6,32(sp)
    378c:	0180040e 	bge	zero,r6,37a0 <_dtoa_r+0xb18>
    3790:	800b883a 	mov	r5,r16
    3794:	e009883a 	mov	r4,fp
    3798:	0006b7c0 	call	6b7c <__lshift>
    379c:	1021883a 	mov	r16,r2
    37a0:	0580050e 	bge	zero,r22,37b8 <_dtoa_r+0xb30>
    37a4:	a80b883a 	mov	r5,r21
    37a8:	b00d883a 	mov	r6,r22
    37ac:	e009883a 	mov	r4,fp
    37b0:	0006b7c0 	call	6b7c <__lshift>
    37b4:	102b883a 	mov	r21,r2
    37b8:	d9c00e17 	ldw	r7,56(sp)
    37bc:	3801211e 	bne	r7,zero,3c44 <_dtoa_r+0xfbc>
    37c0:	d9800617 	ldw	r6,24(sp)
    37c4:	0181380e 	bge	zero,r6,3ca8 <_dtoa_r+0x1020>
    37c8:	d8c00b17 	ldw	r3,44(sp)
    37cc:	1800ab1e 	bne	r3,zero,3a7c <_dtoa_r+0xdf4>
    37d0:	dc800717 	ldw	r18,28(sp)
    37d4:	dcc00617 	ldw	r19,24(sp)
    37d8:	9029883a 	mov	r20,r18
    37dc:	00000206 	br	37e8 <_dtoa_r+0xb60>
    37e0:	00064100 	call	6410 <__multadd>
    37e4:	1021883a 	mov	r16,r2
    37e8:	a80b883a 	mov	r5,r21
    37ec:	8009883a 	mov	r4,r16
    37f0:	0002a600 	call	2a60 <quorem>
    37f4:	10800c04 	addi	r2,r2,48
    37f8:	90800005 	stb	r2,0(r18)
    37fc:	94800044 	addi	r18,r18,1
    3800:	9507c83a 	sub	r3,r18,r20
    3804:	000f883a 	mov	r7,zero
    3808:	01800284 	movi	r6,10
    380c:	800b883a 	mov	r5,r16
    3810:	e009883a 	mov	r4,fp
    3814:	1cfff216 	blt	r3,r19,37e0 <__alt_data_end+0xfffe37e0>
    3818:	1011883a 	mov	r8,r2
    381c:	d8800617 	ldw	r2,24(sp)
    3820:	0082370e 	bge	zero,r2,4100 <_dtoa_r+0x1478>
    3824:	d9000717 	ldw	r4,28(sp)
    3828:	0025883a 	mov	r18,zero
    382c:	20af883a 	add	r23,r4,r2
    3830:	01800044 	movi	r6,1
    3834:	800b883a 	mov	r5,r16
    3838:	e009883a 	mov	r4,fp
    383c:	da001715 	stw	r8,92(sp)
    3840:	0006b7c0 	call	6b7c <__lshift>
    3844:	a80b883a 	mov	r5,r21
    3848:	1009883a 	mov	r4,r2
    384c:	d8800915 	stw	r2,36(sp)
    3850:	0006cc40 	call	6cc4 <__mcmp>
    3854:	da001717 	ldw	r8,92(sp)
    3858:	0081800e 	bge	zero,r2,3e5c <_dtoa_r+0x11d4>
    385c:	b93fffc3 	ldbu	r4,-1(r23)
    3860:	b8bfffc4 	addi	r2,r23,-1
    3864:	1007883a 	mov	r3,r2
    3868:	01800e44 	movi	r6,57
    386c:	d9c00717 	ldw	r7,28(sp)
    3870:	00000506 	br	3888 <_dtoa_r+0xc00>
    3874:	18ffffc4 	addi	r3,r3,-1
    3878:	11c12326 	beq	r2,r7,3d08 <_dtoa_r+0x1080>
    387c:	19000003 	ldbu	r4,0(r3)
    3880:	102f883a 	mov	r23,r2
    3884:	10bfffc4 	addi	r2,r2,-1
    3888:	21403fcc 	andi	r5,r4,255
    388c:	2940201c 	xori	r5,r5,128
    3890:	297fe004 	addi	r5,r5,-128
    3894:	29bff726 	beq	r5,r6,3874 <__alt_data_end+0xfffe3874>
    3898:	21000044 	addi	r4,r4,1
    389c:	11000005 	stb	r4,0(r2)
    38a0:	a80b883a 	mov	r5,r21
    38a4:	e009883a 	mov	r4,fp
    38a8:	00063e80 	call	63e8 <_Bfree>
    38ac:	883ea026 	beq	r17,zero,3330 <__alt_data_end+0xfffe3330>
    38b0:	90000426 	beq	r18,zero,38c4 <_dtoa_r+0xc3c>
    38b4:	94400326 	beq	r18,r17,38c4 <_dtoa_r+0xc3c>
    38b8:	900b883a 	mov	r5,r18
    38bc:	e009883a 	mov	r4,fp
    38c0:	00063e80 	call	63e8 <_Bfree>
    38c4:	880b883a 	mov	r5,r17
    38c8:	e009883a 	mov	r4,fp
    38cc:	00063e80 	call	63e8 <_Bfree>
    38d0:	003e9706 	br	3330 <__alt_data_end+0xfffe3330>
    38d4:	01800044 	movi	r6,1
    38d8:	d9800e15 	stw	r6,56(sp)
    38dc:	003d9606 	br	2f38 <__alt_data_end+0xfffe2f38>
    38e0:	d8800817 	ldw	r2,32(sp)
    38e4:	d8c00517 	ldw	r3,20(sp)
    38e8:	d8000d15 	stw	zero,52(sp)
    38ec:	10c5c83a 	sub	r2,r2,r3
    38f0:	00c9c83a 	sub	r4,zero,r3
    38f4:	d8800815 	stw	r2,32(sp)
    38f8:	d9000a15 	stw	r4,40(sp)
    38fc:	003d9706 	br	2f5c <__alt_data_end+0xfffe2f5c>
    3900:	05adc83a 	sub	r22,zero,r22
    3904:	dd800815 	stw	r22,32(sp)
    3908:	002d883a 	mov	r22,zero
    390c:	003d8e06 	br	2f48 <__alt_data_end+0xfffe2f48>
    3910:	d9000517 	ldw	r4,20(sp)
    3914:	000d0d80 	call	d0d8 <__floatsidf>
    3918:	100d883a 	mov	r6,r2
    391c:	180f883a 	mov	r7,r3
    3920:	a009883a 	mov	r4,r20
    3924:	880b883a 	mov	r5,r17
    3928:	000bc980 	call	bc98 <__eqdf2>
    392c:	103d7126 	beq	r2,zero,2ef4 <__alt_data_end+0xfffe2ef4>
    3930:	d9c00517 	ldw	r7,20(sp)
    3934:	39ffffc4 	addi	r7,r7,-1
    3938:	d9c00515 	stw	r7,20(sp)
    393c:	003d6d06 	br	2ef4 <__alt_data_end+0xfffe2ef4>
    3940:	dd400a17 	ldw	r21,40(sp)
    3944:	dd000817 	ldw	r20,32(sp)
    3948:	0023883a 	mov	r17,zero
    394c:	003f4806 	br	3670 <__alt_data_end+0xfffe3670>
    3950:	10e3c83a 	sub	r17,r2,r3
    3954:	9448983a 	sll	r4,r18,r17
    3958:	003d3206 	br	2e24 <__alt_data_end+0xfffe2e24>
    395c:	d8000e15 	stw	zero,56(sp)
    3960:	003d7506 	br	2f38 <__alt_data_end+0xfffe2f38>
    3964:	b005883a 	mov	r2,r22
    3968:	003f4506 	br	3680 <__alt_data_end+0xfffe3680>
    396c:	dc000915 	stw	r16,36(sp)
    3970:	d9800a17 	ldw	r6,40(sp)
    3974:	d9400917 	ldw	r5,36(sp)
    3978:	e009883a 	mov	r4,fp
    397c:	0006a3c0 	call	6a3c <__pow5mult>
    3980:	1021883a 	mov	r16,r2
    3984:	003f5a06 	br	36f0 <__alt_data_end+0xfffe36f0>
    3988:	01c00044 	movi	r7,1
    398c:	d9c00b15 	stw	r7,44(sp)
    3990:	d8802217 	ldw	r2,136(sp)
    3994:	0081280e 	bge	zero,r2,3e38 <_dtoa_r+0x11b0>
    3998:	100d883a 	mov	r6,r2
    399c:	1021883a 	mov	r16,r2
    39a0:	d8800c15 	stw	r2,48(sp)
    39a4:	d8800615 	stw	r2,24(sp)
    39a8:	003d8806 	br	2fcc <__alt_data_end+0xfffe2fcc>
    39ac:	d8800617 	ldw	r2,24(sp)
    39b0:	00be9b16 	blt	zero,r2,3420 <__alt_data_end+0xfffe3420>
    39b4:	10010f1e 	bne	r2,zero,3df4 <_dtoa_r+0x116c>
    39b8:	880b883a 	mov	r5,r17
    39bc:	000d883a 	mov	r6,zero
    39c0:	01d00534 	movhi	r7,16404
    39c4:	8009883a 	mov	r4,r16
    39c8:	000bef00 	call	bef0 <__muldf3>
    39cc:	900d883a 	mov	r6,r18
    39d0:	980f883a 	mov	r7,r19
    39d4:	1009883a 	mov	r4,r2
    39d8:	180b883a 	mov	r5,r3
    39dc:	000bd200 	call	bd20 <__gedf2>
    39e0:	002b883a 	mov	r21,zero
    39e4:	0023883a 	mov	r17,zero
    39e8:	1000bf16 	blt	r2,zero,3ce8 <_dtoa_r+0x1060>
    39ec:	d9802217 	ldw	r6,136(sp)
    39f0:	ddc00717 	ldw	r23,28(sp)
    39f4:	018c303a 	nor	r6,zero,r6
    39f8:	d9800515 	stw	r6,20(sp)
    39fc:	a80b883a 	mov	r5,r21
    3a00:	e009883a 	mov	r4,fp
    3a04:	00063e80 	call	63e8 <_Bfree>
    3a08:	883e4926 	beq	r17,zero,3330 <__alt_data_end+0xfffe3330>
    3a0c:	003fad06 	br	38c4 <__alt_data_end+0xfffe38c4>
    3a10:	d9c01117 	ldw	r7,68(sp)
    3a14:	3801bc26 	beq	r7,zero,4108 <_dtoa_r+0x1480>
    3a18:	10810cc4 	addi	r2,r2,1075
    3a1c:	dd400a17 	ldw	r21,40(sp)
    3a20:	dd000817 	ldw	r20,32(sp)
    3a24:	003f0a06 	br	3650 <__alt_data_end+0xfffe3650>
    3a28:	00800704 	movi	r2,28
    3a2c:	d9000817 	ldw	r4,32(sp)
    3a30:	a0a9883a 	add	r20,r20,r2
    3a34:	b0ad883a 	add	r22,r22,r2
    3a38:	2089883a 	add	r4,r4,r2
    3a3c:	d9000815 	stw	r4,32(sp)
    3a40:	003f5106 	br	3788 <__alt_data_end+0xfffe3788>
    3a44:	d8c00317 	ldw	r3,12(sp)
    3a48:	b8c1fc0e 	bge	r23,r3,423c <_dtoa_r+0x15b4>
    3a4c:	0027883a 	mov	r19,zero
    3a50:	b805883a 	mov	r2,r23
    3a54:	003f3e06 	br	3750 <__alt_data_end+0xfffe3750>
    3a58:	880b883a 	mov	r5,r17
    3a5c:	e009883a 	mov	r4,fp
    3a60:	000f883a 	mov	r7,zero
    3a64:	01800284 	movi	r6,10
    3a68:	00064100 	call	6410 <__multadd>
    3a6c:	d9000c17 	ldw	r4,48(sp)
    3a70:	1023883a 	mov	r17,r2
    3a74:	0102040e 	bge	zero,r4,4288 <_dtoa_r+0x1600>
    3a78:	d9000615 	stw	r4,24(sp)
    3a7c:	0500050e 	bge	zero,r20,3a94 <_dtoa_r+0xe0c>
    3a80:	880b883a 	mov	r5,r17
    3a84:	a00d883a 	mov	r6,r20
    3a88:	e009883a 	mov	r4,fp
    3a8c:	0006b7c0 	call	6b7c <__lshift>
    3a90:	1023883a 	mov	r17,r2
    3a94:	9801241e 	bne	r19,zero,3f28 <_dtoa_r+0x12a0>
    3a98:	8829883a 	mov	r20,r17
    3a9c:	d9000617 	ldw	r4,24(sp)
    3aa0:	dcc00717 	ldw	r19,28(sp)
    3aa4:	9480004c 	andi	r18,r18,1
    3aa8:	20bfffc4 	addi	r2,r4,-1
    3aac:	9885883a 	add	r2,r19,r2
    3ab0:	d8800415 	stw	r2,16(sp)
    3ab4:	dc800615 	stw	r18,24(sp)
    3ab8:	a80b883a 	mov	r5,r21
    3abc:	8009883a 	mov	r4,r16
    3ac0:	0002a600 	call	2a60 <quorem>
    3ac4:	880b883a 	mov	r5,r17
    3ac8:	8009883a 	mov	r4,r16
    3acc:	102f883a 	mov	r23,r2
    3ad0:	0006cc40 	call	6cc4 <__mcmp>
    3ad4:	a80b883a 	mov	r5,r21
    3ad8:	a00d883a 	mov	r6,r20
    3adc:	e009883a 	mov	r4,fp
    3ae0:	102d883a 	mov	r22,r2
    3ae4:	0006d240 	call	6d24 <__mdiff>
    3ae8:	1007883a 	mov	r3,r2
    3aec:	10800317 	ldw	r2,12(r2)
    3af0:	bc800c04 	addi	r18,r23,48
    3af4:	180b883a 	mov	r5,r3
    3af8:	10004e1e 	bne	r2,zero,3c34 <_dtoa_r+0xfac>
    3afc:	8009883a 	mov	r4,r16
    3b00:	d8c01615 	stw	r3,88(sp)
    3b04:	0006cc40 	call	6cc4 <__mcmp>
    3b08:	d8c01617 	ldw	r3,88(sp)
    3b0c:	e009883a 	mov	r4,fp
    3b10:	d8801615 	stw	r2,88(sp)
    3b14:	180b883a 	mov	r5,r3
    3b18:	00063e80 	call	63e8 <_Bfree>
    3b1c:	d8801617 	ldw	r2,88(sp)
    3b20:	1000041e 	bne	r2,zero,3b34 <_dtoa_r+0xeac>
    3b24:	d9800317 	ldw	r6,12(sp)
    3b28:	3000021e 	bne	r6,zero,3b34 <_dtoa_r+0xeac>
    3b2c:	d8c00617 	ldw	r3,24(sp)
    3b30:	18003726 	beq	r3,zero,3c10 <_dtoa_r+0xf88>
    3b34:	b0002016 	blt	r22,zero,3bb8 <_dtoa_r+0xf30>
    3b38:	b000041e 	bne	r22,zero,3b4c <_dtoa_r+0xec4>
    3b3c:	d9000317 	ldw	r4,12(sp)
    3b40:	2000021e 	bne	r4,zero,3b4c <_dtoa_r+0xec4>
    3b44:	d8c00617 	ldw	r3,24(sp)
    3b48:	18001b26 	beq	r3,zero,3bb8 <_dtoa_r+0xf30>
    3b4c:	00810716 	blt	zero,r2,3f6c <_dtoa_r+0x12e4>
    3b50:	d8c00417 	ldw	r3,16(sp)
    3b54:	9d800044 	addi	r22,r19,1
    3b58:	9c800005 	stb	r18,0(r19)
    3b5c:	b02f883a 	mov	r23,r22
    3b60:	98c10626 	beq	r19,r3,3f7c <_dtoa_r+0x12f4>
    3b64:	800b883a 	mov	r5,r16
    3b68:	000f883a 	mov	r7,zero
    3b6c:	01800284 	movi	r6,10
    3b70:	e009883a 	mov	r4,fp
    3b74:	00064100 	call	6410 <__multadd>
    3b78:	1021883a 	mov	r16,r2
    3b7c:	000f883a 	mov	r7,zero
    3b80:	01800284 	movi	r6,10
    3b84:	880b883a 	mov	r5,r17
    3b88:	e009883a 	mov	r4,fp
    3b8c:	8d002526 	beq	r17,r20,3c24 <_dtoa_r+0xf9c>
    3b90:	00064100 	call	6410 <__multadd>
    3b94:	a00b883a 	mov	r5,r20
    3b98:	000f883a 	mov	r7,zero
    3b9c:	01800284 	movi	r6,10
    3ba0:	e009883a 	mov	r4,fp
    3ba4:	1023883a 	mov	r17,r2
    3ba8:	00064100 	call	6410 <__multadd>
    3bac:	1029883a 	mov	r20,r2
    3bb0:	b027883a 	mov	r19,r22
    3bb4:	003fc006 	br	3ab8 <__alt_data_end+0xfffe3ab8>
    3bb8:	9011883a 	mov	r8,r18
    3bbc:	00800e0e 	bge	zero,r2,3bf8 <_dtoa_r+0xf70>
    3bc0:	800b883a 	mov	r5,r16
    3bc4:	01800044 	movi	r6,1
    3bc8:	e009883a 	mov	r4,fp
    3bcc:	da001715 	stw	r8,92(sp)
    3bd0:	0006b7c0 	call	6b7c <__lshift>
    3bd4:	a80b883a 	mov	r5,r21
    3bd8:	1009883a 	mov	r4,r2
    3bdc:	1021883a 	mov	r16,r2
    3be0:	0006cc40 	call	6cc4 <__mcmp>
    3be4:	da001717 	ldw	r8,92(sp)
    3be8:	0081960e 	bge	zero,r2,4244 <_dtoa_r+0x15bc>
    3bec:	00800e44 	movi	r2,57
    3bf0:	40817026 	beq	r8,r2,41b4 <_dtoa_r+0x152c>
    3bf4:	ba000c44 	addi	r8,r23,49
    3bf8:	8825883a 	mov	r18,r17
    3bfc:	9dc00044 	addi	r23,r19,1
    3c00:	9a000005 	stb	r8,0(r19)
    3c04:	a023883a 	mov	r17,r20
    3c08:	dc000915 	stw	r16,36(sp)
    3c0c:	003f2406 	br	38a0 <__alt_data_end+0xfffe38a0>
    3c10:	00800e44 	movi	r2,57
    3c14:	9011883a 	mov	r8,r18
    3c18:	90816626 	beq	r18,r2,41b4 <_dtoa_r+0x152c>
    3c1c:	05bff516 	blt	zero,r22,3bf4 <__alt_data_end+0xfffe3bf4>
    3c20:	003ff506 	br	3bf8 <__alt_data_end+0xfffe3bf8>
    3c24:	00064100 	call	6410 <__multadd>
    3c28:	1023883a 	mov	r17,r2
    3c2c:	1029883a 	mov	r20,r2
    3c30:	003fdf06 	br	3bb0 <__alt_data_end+0xfffe3bb0>
    3c34:	e009883a 	mov	r4,fp
    3c38:	00063e80 	call	63e8 <_Bfree>
    3c3c:	00800044 	movi	r2,1
    3c40:	003fbc06 	br	3b34 <__alt_data_end+0xfffe3b34>
    3c44:	a80b883a 	mov	r5,r21
    3c48:	8009883a 	mov	r4,r16
    3c4c:	0006cc40 	call	6cc4 <__mcmp>
    3c50:	103edb0e 	bge	r2,zero,37c0 <__alt_data_end+0xfffe37c0>
    3c54:	800b883a 	mov	r5,r16
    3c58:	000f883a 	mov	r7,zero
    3c5c:	01800284 	movi	r6,10
    3c60:	e009883a 	mov	r4,fp
    3c64:	00064100 	call	6410 <__multadd>
    3c68:	1021883a 	mov	r16,r2
    3c6c:	d8800517 	ldw	r2,20(sp)
    3c70:	d8c00b17 	ldw	r3,44(sp)
    3c74:	10bfffc4 	addi	r2,r2,-1
    3c78:	d8800515 	stw	r2,20(sp)
    3c7c:	183f761e 	bne	r3,zero,3a58 <__alt_data_end+0xfffe3a58>
    3c80:	d9000c17 	ldw	r4,48(sp)
    3c84:	0101730e 	bge	zero,r4,4254 <_dtoa_r+0x15cc>
    3c88:	d9000615 	stw	r4,24(sp)
    3c8c:	003ed006 	br	37d0 <__alt_data_end+0xfffe37d0>
    3c90:	00800084 	movi	r2,2
    3c94:	3081861e 	bne	r6,r2,42b0 <_dtoa_r+0x1628>
    3c98:	d8000b15 	stw	zero,44(sp)
    3c9c:	003f3c06 	br	3990 <__alt_data_end+0xfffe3990>
    3ca0:	dc000917 	ldw	r16,36(sp)
    3ca4:	003e9206 	br	36f0 <__alt_data_end+0xfffe36f0>
    3ca8:	d9c00317 	ldw	r7,12(sp)
    3cac:	00800084 	movi	r2,2
    3cb0:	11fec50e 	bge	r2,r7,37c8 <__alt_data_end+0xfffe37c8>
    3cb4:	d9000617 	ldw	r4,24(sp)
    3cb8:	20013c1e 	bne	r4,zero,41ac <_dtoa_r+0x1524>
    3cbc:	a80b883a 	mov	r5,r21
    3cc0:	000f883a 	mov	r7,zero
    3cc4:	01800144 	movi	r6,5
    3cc8:	e009883a 	mov	r4,fp
    3ccc:	00064100 	call	6410 <__multadd>
    3cd0:	100b883a 	mov	r5,r2
    3cd4:	8009883a 	mov	r4,r16
    3cd8:	102b883a 	mov	r21,r2
    3cdc:	0006cc40 	call	6cc4 <__mcmp>
    3ce0:	dc000915 	stw	r16,36(sp)
    3ce4:	00bf410e 	bge	zero,r2,39ec <__alt_data_end+0xfffe39ec>
    3ce8:	d9c00717 	ldw	r7,28(sp)
    3cec:	00800c44 	movi	r2,49
    3cf0:	38800005 	stb	r2,0(r7)
    3cf4:	d8800517 	ldw	r2,20(sp)
    3cf8:	3dc00044 	addi	r23,r7,1
    3cfc:	10800044 	addi	r2,r2,1
    3d00:	d8800515 	stw	r2,20(sp)
    3d04:	003f3d06 	br	39fc <__alt_data_end+0xfffe39fc>
    3d08:	d9800517 	ldw	r6,20(sp)
    3d0c:	d9c00717 	ldw	r7,28(sp)
    3d10:	00800c44 	movi	r2,49
    3d14:	31800044 	addi	r6,r6,1
    3d18:	d9800515 	stw	r6,20(sp)
    3d1c:	38800005 	stb	r2,0(r7)
    3d20:	003edf06 	br	38a0 <__alt_data_end+0xfffe38a0>
    3d24:	d8000b15 	stw	zero,44(sp)
    3d28:	003c9f06 	br	2fa8 <__alt_data_end+0xfffe2fa8>
    3d2c:	903e7e1e 	bne	r18,zero,3728 <__alt_data_end+0xfffe3728>
    3d30:	00800434 	movhi	r2,16
    3d34:	10bfffc4 	addi	r2,r2,-1
    3d38:	9884703a 	and	r2,r19,r2
    3d3c:	1000ea1e 	bne	r2,zero,40e8 <_dtoa_r+0x1460>
    3d40:	9cdffc2c 	andhi	r19,r19,32752
    3d44:	9800e826 	beq	r19,zero,40e8 <_dtoa_r+0x1460>
    3d48:	d9c00817 	ldw	r7,32(sp)
    3d4c:	b5800044 	addi	r22,r22,1
    3d50:	04c00044 	movi	r19,1
    3d54:	39c00044 	addi	r7,r7,1
    3d58:	d9c00815 	stw	r7,32(sp)
    3d5c:	d8800d17 	ldw	r2,52(sp)
    3d60:	103e721e 	bne	r2,zero,372c <__alt_data_end+0xfffe372c>
    3d64:	00800044 	movi	r2,1
    3d68:	003e7906 	br	3750 <__alt_data_end+0xfffe3750>
    3d6c:	8009883a 	mov	r4,r16
    3d70:	000d0d80 	call	d0d8 <__floatsidf>
    3d74:	d9800f17 	ldw	r6,60(sp)
    3d78:	d9c01017 	ldw	r7,64(sp)
    3d7c:	1009883a 	mov	r4,r2
    3d80:	180b883a 	mov	r5,r3
    3d84:	000bef00 	call	bef0 <__muldf3>
    3d88:	000d883a 	mov	r6,zero
    3d8c:	01d00734 	movhi	r7,16412
    3d90:	1009883a 	mov	r4,r2
    3d94:	180b883a 	mov	r5,r3
    3d98:	000aa1c0 	call	aa1c <__adddf3>
    3d9c:	047f3034 	movhi	r17,64704
    3da0:	1021883a 	mov	r16,r2
    3da4:	1c63883a 	add	r17,r3,r17
    3da8:	d9000f17 	ldw	r4,60(sp)
    3dac:	d9401017 	ldw	r5,64(sp)
    3db0:	000d883a 	mov	r6,zero
    3db4:	01d00534 	movhi	r7,16404
    3db8:	000c75c0 	call	c75c <__subdf3>
    3dbc:	800d883a 	mov	r6,r16
    3dc0:	880f883a 	mov	r7,r17
    3dc4:	1009883a 	mov	r4,r2
    3dc8:	180b883a 	mov	r5,r3
    3dcc:	102b883a 	mov	r21,r2
    3dd0:	1829883a 	mov	r20,r3
    3dd4:	000bd200 	call	bd20 <__gedf2>
    3dd8:	00806c16 	blt	zero,r2,3f8c <_dtoa_r+0x1304>
    3ddc:	89e0003c 	xorhi	r7,r17,32768
    3de0:	800d883a 	mov	r6,r16
    3de4:	a809883a 	mov	r4,r21
    3de8:	a00b883a 	mov	r5,r20
    3dec:	000bdfc0 	call	bdfc <__ledf2>
    3df0:	103d7e0e 	bge	r2,zero,33ec <__alt_data_end+0xfffe33ec>
    3df4:	002b883a 	mov	r21,zero
    3df8:	0023883a 	mov	r17,zero
    3dfc:	003efb06 	br	39ec <__alt_data_end+0xfffe39ec>
    3e00:	d8800717 	ldw	r2,28(sp)
    3e04:	003bd006 	br	2d48 <__alt_data_end+0xfffe2d48>
    3e08:	d9000a17 	ldw	r4,40(sp)
    3e0c:	d9800d17 	ldw	r6,52(sp)
    3e10:	dd400a15 	stw	r21,40(sp)
    3e14:	a905c83a 	sub	r2,r21,r4
    3e18:	308d883a 	add	r6,r6,r2
    3e1c:	d9800d15 	stw	r6,52(sp)
    3e20:	002b883a 	mov	r21,zero
    3e24:	003e0606 	br	3640 <__alt_data_end+0xfffe3640>
    3e28:	9023883a 	mov	r17,r18
    3e2c:	9829883a 	mov	r20,r19
    3e30:	04000084 	movi	r16,2
    3e34:	003c9206 	br	3080 <__alt_data_end+0xfffe3080>
    3e38:	04000044 	movi	r16,1
    3e3c:	dc000c15 	stw	r16,48(sp)
    3e40:	dc000615 	stw	r16,24(sp)
    3e44:	dc002215 	stw	r16,136(sp)
    3e48:	e0001115 	stw	zero,68(fp)
    3e4c:	000b883a 	mov	r5,zero
    3e50:	003c6906 	br	2ff8 <__alt_data_end+0xfffe2ff8>
    3e54:	3021883a 	mov	r16,r6
    3e58:	003ffb06 	br	3e48 <__alt_data_end+0xfffe3e48>
    3e5c:	1000021e 	bne	r2,zero,3e68 <_dtoa_r+0x11e0>
    3e60:	4200004c 	andi	r8,r8,1
    3e64:	403e7d1e 	bne	r8,zero,385c <__alt_data_end+0xfffe385c>
    3e68:	01000c04 	movi	r4,48
    3e6c:	00000106 	br	3e74 <_dtoa_r+0x11ec>
    3e70:	102f883a 	mov	r23,r2
    3e74:	b8bfffc4 	addi	r2,r23,-1
    3e78:	10c00007 	ldb	r3,0(r2)
    3e7c:	193ffc26 	beq	r3,r4,3e70 <__alt_data_end+0xfffe3e70>
    3e80:	003e8706 	br	38a0 <__alt_data_end+0xfffe38a0>
    3e84:	d8800517 	ldw	r2,20(sp)
    3e88:	00a3c83a 	sub	r17,zero,r2
    3e8c:	8800a426 	beq	r17,zero,4120 <_dtoa_r+0x1498>
    3e90:	888003cc 	andi	r2,r17,15
    3e94:	100490fa 	slli	r2,r2,3
    3e98:	00c00074 	movhi	r3,1
    3e9c:	18fe7104 	addi	r3,r3,-1596
    3ea0:	1885883a 	add	r2,r3,r2
    3ea4:	11800017 	ldw	r6,0(r2)
    3ea8:	11c00117 	ldw	r7,4(r2)
    3eac:	9009883a 	mov	r4,r18
    3eb0:	980b883a 	mov	r5,r19
    3eb4:	8823d13a 	srai	r17,r17,4
    3eb8:	000bef00 	call	bef0 <__muldf3>
    3ebc:	d8800f15 	stw	r2,60(sp)
    3ec0:	d8c01015 	stw	r3,64(sp)
    3ec4:	8800e826 	beq	r17,zero,4268 <_dtoa_r+0x15e0>
    3ec8:	05000074 	movhi	r20,1
    3ecc:	a53e6704 	addi	r20,r20,-1636
    3ed0:	04000084 	movi	r16,2
    3ed4:	8980004c 	andi	r6,r17,1
    3ed8:	1009883a 	mov	r4,r2
    3edc:	8823d07a 	srai	r17,r17,1
    3ee0:	180b883a 	mov	r5,r3
    3ee4:	30000426 	beq	r6,zero,3ef8 <_dtoa_r+0x1270>
    3ee8:	a1800017 	ldw	r6,0(r20)
    3eec:	a1c00117 	ldw	r7,4(r20)
    3ef0:	84000044 	addi	r16,r16,1
    3ef4:	000bef00 	call	bef0 <__muldf3>
    3ef8:	a5000204 	addi	r20,r20,8
    3efc:	883ff51e 	bne	r17,zero,3ed4 <__alt_data_end+0xfffe3ed4>
    3f00:	d8800f15 	stw	r2,60(sp)
    3f04:	d8c01015 	stw	r3,64(sp)
    3f08:	003c7606 	br	30e4 <__alt_data_end+0xfffe30e4>
    3f0c:	00c00c04 	movi	r3,48
    3f10:	10c00005 	stb	r3,0(r2)
    3f14:	d8c00517 	ldw	r3,20(sp)
    3f18:	bd3fffc3 	ldbu	r20,-1(r23)
    3f1c:	18c00044 	addi	r3,r3,1
    3f20:	d8c00515 	stw	r3,20(sp)
    3f24:	003db906 	br	360c <__alt_data_end+0xfffe360c>
    3f28:	89400117 	ldw	r5,4(r17)
    3f2c:	e009883a 	mov	r4,fp
    3f30:	00063400 	call	6340 <_Balloc>
    3f34:	89800417 	ldw	r6,16(r17)
    3f38:	89400304 	addi	r5,r17,12
    3f3c:	11000304 	addi	r4,r2,12
    3f40:	31800084 	addi	r6,r6,2
    3f44:	318d883a 	add	r6,r6,r6
    3f48:	318d883a 	add	r6,r6,r6
    3f4c:	1027883a 	mov	r19,r2
    3f50:	0005f740 	call	5f74 <memcpy>
    3f54:	01800044 	movi	r6,1
    3f58:	980b883a 	mov	r5,r19
    3f5c:	e009883a 	mov	r4,fp
    3f60:	0006b7c0 	call	6b7c <__lshift>
    3f64:	1029883a 	mov	r20,r2
    3f68:	003ecc06 	br	3a9c <__alt_data_end+0xfffe3a9c>
    3f6c:	00800e44 	movi	r2,57
    3f70:	90809026 	beq	r18,r2,41b4 <_dtoa_r+0x152c>
    3f74:	92000044 	addi	r8,r18,1
    3f78:	003f1f06 	br	3bf8 <__alt_data_end+0xfffe3bf8>
    3f7c:	9011883a 	mov	r8,r18
    3f80:	8825883a 	mov	r18,r17
    3f84:	a023883a 	mov	r17,r20
    3f88:	003e2906 	br	3830 <__alt_data_end+0xfffe3830>
    3f8c:	002b883a 	mov	r21,zero
    3f90:	0023883a 	mov	r17,zero
    3f94:	003f5406 	br	3ce8 <__alt_data_end+0xfffe3ce8>
    3f98:	61bfffc4 	addi	r6,r12,-1
    3f9c:	300490fa 	slli	r2,r6,3
    3fa0:	00c00074 	movhi	r3,1
    3fa4:	18fe7104 	addi	r3,r3,-1596
    3fa8:	1885883a 	add	r2,r3,r2
    3fac:	11000017 	ldw	r4,0(r2)
    3fb0:	11400117 	ldw	r5,4(r2)
    3fb4:	d8800717 	ldw	r2,28(sp)
    3fb8:	880f883a 	mov	r7,r17
    3fbc:	d9801215 	stw	r6,72(sp)
    3fc0:	800d883a 	mov	r6,r16
    3fc4:	db001615 	stw	r12,88(sp)
    3fc8:	15c00044 	addi	r23,r2,1
    3fcc:	000bef00 	call	bef0 <__muldf3>
    3fd0:	d9401017 	ldw	r5,64(sp)
    3fd4:	d9000f17 	ldw	r4,60(sp)
    3fd8:	d8c01515 	stw	r3,84(sp)
    3fdc:	d8801415 	stw	r2,80(sp)
    3fe0:	000d0580 	call	d058 <__fixdfsi>
    3fe4:	1009883a 	mov	r4,r2
    3fe8:	1021883a 	mov	r16,r2
    3fec:	000d0d80 	call	d0d8 <__floatsidf>
    3ff0:	d9000f17 	ldw	r4,60(sp)
    3ff4:	d9401017 	ldw	r5,64(sp)
    3ff8:	100d883a 	mov	r6,r2
    3ffc:	180f883a 	mov	r7,r3
    4000:	000c75c0 	call	c75c <__subdf3>
    4004:	1829883a 	mov	r20,r3
    4008:	d8c00717 	ldw	r3,28(sp)
    400c:	84000c04 	addi	r16,r16,48
    4010:	1023883a 	mov	r17,r2
    4014:	1c000005 	stb	r16,0(r3)
    4018:	db001617 	ldw	r12,88(sp)
    401c:	00800044 	movi	r2,1
    4020:	60802226 	beq	r12,r2,40ac <_dtoa_r+0x1424>
    4024:	d9c00717 	ldw	r7,28(sp)
    4028:	8805883a 	mov	r2,r17
    402c:	b82b883a 	mov	r21,r23
    4030:	3b19883a 	add	r12,r7,r12
    4034:	6023883a 	mov	r17,r12
    4038:	a007883a 	mov	r3,r20
    403c:	dc800f15 	stw	r18,60(sp)
    4040:	000d883a 	mov	r6,zero
    4044:	01d00934 	movhi	r7,16420
    4048:	1009883a 	mov	r4,r2
    404c:	180b883a 	mov	r5,r3
    4050:	000bef00 	call	bef0 <__muldf3>
    4054:	180b883a 	mov	r5,r3
    4058:	1009883a 	mov	r4,r2
    405c:	1829883a 	mov	r20,r3
    4060:	1025883a 	mov	r18,r2
    4064:	000d0580 	call	d058 <__fixdfsi>
    4068:	1009883a 	mov	r4,r2
    406c:	1021883a 	mov	r16,r2
    4070:	000d0d80 	call	d0d8 <__floatsidf>
    4074:	100d883a 	mov	r6,r2
    4078:	180f883a 	mov	r7,r3
    407c:	9009883a 	mov	r4,r18
    4080:	a00b883a 	mov	r5,r20
    4084:	84000c04 	addi	r16,r16,48
    4088:	000c75c0 	call	c75c <__subdf3>
    408c:	ad400044 	addi	r21,r21,1
    4090:	ac3fffc5 	stb	r16,-1(r21)
    4094:	ac7fea1e 	bne	r21,r17,4040 <__alt_data_end+0xfffe4040>
    4098:	1023883a 	mov	r17,r2
    409c:	d8801217 	ldw	r2,72(sp)
    40a0:	dc800f17 	ldw	r18,60(sp)
    40a4:	1829883a 	mov	r20,r3
    40a8:	b8af883a 	add	r23,r23,r2
    40ac:	d9001417 	ldw	r4,80(sp)
    40b0:	d9401517 	ldw	r5,84(sp)
    40b4:	000d883a 	mov	r6,zero
    40b8:	01cff834 	movhi	r7,16352
    40bc:	000aa1c0 	call	aa1c <__adddf3>
    40c0:	880d883a 	mov	r6,r17
    40c4:	a00f883a 	mov	r7,r20
    40c8:	1009883a 	mov	r4,r2
    40cc:	180b883a 	mov	r5,r3
    40d0:	000bdfc0 	call	bdfc <__ledf2>
    40d4:	10003e0e 	bge	r2,zero,41d0 <_dtoa_r+0x1548>
    40d8:	d9001317 	ldw	r4,76(sp)
    40dc:	bd3fffc3 	ldbu	r20,-1(r23)
    40e0:	d9000515 	stw	r4,20(sp)
    40e4:	003d3b06 	br	35d4 <__alt_data_end+0xfffe35d4>
    40e8:	0027883a 	mov	r19,zero
    40ec:	003f1b06 	br	3d5c <__alt_data_end+0xfffe3d5c>
    40f0:	d8800817 	ldw	r2,32(sp)
    40f4:	11e9c83a 	sub	r20,r2,r7
    40f8:	0005883a 	mov	r2,zero
    40fc:	003d5406 	br	3650 <__alt_data_end+0xfffe3650>
    4100:	00800044 	movi	r2,1
    4104:	003dc706 	br	3824 <__alt_data_end+0xfffe3824>
    4108:	d8c00217 	ldw	r3,8(sp)
    410c:	00800d84 	movi	r2,54
    4110:	dd400a17 	ldw	r21,40(sp)
    4114:	10c5c83a 	sub	r2,r2,r3
    4118:	dd000817 	ldw	r20,32(sp)
    411c:	003d4c06 	br	3650 <__alt_data_end+0xfffe3650>
    4120:	dc800f15 	stw	r18,60(sp)
    4124:	dcc01015 	stw	r19,64(sp)
    4128:	04000084 	movi	r16,2
    412c:	003bed06 	br	30e4 <__alt_data_end+0xfffe30e4>
    4130:	d9000617 	ldw	r4,24(sp)
    4134:	203f0d26 	beq	r4,zero,3d6c <__alt_data_end+0xfffe3d6c>
    4138:	d9800c17 	ldw	r6,48(sp)
    413c:	01bcab0e 	bge	zero,r6,33ec <__alt_data_end+0xfffe33ec>
    4140:	d9401017 	ldw	r5,64(sp)
    4144:	d9000f17 	ldw	r4,60(sp)
    4148:	000d883a 	mov	r6,zero
    414c:	01d00934 	movhi	r7,16420
    4150:	000bef00 	call	bef0 <__muldf3>
    4154:	81000044 	addi	r4,r16,1
    4158:	d8800f15 	stw	r2,60(sp)
    415c:	d8c01015 	stw	r3,64(sp)
    4160:	000d0d80 	call	d0d8 <__floatsidf>
    4164:	d9800f17 	ldw	r6,60(sp)
    4168:	d9c01017 	ldw	r7,64(sp)
    416c:	1009883a 	mov	r4,r2
    4170:	180b883a 	mov	r5,r3
    4174:	000bef00 	call	bef0 <__muldf3>
    4178:	01d00734 	movhi	r7,16412
    417c:	000d883a 	mov	r6,zero
    4180:	1009883a 	mov	r4,r2
    4184:	180b883a 	mov	r5,r3
    4188:	000aa1c0 	call	aa1c <__adddf3>
    418c:	d9c00517 	ldw	r7,20(sp)
    4190:	047f3034 	movhi	r17,64704
    4194:	1021883a 	mov	r16,r2
    4198:	39ffffc4 	addi	r7,r7,-1
    419c:	d9c01315 	stw	r7,76(sp)
    41a0:	1c63883a 	add	r17,r3,r17
    41a4:	db000c17 	ldw	r12,48(sp)
    41a8:	003bea06 	br	3154 <__alt_data_end+0xfffe3154>
    41ac:	dc000915 	stw	r16,36(sp)
    41b0:	003e0e06 	br	39ec <__alt_data_end+0xfffe39ec>
    41b4:	01000e44 	movi	r4,57
    41b8:	8825883a 	mov	r18,r17
    41bc:	9dc00044 	addi	r23,r19,1
    41c0:	99000005 	stb	r4,0(r19)
    41c4:	a023883a 	mov	r17,r20
    41c8:	dc000915 	stw	r16,36(sp)
    41cc:	003da406 	br	3860 <__alt_data_end+0xfffe3860>
    41d0:	d9801417 	ldw	r6,80(sp)
    41d4:	d9c01517 	ldw	r7,84(sp)
    41d8:	0009883a 	mov	r4,zero
    41dc:	014ff834 	movhi	r5,16352
    41e0:	000c75c0 	call	c75c <__subdf3>
    41e4:	880d883a 	mov	r6,r17
    41e8:	a00f883a 	mov	r7,r20
    41ec:	1009883a 	mov	r4,r2
    41f0:	180b883a 	mov	r5,r3
    41f4:	000bd200 	call	bd20 <__gedf2>
    41f8:	00bc7c0e 	bge	zero,r2,33ec <__alt_data_end+0xfffe33ec>
    41fc:	01000c04 	movi	r4,48
    4200:	00000106 	br	4208 <_dtoa_r+0x1580>
    4204:	102f883a 	mov	r23,r2
    4208:	b8bfffc4 	addi	r2,r23,-1
    420c:	10c00007 	ldb	r3,0(r2)
    4210:	193ffc26 	beq	r3,r4,4204 <__alt_data_end+0xfffe4204>
    4214:	d9801317 	ldw	r6,76(sp)
    4218:	d9800515 	stw	r6,20(sp)
    421c:	003c4406 	br	3330 <__alt_data_end+0xfffe3330>
    4220:	d9801317 	ldw	r6,76(sp)
    4224:	d9800515 	stw	r6,20(sp)
    4228:	003cea06 	br	35d4 <__alt_data_end+0xfffe35d4>
    422c:	dd800f17 	ldw	r22,60(sp)
    4230:	dcc01017 	ldw	r19,64(sp)
    4234:	dc801217 	ldw	r18,72(sp)
    4238:	003c6c06 	br	33ec <__alt_data_end+0xfffe33ec>
    423c:	903e031e 	bne	r18,zero,3a4c <__alt_data_end+0xfffe3a4c>
    4240:	003ebb06 	br	3d30 <__alt_data_end+0xfffe3d30>
    4244:	103e6c1e 	bne	r2,zero,3bf8 <__alt_data_end+0xfffe3bf8>
    4248:	4080004c 	andi	r2,r8,1
    424c:	103e6a26 	beq	r2,zero,3bf8 <__alt_data_end+0xfffe3bf8>
    4250:	003e6606 	br	3bec <__alt_data_end+0xfffe3bec>
    4254:	d8c00317 	ldw	r3,12(sp)
    4258:	00800084 	movi	r2,2
    425c:	10c02916 	blt	r2,r3,4304 <_dtoa_r+0x167c>
    4260:	d9000c17 	ldw	r4,48(sp)
    4264:	003e8806 	br	3c88 <__alt_data_end+0xfffe3c88>
    4268:	04000084 	movi	r16,2
    426c:	003b9d06 	br	30e4 <__alt_data_end+0xfffe30e4>
    4270:	d9001317 	ldw	r4,76(sp)
    4274:	d9000515 	stw	r4,20(sp)
    4278:	003cd606 	br	35d4 <__alt_data_end+0xfffe35d4>
    427c:	d8801317 	ldw	r2,76(sp)
    4280:	d8800515 	stw	r2,20(sp)
    4284:	003c2a06 	br	3330 <__alt_data_end+0xfffe3330>
    4288:	d9800317 	ldw	r6,12(sp)
    428c:	00800084 	movi	r2,2
    4290:	11801516 	blt	r2,r6,42e8 <_dtoa_r+0x1660>
    4294:	d9c00c17 	ldw	r7,48(sp)
    4298:	d9c00615 	stw	r7,24(sp)
    429c:	003df706 	br	3a7c <__alt_data_end+0xfffe3a7c>
    42a0:	193d3926 	beq	r3,r4,3788 <__alt_data_end+0xfffe3788>
    42a4:	00c00f04 	movi	r3,60
    42a8:	1885c83a 	sub	r2,r3,r2
    42ac:	003ddf06 	br	3a2c <__alt_data_end+0xfffe3a2c>
    42b0:	e009883a 	mov	r4,fp
    42b4:	e0001115 	stw	zero,68(fp)
    42b8:	000b883a 	mov	r5,zero
    42bc:	00063400 	call	6340 <_Balloc>
    42c0:	d8800715 	stw	r2,28(sp)
    42c4:	d8c00717 	ldw	r3,28(sp)
    42c8:	00bfffc4 	movi	r2,-1
    42cc:	01000044 	movi	r4,1
    42d0:	d8800c15 	stw	r2,48(sp)
    42d4:	e0c01015 	stw	r3,64(fp)
    42d8:	d9000b15 	stw	r4,44(sp)
    42dc:	d8800615 	stw	r2,24(sp)
    42e0:	d8002215 	stw	zero,136(sp)
    42e4:	003c4106 	br	33ec <__alt_data_end+0xfffe33ec>
    42e8:	d8c00c17 	ldw	r3,48(sp)
    42ec:	d8c00615 	stw	r3,24(sp)
    42f0:	003e7006 	br	3cb4 <__alt_data_end+0xfffe3cb4>
    42f4:	04400044 	movi	r17,1
    42f8:	003b2006 	br	2f7c <__alt_data_end+0xfffe2f7c>
    42fc:	000b883a 	mov	r5,zero
    4300:	003b3d06 	br	2ff8 <__alt_data_end+0xfffe2ff8>
    4304:	d8800c17 	ldw	r2,48(sp)
    4308:	d8800615 	stw	r2,24(sp)
    430c:	003e6906 	br	3cb4 <__alt_data_end+0xfffe3cb4>

00004310 <__sflush_r>:
    4310:	2880030b 	ldhu	r2,12(r5)
    4314:	defffb04 	addi	sp,sp,-20
    4318:	dcc00315 	stw	r19,12(sp)
    431c:	dc400115 	stw	r17,4(sp)
    4320:	dfc00415 	stw	ra,16(sp)
    4324:	dc800215 	stw	r18,8(sp)
    4328:	dc000015 	stw	r16,0(sp)
    432c:	10c0020c 	andi	r3,r2,8
    4330:	2823883a 	mov	r17,r5
    4334:	2027883a 	mov	r19,r4
    4338:	1800311e 	bne	r3,zero,4400 <__sflush_r+0xf0>
    433c:	28c00117 	ldw	r3,4(r5)
    4340:	10820014 	ori	r2,r2,2048
    4344:	2880030d 	sth	r2,12(r5)
    4348:	00c04b0e 	bge	zero,r3,4478 <__sflush_r+0x168>
    434c:	8a000a17 	ldw	r8,40(r17)
    4350:	40002326 	beq	r8,zero,43e0 <__sflush_r+0xd0>
    4354:	9c000017 	ldw	r16,0(r19)
    4358:	10c4000c 	andi	r3,r2,4096
    435c:	98000015 	stw	zero,0(r19)
    4360:	18004826 	beq	r3,zero,4484 <__sflush_r+0x174>
    4364:	89801417 	ldw	r6,80(r17)
    4368:	10c0010c 	andi	r3,r2,4
    436c:	18000626 	beq	r3,zero,4388 <__sflush_r+0x78>
    4370:	88c00117 	ldw	r3,4(r17)
    4374:	88800c17 	ldw	r2,48(r17)
    4378:	30cdc83a 	sub	r6,r6,r3
    437c:	10000226 	beq	r2,zero,4388 <__sflush_r+0x78>
    4380:	88800f17 	ldw	r2,60(r17)
    4384:	308dc83a 	sub	r6,r6,r2
    4388:	89400717 	ldw	r5,28(r17)
    438c:	000f883a 	mov	r7,zero
    4390:	9809883a 	mov	r4,r19
    4394:	403ee83a 	callr	r8
    4398:	00ffffc4 	movi	r3,-1
    439c:	10c04426 	beq	r2,r3,44b0 <__sflush_r+0x1a0>
    43a0:	88c0030b 	ldhu	r3,12(r17)
    43a4:	89000417 	ldw	r4,16(r17)
    43a8:	88000115 	stw	zero,4(r17)
    43ac:	197dffcc 	andi	r5,r3,63487
    43b0:	8940030d 	sth	r5,12(r17)
    43b4:	89000015 	stw	r4,0(r17)
    43b8:	18c4000c 	andi	r3,r3,4096
    43bc:	18002c1e 	bne	r3,zero,4470 <__sflush_r+0x160>
    43c0:	89400c17 	ldw	r5,48(r17)
    43c4:	9c000015 	stw	r16,0(r19)
    43c8:	28000526 	beq	r5,zero,43e0 <__sflush_r+0xd0>
    43cc:	88801004 	addi	r2,r17,64
    43d0:	28800226 	beq	r5,r2,43dc <__sflush_r+0xcc>
    43d4:	9809883a 	mov	r4,r19
    43d8:	0004a8c0 	call	4a8c <_free_r>
    43dc:	88000c15 	stw	zero,48(r17)
    43e0:	0005883a 	mov	r2,zero
    43e4:	dfc00417 	ldw	ra,16(sp)
    43e8:	dcc00317 	ldw	r19,12(sp)
    43ec:	dc800217 	ldw	r18,8(sp)
    43f0:	dc400117 	ldw	r17,4(sp)
    43f4:	dc000017 	ldw	r16,0(sp)
    43f8:	dec00504 	addi	sp,sp,20
    43fc:	f800283a 	ret
    4400:	2c800417 	ldw	r18,16(r5)
    4404:	903ff626 	beq	r18,zero,43e0 <__alt_data_end+0xfffe43e0>
    4408:	2c000017 	ldw	r16,0(r5)
    440c:	108000cc 	andi	r2,r2,3
    4410:	2c800015 	stw	r18,0(r5)
    4414:	84a1c83a 	sub	r16,r16,r18
    4418:	1000131e 	bne	r2,zero,4468 <__sflush_r+0x158>
    441c:	28800517 	ldw	r2,20(r5)
    4420:	88800215 	stw	r2,8(r17)
    4424:	04000316 	blt	zero,r16,4434 <__sflush_r+0x124>
    4428:	003fed06 	br	43e0 <__alt_data_end+0xfffe43e0>
    442c:	90a5883a 	add	r18,r18,r2
    4430:	043feb0e 	bge	zero,r16,43e0 <__alt_data_end+0xfffe43e0>
    4434:	88800917 	ldw	r2,36(r17)
    4438:	89400717 	ldw	r5,28(r17)
    443c:	800f883a 	mov	r7,r16
    4440:	900d883a 	mov	r6,r18
    4444:	9809883a 	mov	r4,r19
    4448:	103ee83a 	callr	r2
    444c:	80a1c83a 	sub	r16,r16,r2
    4450:	00bff616 	blt	zero,r2,442c <__alt_data_end+0xfffe442c>
    4454:	88c0030b 	ldhu	r3,12(r17)
    4458:	00bfffc4 	movi	r2,-1
    445c:	18c01014 	ori	r3,r3,64
    4460:	88c0030d 	sth	r3,12(r17)
    4464:	003fdf06 	br	43e4 <__alt_data_end+0xfffe43e4>
    4468:	0005883a 	mov	r2,zero
    446c:	003fec06 	br	4420 <__alt_data_end+0xfffe4420>
    4470:	88801415 	stw	r2,80(r17)
    4474:	003fd206 	br	43c0 <__alt_data_end+0xfffe43c0>
    4478:	28c00f17 	ldw	r3,60(r5)
    447c:	00ffb316 	blt	zero,r3,434c <__alt_data_end+0xfffe434c>
    4480:	003fd706 	br	43e0 <__alt_data_end+0xfffe43e0>
    4484:	89400717 	ldw	r5,28(r17)
    4488:	000d883a 	mov	r6,zero
    448c:	01c00044 	movi	r7,1
    4490:	9809883a 	mov	r4,r19
    4494:	403ee83a 	callr	r8
    4498:	100d883a 	mov	r6,r2
    449c:	00bfffc4 	movi	r2,-1
    44a0:	30801426 	beq	r6,r2,44f4 <__sflush_r+0x1e4>
    44a4:	8880030b 	ldhu	r2,12(r17)
    44a8:	8a000a17 	ldw	r8,40(r17)
    44ac:	003fae06 	br	4368 <__alt_data_end+0xfffe4368>
    44b0:	98c00017 	ldw	r3,0(r19)
    44b4:	183fba26 	beq	r3,zero,43a0 <__alt_data_end+0xfffe43a0>
    44b8:	01000744 	movi	r4,29
    44bc:	19000626 	beq	r3,r4,44d8 <__sflush_r+0x1c8>
    44c0:	01000584 	movi	r4,22
    44c4:	19000426 	beq	r3,r4,44d8 <__sflush_r+0x1c8>
    44c8:	88c0030b 	ldhu	r3,12(r17)
    44cc:	18c01014 	ori	r3,r3,64
    44d0:	88c0030d 	sth	r3,12(r17)
    44d4:	003fc306 	br	43e4 <__alt_data_end+0xfffe43e4>
    44d8:	8880030b 	ldhu	r2,12(r17)
    44dc:	88c00417 	ldw	r3,16(r17)
    44e0:	88000115 	stw	zero,4(r17)
    44e4:	10bdffcc 	andi	r2,r2,63487
    44e8:	8880030d 	sth	r2,12(r17)
    44ec:	88c00015 	stw	r3,0(r17)
    44f0:	003fb306 	br	43c0 <__alt_data_end+0xfffe43c0>
    44f4:	98800017 	ldw	r2,0(r19)
    44f8:	103fea26 	beq	r2,zero,44a4 <__alt_data_end+0xfffe44a4>
    44fc:	00c00744 	movi	r3,29
    4500:	10c00226 	beq	r2,r3,450c <__sflush_r+0x1fc>
    4504:	00c00584 	movi	r3,22
    4508:	10c0031e 	bne	r2,r3,4518 <__sflush_r+0x208>
    450c:	9c000015 	stw	r16,0(r19)
    4510:	0005883a 	mov	r2,zero
    4514:	003fb306 	br	43e4 <__alt_data_end+0xfffe43e4>
    4518:	88c0030b 	ldhu	r3,12(r17)
    451c:	3005883a 	mov	r2,r6
    4520:	18c01014 	ori	r3,r3,64
    4524:	88c0030d 	sth	r3,12(r17)
    4528:	003fae06 	br	43e4 <__alt_data_end+0xfffe43e4>

0000452c <_fflush_r>:
    452c:	defffd04 	addi	sp,sp,-12
    4530:	dc000115 	stw	r16,4(sp)
    4534:	dfc00215 	stw	ra,8(sp)
    4538:	2021883a 	mov	r16,r4
    453c:	20000226 	beq	r4,zero,4548 <_fflush_r+0x1c>
    4540:	20800e17 	ldw	r2,56(r4)
    4544:	10000c26 	beq	r2,zero,4578 <_fflush_r+0x4c>
    4548:	2880030f 	ldh	r2,12(r5)
    454c:	1000051e 	bne	r2,zero,4564 <_fflush_r+0x38>
    4550:	0005883a 	mov	r2,zero
    4554:	dfc00217 	ldw	ra,8(sp)
    4558:	dc000117 	ldw	r16,4(sp)
    455c:	dec00304 	addi	sp,sp,12
    4560:	f800283a 	ret
    4564:	8009883a 	mov	r4,r16
    4568:	dfc00217 	ldw	ra,8(sp)
    456c:	dc000117 	ldw	r16,4(sp)
    4570:	dec00304 	addi	sp,sp,12
    4574:	00043101 	jmpi	4310 <__sflush_r>
    4578:	d9400015 	stw	r5,0(sp)
    457c:	00049180 	call	4918 <__sinit>
    4580:	d9400017 	ldw	r5,0(sp)
    4584:	003ff006 	br	4548 <__alt_data_end+0xfffe4548>

00004588 <fflush>:
    4588:	20000526 	beq	r4,zero,45a0 <fflush+0x18>
    458c:	00800074 	movhi	r2,1
    4590:	1085a404 	addi	r2,r2,5776
    4594:	200b883a 	mov	r5,r4
    4598:	11000017 	ldw	r4,0(r2)
    459c:	000452c1 	jmpi	452c <_fflush_r>
    45a0:	00800074 	movhi	r2,1
    45a4:	1085a304 	addi	r2,r2,5772
    45a8:	11000017 	ldw	r4,0(r2)
    45ac:	01400034 	movhi	r5,0
    45b0:	29514b04 	addi	r5,r5,17708
    45b4:	00053281 	jmpi	5328 <_fwalk_reent>

000045b8 <__fp_unlock>:
    45b8:	0005883a 	mov	r2,zero
    45bc:	f800283a 	ret

000045c0 <_cleanup_r>:
    45c0:	01400074 	movhi	r5,1
    45c4:	29653104 	addi	r5,r5,-27452
    45c8:	00053281 	jmpi	5328 <_fwalk_reent>

000045cc <__sinit.part.1>:
    45cc:	defff704 	addi	sp,sp,-36
    45d0:	00c00034 	movhi	r3,0
    45d4:	dfc00815 	stw	ra,32(sp)
    45d8:	ddc00715 	stw	r23,28(sp)
    45dc:	dd800615 	stw	r22,24(sp)
    45e0:	dd400515 	stw	r21,20(sp)
    45e4:	dd000415 	stw	r20,16(sp)
    45e8:	dcc00315 	stw	r19,12(sp)
    45ec:	dc800215 	stw	r18,8(sp)
    45f0:	dc400115 	stw	r17,4(sp)
    45f4:	dc000015 	stw	r16,0(sp)
    45f8:	18d17004 	addi	r3,r3,17856
    45fc:	24000117 	ldw	r16,4(r4)
    4600:	20c00f15 	stw	r3,60(r4)
    4604:	2080bb04 	addi	r2,r4,748
    4608:	00c000c4 	movi	r3,3
    460c:	20c0b915 	stw	r3,740(r4)
    4610:	2080ba15 	stw	r2,744(r4)
    4614:	2000b815 	stw	zero,736(r4)
    4618:	05c00204 	movi	r23,8
    461c:	00800104 	movi	r2,4
    4620:	2025883a 	mov	r18,r4
    4624:	b80d883a 	mov	r6,r23
    4628:	81001704 	addi	r4,r16,92
    462c:	000b883a 	mov	r5,zero
    4630:	80000015 	stw	zero,0(r16)
    4634:	80000115 	stw	zero,4(r16)
    4638:	80000215 	stw	zero,8(r16)
    463c:	8080030d 	sth	r2,12(r16)
    4640:	80001915 	stw	zero,100(r16)
    4644:	8000038d 	sth	zero,14(r16)
    4648:	80000415 	stw	zero,16(r16)
    464c:	80000515 	stw	zero,20(r16)
    4650:	80000615 	stw	zero,24(r16)
    4654:	00062180 	call	6218 <memset>
    4658:	05800034 	movhi	r22,0
    465c:	94400217 	ldw	r17,8(r18)
    4660:	05400034 	movhi	r21,0
    4664:	05000034 	movhi	r20,0
    4668:	04c00034 	movhi	r19,0
    466c:	b59e8904 	addi	r22,r22,31268
    4670:	ad5ea004 	addi	r21,r21,31360
    4674:	a51ebf04 	addi	r20,r20,31484
    4678:	9cded604 	addi	r19,r19,31576
    467c:	85800815 	stw	r22,32(r16)
    4680:	85400915 	stw	r21,36(r16)
    4684:	85000a15 	stw	r20,40(r16)
    4688:	84c00b15 	stw	r19,44(r16)
    468c:	84000715 	stw	r16,28(r16)
    4690:	00800284 	movi	r2,10
    4694:	8880030d 	sth	r2,12(r17)
    4698:	00800044 	movi	r2,1
    469c:	b80d883a 	mov	r6,r23
    46a0:	89001704 	addi	r4,r17,92
    46a4:	000b883a 	mov	r5,zero
    46a8:	88000015 	stw	zero,0(r17)
    46ac:	88000115 	stw	zero,4(r17)
    46b0:	88000215 	stw	zero,8(r17)
    46b4:	88001915 	stw	zero,100(r17)
    46b8:	8880038d 	sth	r2,14(r17)
    46bc:	88000415 	stw	zero,16(r17)
    46c0:	88000515 	stw	zero,20(r17)
    46c4:	88000615 	stw	zero,24(r17)
    46c8:	00062180 	call	6218 <memset>
    46cc:	94000317 	ldw	r16,12(r18)
    46d0:	00800484 	movi	r2,18
    46d4:	8c400715 	stw	r17,28(r17)
    46d8:	8d800815 	stw	r22,32(r17)
    46dc:	8d400915 	stw	r21,36(r17)
    46e0:	8d000a15 	stw	r20,40(r17)
    46e4:	8cc00b15 	stw	r19,44(r17)
    46e8:	8080030d 	sth	r2,12(r16)
    46ec:	00800084 	movi	r2,2
    46f0:	80000015 	stw	zero,0(r16)
    46f4:	80000115 	stw	zero,4(r16)
    46f8:	80000215 	stw	zero,8(r16)
    46fc:	80001915 	stw	zero,100(r16)
    4700:	8080038d 	sth	r2,14(r16)
    4704:	80000415 	stw	zero,16(r16)
    4708:	80000515 	stw	zero,20(r16)
    470c:	80000615 	stw	zero,24(r16)
    4710:	b80d883a 	mov	r6,r23
    4714:	000b883a 	mov	r5,zero
    4718:	81001704 	addi	r4,r16,92
    471c:	00062180 	call	6218 <memset>
    4720:	00800044 	movi	r2,1
    4724:	84000715 	stw	r16,28(r16)
    4728:	85800815 	stw	r22,32(r16)
    472c:	85400915 	stw	r21,36(r16)
    4730:	85000a15 	stw	r20,40(r16)
    4734:	84c00b15 	stw	r19,44(r16)
    4738:	90800e15 	stw	r2,56(r18)
    473c:	dfc00817 	ldw	ra,32(sp)
    4740:	ddc00717 	ldw	r23,28(sp)
    4744:	dd800617 	ldw	r22,24(sp)
    4748:	dd400517 	ldw	r21,20(sp)
    474c:	dd000417 	ldw	r20,16(sp)
    4750:	dcc00317 	ldw	r19,12(sp)
    4754:	dc800217 	ldw	r18,8(sp)
    4758:	dc400117 	ldw	r17,4(sp)
    475c:	dc000017 	ldw	r16,0(sp)
    4760:	dec00904 	addi	sp,sp,36
    4764:	f800283a 	ret

00004768 <__fp_lock>:
    4768:	0005883a 	mov	r2,zero
    476c:	f800283a 	ret

00004770 <__sfmoreglue>:
    4770:	defffc04 	addi	sp,sp,-16
    4774:	dc800215 	stw	r18,8(sp)
    4778:	2825883a 	mov	r18,r5
    477c:	dc000015 	stw	r16,0(sp)
    4780:	01401a04 	movi	r5,104
    4784:	2021883a 	mov	r16,r4
    4788:	913fffc4 	addi	r4,r18,-1
    478c:	dfc00315 	stw	ra,12(sp)
    4790:	dc400115 	stw	r17,4(sp)
    4794:	000a9f40 	call	a9f4 <__mulsi3>
    4798:	8009883a 	mov	r4,r16
    479c:	11401d04 	addi	r5,r2,116
    47a0:	1023883a 	mov	r17,r2
    47a4:	00056840 	call	5684 <_malloc_r>
    47a8:	1021883a 	mov	r16,r2
    47ac:	10000726 	beq	r2,zero,47cc <__sfmoreglue+0x5c>
    47b0:	11000304 	addi	r4,r2,12
    47b4:	10000015 	stw	zero,0(r2)
    47b8:	14800115 	stw	r18,4(r2)
    47bc:	11000215 	stw	r4,8(r2)
    47c0:	89801a04 	addi	r6,r17,104
    47c4:	000b883a 	mov	r5,zero
    47c8:	00062180 	call	6218 <memset>
    47cc:	8005883a 	mov	r2,r16
    47d0:	dfc00317 	ldw	ra,12(sp)
    47d4:	dc800217 	ldw	r18,8(sp)
    47d8:	dc400117 	ldw	r17,4(sp)
    47dc:	dc000017 	ldw	r16,0(sp)
    47e0:	dec00404 	addi	sp,sp,16
    47e4:	f800283a 	ret

000047e8 <__sfp>:
    47e8:	defffb04 	addi	sp,sp,-20
    47ec:	dc000015 	stw	r16,0(sp)
    47f0:	04000074 	movhi	r16,1
    47f4:	8405a304 	addi	r16,r16,5772
    47f8:	dcc00315 	stw	r19,12(sp)
    47fc:	2027883a 	mov	r19,r4
    4800:	81000017 	ldw	r4,0(r16)
    4804:	dfc00415 	stw	ra,16(sp)
    4808:	dc800215 	stw	r18,8(sp)
    480c:	20800e17 	ldw	r2,56(r4)
    4810:	dc400115 	stw	r17,4(sp)
    4814:	1000021e 	bne	r2,zero,4820 <__sfp+0x38>
    4818:	00045cc0 	call	45cc <__sinit.part.1>
    481c:	81000017 	ldw	r4,0(r16)
    4820:	2480b804 	addi	r18,r4,736
    4824:	047fffc4 	movi	r17,-1
    4828:	91000117 	ldw	r4,4(r18)
    482c:	94000217 	ldw	r16,8(r18)
    4830:	213fffc4 	addi	r4,r4,-1
    4834:	20000a16 	blt	r4,zero,4860 <__sfp+0x78>
    4838:	8080030f 	ldh	r2,12(r16)
    483c:	10000c26 	beq	r2,zero,4870 <__sfp+0x88>
    4840:	80c01d04 	addi	r3,r16,116
    4844:	00000206 	br	4850 <__sfp+0x68>
    4848:	18bfe60f 	ldh	r2,-104(r3)
    484c:	10000826 	beq	r2,zero,4870 <__sfp+0x88>
    4850:	213fffc4 	addi	r4,r4,-1
    4854:	1c3ffd04 	addi	r16,r3,-12
    4858:	18c01a04 	addi	r3,r3,104
    485c:	247ffa1e 	bne	r4,r17,4848 <__alt_data_end+0xfffe4848>
    4860:	90800017 	ldw	r2,0(r18)
    4864:	10001d26 	beq	r2,zero,48dc <__sfp+0xf4>
    4868:	1025883a 	mov	r18,r2
    486c:	003fee06 	br	4828 <__alt_data_end+0xfffe4828>
    4870:	00bfffc4 	movi	r2,-1
    4874:	8080038d 	sth	r2,14(r16)
    4878:	00800044 	movi	r2,1
    487c:	8080030d 	sth	r2,12(r16)
    4880:	80001915 	stw	zero,100(r16)
    4884:	80000015 	stw	zero,0(r16)
    4888:	80000215 	stw	zero,8(r16)
    488c:	80000115 	stw	zero,4(r16)
    4890:	80000415 	stw	zero,16(r16)
    4894:	80000515 	stw	zero,20(r16)
    4898:	80000615 	stw	zero,24(r16)
    489c:	01800204 	movi	r6,8
    48a0:	000b883a 	mov	r5,zero
    48a4:	81001704 	addi	r4,r16,92
    48a8:	00062180 	call	6218 <memset>
    48ac:	8005883a 	mov	r2,r16
    48b0:	80000c15 	stw	zero,48(r16)
    48b4:	80000d15 	stw	zero,52(r16)
    48b8:	80001115 	stw	zero,68(r16)
    48bc:	80001215 	stw	zero,72(r16)
    48c0:	dfc00417 	ldw	ra,16(sp)
    48c4:	dcc00317 	ldw	r19,12(sp)
    48c8:	dc800217 	ldw	r18,8(sp)
    48cc:	dc400117 	ldw	r17,4(sp)
    48d0:	dc000017 	ldw	r16,0(sp)
    48d4:	dec00504 	addi	sp,sp,20
    48d8:	f800283a 	ret
    48dc:	01400104 	movi	r5,4
    48e0:	9809883a 	mov	r4,r19
    48e4:	00047700 	call	4770 <__sfmoreglue>
    48e8:	90800015 	stw	r2,0(r18)
    48ec:	103fde1e 	bne	r2,zero,4868 <__alt_data_end+0xfffe4868>
    48f0:	00800304 	movi	r2,12
    48f4:	98800015 	stw	r2,0(r19)
    48f8:	0005883a 	mov	r2,zero
    48fc:	003ff006 	br	48c0 <__alt_data_end+0xfffe48c0>

00004900 <_cleanup>:
    4900:	00800074 	movhi	r2,1
    4904:	1085a304 	addi	r2,r2,5772
    4908:	11000017 	ldw	r4,0(r2)
    490c:	01400074 	movhi	r5,1
    4910:	29653104 	addi	r5,r5,-27452
    4914:	00053281 	jmpi	5328 <_fwalk_reent>

00004918 <__sinit>:
    4918:	20800e17 	ldw	r2,56(r4)
    491c:	10000126 	beq	r2,zero,4924 <__sinit+0xc>
    4920:	f800283a 	ret
    4924:	00045cc1 	jmpi	45cc <__sinit.part.1>

00004928 <__sfp_lock_acquire>:
    4928:	f800283a 	ret

0000492c <__sfp_lock_release>:
    492c:	f800283a 	ret

00004930 <__sinit_lock_acquire>:
    4930:	f800283a 	ret

00004934 <__sinit_lock_release>:
    4934:	f800283a 	ret

00004938 <__fp_lock_all>:
    4938:	00800074 	movhi	r2,1
    493c:	1085a404 	addi	r2,r2,5776
    4940:	11000017 	ldw	r4,0(r2)
    4944:	01400034 	movhi	r5,0
    4948:	2951da04 	addi	r5,r5,18280
    494c:	00052641 	jmpi	5264 <_fwalk>

00004950 <__fp_unlock_all>:
    4950:	00800074 	movhi	r2,1
    4954:	1085a404 	addi	r2,r2,5776
    4958:	11000017 	ldw	r4,0(r2)
    495c:	01400034 	movhi	r5,0
    4960:	29516e04 	addi	r5,r5,17848
    4964:	00052641 	jmpi	5264 <_fwalk>

00004968 <_malloc_trim_r>:
    4968:	defffb04 	addi	sp,sp,-20
    496c:	dcc00315 	stw	r19,12(sp)
    4970:	04c00074 	movhi	r19,1
    4974:	dc800215 	stw	r18,8(sp)
    4978:	dc400115 	stw	r17,4(sp)
    497c:	dc000015 	stw	r16,0(sp)
    4980:	dfc00415 	stw	ra,16(sp)
    4984:	2821883a 	mov	r16,r5
    4988:	9cc01f04 	addi	r19,r19,124
    498c:	2025883a 	mov	r18,r4
    4990:	000d85c0 	call	d85c <__malloc_lock>
    4994:	98800217 	ldw	r2,8(r19)
    4998:	14400117 	ldw	r17,4(r2)
    499c:	00bfff04 	movi	r2,-4
    49a0:	88a2703a 	and	r17,r17,r2
    49a4:	8c21c83a 	sub	r16,r17,r16
    49a8:	8403fbc4 	addi	r16,r16,4079
    49ac:	8020d33a 	srli	r16,r16,12
    49b0:	0083ffc4 	movi	r2,4095
    49b4:	843fffc4 	addi	r16,r16,-1
    49b8:	8020933a 	slli	r16,r16,12
    49bc:	1400060e 	bge	r2,r16,49d8 <_malloc_trim_r+0x70>
    49c0:	000b883a 	mov	r5,zero
    49c4:	9009883a 	mov	r4,r18
    49c8:	00079d00 	call	79d0 <_sbrk_r>
    49cc:	98c00217 	ldw	r3,8(r19)
    49d0:	1c47883a 	add	r3,r3,r17
    49d4:	10c00a26 	beq	r2,r3,4a00 <_malloc_trim_r+0x98>
    49d8:	9009883a 	mov	r4,r18
    49dc:	000d8800 	call	d880 <__malloc_unlock>
    49e0:	0005883a 	mov	r2,zero
    49e4:	dfc00417 	ldw	ra,16(sp)
    49e8:	dcc00317 	ldw	r19,12(sp)
    49ec:	dc800217 	ldw	r18,8(sp)
    49f0:	dc400117 	ldw	r17,4(sp)
    49f4:	dc000017 	ldw	r16,0(sp)
    49f8:	dec00504 	addi	sp,sp,20
    49fc:	f800283a 	ret
    4a00:	040bc83a 	sub	r5,zero,r16
    4a04:	9009883a 	mov	r4,r18
    4a08:	00079d00 	call	79d0 <_sbrk_r>
    4a0c:	00ffffc4 	movi	r3,-1
    4a10:	10c00d26 	beq	r2,r3,4a48 <_malloc_trim_r+0xe0>
    4a14:	00c00074 	movhi	r3,1
    4a18:	18cc7b04 	addi	r3,r3,12780
    4a1c:	18800017 	ldw	r2,0(r3)
    4a20:	99000217 	ldw	r4,8(r19)
    4a24:	8c23c83a 	sub	r17,r17,r16
    4a28:	8c400054 	ori	r17,r17,1
    4a2c:	1421c83a 	sub	r16,r2,r16
    4a30:	24400115 	stw	r17,4(r4)
    4a34:	9009883a 	mov	r4,r18
    4a38:	1c000015 	stw	r16,0(r3)
    4a3c:	000d8800 	call	d880 <__malloc_unlock>
    4a40:	00800044 	movi	r2,1
    4a44:	003fe706 	br	49e4 <__alt_data_end+0xfffe49e4>
    4a48:	000b883a 	mov	r5,zero
    4a4c:	9009883a 	mov	r4,r18
    4a50:	00079d00 	call	79d0 <_sbrk_r>
    4a54:	99000217 	ldw	r4,8(r19)
    4a58:	014003c4 	movi	r5,15
    4a5c:	1107c83a 	sub	r3,r2,r4
    4a60:	28ffdd0e 	bge	r5,r3,49d8 <__alt_data_end+0xfffe49d8>
    4a64:	01400074 	movhi	r5,1
    4a68:	2945a604 	addi	r5,r5,5784
    4a6c:	29400017 	ldw	r5,0(r5)
    4a70:	18c00054 	ori	r3,r3,1
    4a74:	20c00115 	stw	r3,4(r4)
    4a78:	00c00074 	movhi	r3,1
    4a7c:	1145c83a 	sub	r2,r2,r5
    4a80:	18cc7b04 	addi	r3,r3,12780
    4a84:	18800015 	stw	r2,0(r3)
    4a88:	003fd306 	br	49d8 <__alt_data_end+0xfffe49d8>

00004a8c <_free_r>:
    4a8c:	28004126 	beq	r5,zero,4b94 <_free_r+0x108>
    4a90:	defffd04 	addi	sp,sp,-12
    4a94:	dc400115 	stw	r17,4(sp)
    4a98:	dc000015 	stw	r16,0(sp)
    4a9c:	2023883a 	mov	r17,r4
    4aa0:	2821883a 	mov	r16,r5
    4aa4:	dfc00215 	stw	ra,8(sp)
    4aa8:	000d85c0 	call	d85c <__malloc_lock>
    4aac:	81ffff17 	ldw	r7,-4(r16)
    4ab0:	00bfff84 	movi	r2,-2
    4ab4:	01000074 	movhi	r4,1
    4ab8:	81bffe04 	addi	r6,r16,-8
    4abc:	3884703a 	and	r2,r7,r2
    4ac0:	21001f04 	addi	r4,r4,124
    4ac4:	308b883a 	add	r5,r6,r2
    4ac8:	2a400117 	ldw	r9,4(r5)
    4acc:	22000217 	ldw	r8,8(r4)
    4ad0:	00ffff04 	movi	r3,-4
    4ad4:	48c6703a 	and	r3,r9,r3
    4ad8:	2a005726 	beq	r5,r8,4c38 <_free_r+0x1ac>
    4adc:	28c00115 	stw	r3,4(r5)
    4ae0:	39c0004c 	andi	r7,r7,1
    4ae4:	3800091e 	bne	r7,zero,4b0c <_free_r+0x80>
    4ae8:	823ffe17 	ldw	r8,-8(r16)
    4aec:	22400204 	addi	r9,r4,8
    4af0:	320dc83a 	sub	r6,r6,r8
    4af4:	31c00217 	ldw	r7,8(r6)
    4af8:	1205883a 	add	r2,r2,r8
    4afc:	3a406526 	beq	r7,r9,4c94 <_free_r+0x208>
    4b00:	32000317 	ldw	r8,12(r6)
    4b04:	3a000315 	stw	r8,12(r7)
    4b08:	41c00215 	stw	r7,8(r8)
    4b0c:	28cf883a 	add	r7,r5,r3
    4b10:	39c00117 	ldw	r7,4(r7)
    4b14:	39c0004c 	andi	r7,r7,1
    4b18:	38003a26 	beq	r7,zero,4c04 <_free_r+0x178>
    4b1c:	10c00054 	ori	r3,r2,1
    4b20:	30c00115 	stw	r3,4(r6)
    4b24:	3087883a 	add	r3,r6,r2
    4b28:	18800015 	stw	r2,0(r3)
    4b2c:	00c07fc4 	movi	r3,511
    4b30:	18801936 	bltu	r3,r2,4b98 <_free_r+0x10c>
    4b34:	1004d0fa 	srli	r2,r2,3
    4b38:	01c00044 	movi	r7,1
    4b3c:	21400117 	ldw	r5,4(r4)
    4b40:	10c00044 	addi	r3,r2,1
    4b44:	18c7883a 	add	r3,r3,r3
    4b48:	1005d0ba 	srai	r2,r2,2
    4b4c:	18c7883a 	add	r3,r3,r3
    4b50:	18c7883a 	add	r3,r3,r3
    4b54:	1907883a 	add	r3,r3,r4
    4b58:	3884983a 	sll	r2,r7,r2
    4b5c:	19c00017 	ldw	r7,0(r3)
    4b60:	1a3ffe04 	addi	r8,r3,-8
    4b64:	1144b03a 	or	r2,r2,r5
    4b68:	32000315 	stw	r8,12(r6)
    4b6c:	31c00215 	stw	r7,8(r6)
    4b70:	20800115 	stw	r2,4(r4)
    4b74:	19800015 	stw	r6,0(r3)
    4b78:	39800315 	stw	r6,12(r7)
    4b7c:	8809883a 	mov	r4,r17
    4b80:	dfc00217 	ldw	ra,8(sp)
    4b84:	dc400117 	ldw	r17,4(sp)
    4b88:	dc000017 	ldw	r16,0(sp)
    4b8c:	dec00304 	addi	sp,sp,12
    4b90:	000d8801 	jmpi	d880 <__malloc_unlock>
    4b94:	f800283a 	ret
    4b98:	100ad27a 	srli	r5,r2,9
    4b9c:	00c00104 	movi	r3,4
    4ba0:	19404a36 	bltu	r3,r5,4ccc <_free_r+0x240>
    4ba4:	100ad1ba 	srli	r5,r2,6
    4ba8:	28c00e44 	addi	r3,r5,57
    4bac:	18c7883a 	add	r3,r3,r3
    4bb0:	29400e04 	addi	r5,r5,56
    4bb4:	18c7883a 	add	r3,r3,r3
    4bb8:	18c7883a 	add	r3,r3,r3
    4bbc:	1909883a 	add	r4,r3,r4
    4bc0:	20c00017 	ldw	r3,0(r4)
    4bc4:	01c00074 	movhi	r7,1
    4bc8:	213ffe04 	addi	r4,r4,-8
    4bcc:	39c01f04 	addi	r7,r7,124
    4bd0:	20c04426 	beq	r4,r3,4ce4 <_free_r+0x258>
    4bd4:	01ffff04 	movi	r7,-4
    4bd8:	19400117 	ldw	r5,4(r3)
    4bdc:	29ca703a 	and	r5,r5,r7
    4be0:	1140022e 	bgeu	r2,r5,4bec <_free_r+0x160>
    4be4:	18c00217 	ldw	r3,8(r3)
    4be8:	20fffb1e 	bne	r4,r3,4bd8 <__alt_data_end+0xfffe4bd8>
    4bec:	19000317 	ldw	r4,12(r3)
    4bf0:	31000315 	stw	r4,12(r6)
    4bf4:	30c00215 	stw	r3,8(r6)
    4bf8:	21800215 	stw	r6,8(r4)
    4bfc:	19800315 	stw	r6,12(r3)
    4c00:	003fde06 	br	4b7c <__alt_data_end+0xfffe4b7c>
    4c04:	29c00217 	ldw	r7,8(r5)
    4c08:	10c5883a 	add	r2,r2,r3
    4c0c:	00c00074 	movhi	r3,1
    4c10:	18c02104 	addi	r3,r3,132
    4c14:	38c03b26 	beq	r7,r3,4d04 <_free_r+0x278>
    4c18:	2a000317 	ldw	r8,12(r5)
    4c1c:	11400054 	ori	r5,r2,1
    4c20:	3087883a 	add	r3,r6,r2
    4c24:	3a000315 	stw	r8,12(r7)
    4c28:	41c00215 	stw	r7,8(r8)
    4c2c:	31400115 	stw	r5,4(r6)
    4c30:	18800015 	stw	r2,0(r3)
    4c34:	003fbd06 	br	4b2c <__alt_data_end+0xfffe4b2c>
    4c38:	39c0004c 	andi	r7,r7,1
    4c3c:	10c5883a 	add	r2,r2,r3
    4c40:	3800071e 	bne	r7,zero,4c60 <_free_r+0x1d4>
    4c44:	81fffe17 	ldw	r7,-8(r16)
    4c48:	31cdc83a 	sub	r6,r6,r7
    4c4c:	30c00317 	ldw	r3,12(r6)
    4c50:	31400217 	ldw	r5,8(r6)
    4c54:	11c5883a 	add	r2,r2,r7
    4c58:	28c00315 	stw	r3,12(r5)
    4c5c:	19400215 	stw	r5,8(r3)
    4c60:	10c00054 	ori	r3,r2,1
    4c64:	30c00115 	stw	r3,4(r6)
    4c68:	00c00074 	movhi	r3,1
    4c6c:	18c5a704 	addi	r3,r3,5788
    4c70:	18c00017 	ldw	r3,0(r3)
    4c74:	21800215 	stw	r6,8(r4)
    4c78:	10ffc036 	bltu	r2,r3,4b7c <__alt_data_end+0xfffe4b7c>
    4c7c:	00800074 	movhi	r2,1
    4c80:	108c7304 	addi	r2,r2,12748
    4c84:	11400017 	ldw	r5,0(r2)
    4c88:	8809883a 	mov	r4,r17
    4c8c:	00049680 	call	4968 <_malloc_trim_r>
    4c90:	003fba06 	br	4b7c <__alt_data_end+0xfffe4b7c>
    4c94:	28c9883a 	add	r4,r5,r3
    4c98:	21000117 	ldw	r4,4(r4)
    4c9c:	2100004c 	andi	r4,r4,1
    4ca0:	2000391e 	bne	r4,zero,4d88 <_free_r+0x2fc>
    4ca4:	29c00217 	ldw	r7,8(r5)
    4ca8:	29000317 	ldw	r4,12(r5)
    4cac:	1885883a 	add	r2,r3,r2
    4cb0:	10c00054 	ori	r3,r2,1
    4cb4:	39000315 	stw	r4,12(r7)
    4cb8:	21c00215 	stw	r7,8(r4)
    4cbc:	30c00115 	stw	r3,4(r6)
    4cc0:	308d883a 	add	r6,r6,r2
    4cc4:	30800015 	stw	r2,0(r6)
    4cc8:	003fac06 	br	4b7c <__alt_data_end+0xfffe4b7c>
    4ccc:	00c00504 	movi	r3,20
    4cd0:	19401536 	bltu	r3,r5,4d28 <_free_r+0x29c>
    4cd4:	28c01704 	addi	r3,r5,92
    4cd8:	18c7883a 	add	r3,r3,r3
    4cdc:	294016c4 	addi	r5,r5,91
    4ce0:	003fb406 	br	4bb4 <__alt_data_end+0xfffe4bb4>
    4ce4:	280bd0ba 	srai	r5,r5,2
    4ce8:	00c00044 	movi	r3,1
    4cec:	38800117 	ldw	r2,4(r7)
    4cf0:	194a983a 	sll	r5,r3,r5
    4cf4:	2007883a 	mov	r3,r4
    4cf8:	2884b03a 	or	r2,r5,r2
    4cfc:	38800115 	stw	r2,4(r7)
    4d00:	003fbb06 	br	4bf0 <__alt_data_end+0xfffe4bf0>
    4d04:	21800515 	stw	r6,20(r4)
    4d08:	21800415 	stw	r6,16(r4)
    4d0c:	10c00054 	ori	r3,r2,1
    4d10:	31c00315 	stw	r7,12(r6)
    4d14:	31c00215 	stw	r7,8(r6)
    4d18:	30c00115 	stw	r3,4(r6)
    4d1c:	308d883a 	add	r6,r6,r2
    4d20:	30800015 	stw	r2,0(r6)
    4d24:	003f9506 	br	4b7c <__alt_data_end+0xfffe4b7c>
    4d28:	00c01504 	movi	r3,84
    4d2c:	19400536 	bltu	r3,r5,4d44 <_free_r+0x2b8>
    4d30:	100ad33a 	srli	r5,r2,12
    4d34:	28c01bc4 	addi	r3,r5,111
    4d38:	18c7883a 	add	r3,r3,r3
    4d3c:	29401b84 	addi	r5,r5,110
    4d40:	003f9c06 	br	4bb4 <__alt_data_end+0xfffe4bb4>
    4d44:	00c05504 	movi	r3,340
    4d48:	19400536 	bltu	r3,r5,4d60 <_free_r+0x2d4>
    4d4c:	100ad3fa 	srli	r5,r2,15
    4d50:	28c01e04 	addi	r3,r5,120
    4d54:	18c7883a 	add	r3,r3,r3
    4d58:	29401dc4 	addi	r5,r5,119
    4d5c:	003f9506 	br	4bb4 <__alt_data_end+0xfffe4bb4>
    4d60:	00c15504 	movi	r3,1364
    4d64:	19400536 	bltu	r3,r5,4d7c <_free_r+0x2f0>
    4d68:	100ad4ba 	srli	r5,r2,18
    4d6c:	28c01f44 	addi	r3,r5,125
    4d70:	18c7883a 	add	r3,r3,r3
    4d74:	29401f04 	addi	r5,r5,124
    4d78:	003f8e06 	br	4bb4 <__alt_data_end+0xfffe4bb4>
    4d7c:	00c03f84 	movi	r3,254
    4d80:	01401f84 	movi	r5,126
    4d84:	003f8b06 	br	4bb4 <__alt_data_end+0xfffe4bb4>
    4d88:	10c00054 	ori	r3,r2,1
    4d8c:	30c00115 	stw	r3,4(r6)
    4d90:	308d883a 	add	r6,r6,r2
    4d94:	30800015 	stw	r2,0(r6)
    4d98:	003f7806 	br	4b7c <__alt_data_end+0xfffe4b7c>

00004d9c <__sfvwrite_r>:
    4d9c:	30800217 	ldw	r2,8(r6)
    4da0:	10006726 	beq	r2,zero,4f40 <__sfvwrite_r+0x1a4>
    4da4:	28c0030b 	ldhu	r3,12(r5)
    4da8:	defff404 	addi	sp,sp,-48
    4dac:	dd400715 	stw	r21,28(sp)
    4db0:	dd000615 	stw	r20,24(sp)
    4db4:	dc000215 	stw	r16,8(sp)
    4db8:	dfc00b15 	stw	ra,44(sp)
    4dbc:	df000a15 	stw	fp,40(sp)
    4dc0:	ddc00915 	stw	r23,36(sp)
    4dc4:	dd800815 	stw	r22,32(sp)
    4dc8:	dcc00515 	stw	r19,20(sp)
    4dcc:	dc800415 	stw	r18,16(sp)
    4dd0:	dc400315 	stw	r17,12(sp)
    4dd4:	1880020c 	andi	r2,r3,8
    4dd8:	2821883a 	mov	r16,r5
    4ddc:	202b883a 	mov	r21,r4
    4de0:	3029883a 	mov	r20,r6
    4de4:	10002726 	beq	r2,zero,4e84 <__sfvwrite_r+0xe8>
    4de8:	28800417 	ldw	r2,16(r5)
    4dec:	10002526 	beq	r2,zero,4e84 <__sfvwrite_r+0xe8>
    4df0:	1880008c 	andi	r2,r3,2
    4df4:	a4400017 	ldw	r17,0(r20)
    4df8:	10002a26 	beq	r2,zero,4ea4 <__sfvwrite_r+0x108>
    4dfc:	05a00034 	movhi	r22,32768
    4e00:	0027883a 	mov	r19,zero
    4e04:	0025883a 	mov	r18,zero
    4e08:	b5bf0004 	addi	r22,r22,-1024
    4e0c:	980d883a 	mov	r6,r19
    4e10:	a809883a 	mov	r4,r21
    4e14:	90004626 	beq	r18,zero,4f30 <__sfvwrite_r+0x194>
    4e18:	900f883a 	mov	r7,r18
    4e1c:	b480022e 	bgeu	r22,r18,4e28 <__sfvwrite_r+0x8c>
    4e20:	01e00034 	movhi	r7,32768
    4e24:	39ff0004 	addi	r7,r7,-1024
    4e28:	80800917 	ldw	r2,36(r16)
    4e2c:	81400717 	ldw	r5,28(r16)
    4e30:	103ee83a 	callr	r2
    4e34:	00805a0e 	bge	zero,r2,4fa0 <__sfvwrite_r+0x204>
    4e38:	a0c00217 	ldw	r3,8(r20)
    4e3c:	98a7883a 	add	r19,r19,r2
    4e40:	90a5c83a 	sub	r18,r18,r2
    4e44:	1885c83a 	sub	r2,r3,r2
    4e48:	a0800215 	stw	r2,8(r20)
    4e4c:	103fef1e 	bne	r2,zero,4e0c <__alt_data_end+0xfffe4e0c>
    4e50:	0005883a 	mov	r2,zero
    4e54:	dfc00b17 	ldw	ra,44(sp)
    4e58:	df000a17 	ldw	fp,40(sp)
    4e5c:	ddc00917 	ldw	r23,36(sp)
    4e60:	dd800817 	ldw	r22,32(sp)
    4e64:	dd400717 	ldw	r21,28(sp)
    4e68:	dd000617 	ldw	r20,24(sp)
    4e6c:	dcc00517 	ldw	r19,20(sp)
    4e70:	dc800417 	ldw	r18,16(sp)
    4e74:	dc400317 	ldw	r17,12(sp)
    4e78:	dc000217 	ldw	r16,8(sp)
    4e7c:	dec00c04 	addi	sp,sp,48
    4e80:	f800283a 	ret
    4e84:	800b883a 	mov	r5,r16
    4e88:	a809883a 	mov	r4,r21
    4e8c:	000290c0 	call	290c <__swsetup_r>
    4e90:	1000ee1e 	bne	r2,zero,524c <__sfvwrite_r+0x4b0>
    4e94:	80c0030b 	ldhu	r3,12(r16)
    4e98:	a4400017 	ldw	r17,0(r20)
    4e9c:	1880008c 	andi	r2,r3,2
    4ea0:	103fd61e 	bne	r2,zero,4dfc <__alt_data_end+0xfffe4dfc>
    4ea4:	1880004c 	andi	r2,r3,1
    4ea8:	1000421e 	bne	r2,zero,4fb4 <__sfvwrite_r+0x218>
    4eac:	0039883a 	mov	fp,zero
    4eb0:	0025883a 	mov	r18,zero
    4eb4:	90001a26 	beq	r18,zero,4f20 <__sfvwrite_r+0x184>
    4eb8:	1880800c 	andi	r2,r3,512
    4ebc:	84c00217 	ldw	r19,8(r16)
    4ec0:	10002126 	beq	r2,zero,4f48 <__sfvwrite_r+0x1ac>
    4ec4:	982f883a 	mov	r23,r19
    4ec8:	94c09636 	bltu	r18,r19,5124 <__sfvwrite_r+0x388>
    4ecc:	1881200c 	andi	r2,r3,1152
    4ed0:	1000a11e 	bne	r2,zero,5158 <__sfvwrite_r+0x3bc>
    4ed4:	81000017 	ldw	r4,0(r16)
    4ed8:	b80d883a 	mov	r6,r23
    4edc:	e00b883a 	mov	r5,fp
    4ee0:	00060bc0 	call	60bc <memmove>
    4ee4:	80c00217 	ldw	r3,8(r16)
    4ee8:	81000017 	ldw	r4,0(r16)
    4eec:	9005883a 	mov	r2,r18
    4ef0:	1ce7c83a 	sub	r19,r3,r19
    4ef4:	25cf883a 	add	r7,r4,r23
    4ef8:	84c00215 	stw	r19,8(r16)
    4efc:	81c00015 	stw	r7,0(r16)
    4f00:	a0c00217 	ldw	r3,8(r20)
    4f04:	e0b9883a 	add	fp,fp,r2
    4f08:	90a5c83a 	sub	r18,r18,r2
    4f0c:	18a7c83a 	sub	r19,r3,r2
    4f10:	a4c00215 	stw	r19,8(r20)
    4f14:	983fce26 	beq	r19,zero,4e50 <__alt_data_end+0xfffe4e50>
    4f18:	80c0030b 	ldhu	r3,12(r16)
    4f1c:	903fe61e 	bne	r18,zero,4eb8 <__alt_data_end+0xfffe4eb8>
    4f20:	8f000017 	ldw	fp,0(r17)
    4f24:	8c800117 	ldw	r18,4(r17)
    4f28:	8c400204 	addi	r17,r17,8
    4f2c:	003fe106 	br	4eb4 <__alt_data_end+0xfffe4eb4>
    4f30:	8cc00017 	ldw	r19,0(r17)
    4f34:	8c800117 	ldw	r18,4(r17)
    4f38:	8c400204 	addi	r17,r17,8
    4f3c:	003fb306 	br	4e0c <__alt_data_end+0xfffe4e0c>
    4f40:	0005883a 	mov	r2,zero
    4f44:	f800283a 	ret
    4f48:	81000017 	ldw	r4,0(r16)
    4f4c:	80800417 	ldw	r2,16(r16)
    4f50:	11005a36 	bltu	r2,r4,50bc <__sfvwrite_r+0x320>
    4f54:	85c00517 	ldw	r23,20(r16)
    4f58:	95c05836 	bltu	r18,r23,50bc <__sfvwrite_r+0x320>
    4f5c:	00a00034 	movhi	r2,32768
    4f60:	10bfffc4 	addi	r2,r2,-1
    4f64:	9009883a 	mov	r4,r18
    4f68:	1480012e 	bgeu	r2,r18,4f70 <__sfvwrite_r+0x1d4>
    4f6c:	1009883a 	mov	r4,r2
    4f70:	b80b883a 	mov	r5,r23
    4f74:	000a8400 	call	a840 <__divsi3>
    4f78:	b80b883a 	mov	r5,r23
    4f7c:	1009883a 	mov	r4,r2
    4f80:	000a9f40 	call	a9f4 <__mulsi3>
    4f84:	81400717 	ldw	r5,28(r16)
    4f88:	80c00917 	ldw	r3,36(r16)
    4f8c:	100f883a 	mov	r7,r2
    4f90:	e00d883a 	mov	r6,fp
    4f94:	a809883a 	mov	r4,r21
    4f98:	183ee83a 	callr	r3
    4f9c:	00bfd816 	blt	zero,r2,4f00 <__alt_data_end+0xfffe4f00>
    4fa0:	8080030b 	ldhu	r2,12(r16)
    4fa4:	10801014 	ori	r2,r2,64
    4fa8:	8080030d 	sth	r2,12(r16)
    4fac:	00bfffc4 	movi	r2,-1
    4fb0:	003fa806 	br	4e54 <__alt_data_end+0xfffe4e54>
    4fb4:	0027883a 	mov	r19,zero
    4fb8:	0011883a 	mov	r8,zero
    4fbc:	0039883a 	mov	fp,zero
    4fc0:	0025883a 	mov	r18,zero
    4fc4:	90001f26 	beq	r18,zero,5044 <__sfvwrite_r+0x2a8>
    4fc8:	40005a26 	beq	r8,zero,5134 <__sfvwrite_r+0x398>
    4fcc:	982d883a 	mov	r22,r19
    4fd0:	94c0012e 	bgeu	r18,r19,4fd8 <__sfvwrite_r+0x23c>
    4fd4:	902d883a 	mov	r22,r18
    4fd8:	81000017 	ldw	r4,0(r16)
    4fdc:	80800417 	ldw	r2,16(r16)
    4fe0:	b02f883a 	mov	r23,r22
    4fe4:	81c00517 	ldw	r7,20(r16)
    4fe8:	1100032e 	bgeu	r2,r4,4ff8 <__sfvwrite_r+0x25c>
    4fec:	80c00217 	ldw	r3,8(r16)
    4ff0:	38c7883a 	add	r3,r7,r3
    4ff4:	1d801816 	blt	r3,r22,5058 <__sfvwrite_r+0x2bc>
    4ff8:	b1c03e16 	blt	r22,r7,50f4 <__sfvwrite_r+0x358>
    4ffc:	80800917 	ldw	r2,36(r16)
    5000:	81400717 	ldw	r5,28(r16)
    5004:	e00d883a 	mov	r6,fp
    5008:	da000115 	stw	r8,4(sp)
    500c:	a809883a 	mov	r4,r21
    5010:	103ee83a 	callr	r2
    5014:	102f883a 	mov	r23,r2
    5018:	da000117 	ldw	r8,4(sp)
    501c:	00bfe00e 	bge	zero,r2,4fa0 <__alt_data_end+0xfffe4fa0>
    5020:	9de7c83a 	sub	r19,r19,r23
    5024:	98001f26 	beq	r19,zero,50a4 <__sfvwrite_r+0x308>
    5028:	a0800217 	ldw	r2,8(r20)
    502c:	e5f9883a 	add	fp,fp,r23
    5030:	95e5c83a 	sub	r18,r18,r23
    5034:	15efc83a 	sub	r23,r2,r23
    5038:	a5c00215 	stw	r23,8(r20)
    503c:	b83f8426 	beq	r23,zero,4e50 <__alt_data_end+0xfffe4e50>
    5040:	903fe11e 	bne	r18,zero,4fc8 <__alt_data_end+0xfffe4fc8>
    5044:	8f000017 	ldw	fp,0(r17)
    5048:	8c800117 	ldw	r18,4(r17)
    504c:	0011883a 	mov	r8,zero
    5050:	8c400204 	addi	r17,r17,8
    5054:	003fdb06 	br	4fc4 <__alt_data_end+0xfffe4fc4>
    5058:	180d883a 	mov	r6,r3
    505c:	e00b883a 	mov	r5,fp
    5060:	da000115 	stw	r8,4(sp)
    5064:	d8c00015 	stw	r3,0(sp)
    5068:	00060bc0 	call	60bc <memmove>
    506c:	d8c00017 	ldw	r3,0(sp)
    5070:	80800017 	ldw	r2,0(r16)
    5074:	800b883a 	mov	r5,r16
    5078:	a809883a 	mov	r4,r21
    507c:	10c5883a 	add	r2,r2,r3
    5080:	80800015 	stw	r2,0(r16)
    5084:	d8c00015 	stw	r3,0(sp)
    5088:	000452c0 	call	452c <_fflush_r>
    508c:	d8c00017 	ldw	r3,0(sp)
    5090:	da000117 	ldw	r8,4(sp)
    5094:	103fc21e 	bne	r2,zero,4fa0 <__alt_data_end+0xfffe4fa0>
    5098:	182f883a 	mov	r23,r3
    509c:	9de7c83a 	sub	r19,r19,r23
    50a0:	983fe11e 	bne	r19,zero,5028 <__alt_data_end+0xfffe5028>
    50a4:	800b883a 	mov	r5,r16
    50a8:	a809883a 	mov	r4,r21
    50ac:	000452c0 	call	452c <_fflush_r>
    50b0:	103fbb1e 	bne	r2,zero,4fa0 <__alt_data_end+0xfffe4fa0>
    50b4:	0011883a 	mov	r8,zero
    50b8:	003fdb06 	br	5028 <__alt_data_end+0xfffe5028>
    50bc:	94c0012e 	bgeu	r18,r19,50c4 <__sfvwrite_r+0x328>
    50c0:	9027883a 	mov	r19,r18
    50c4:	980d883a 	mov	r6,r19
    50c8:	e00b883a 	mov	r5,fp
    50cc:	00060bc0 	call	60bc <memmove>
    50d0:	80800217 	ldw	r2,8(r16)
    50d4:	80c00017 	ldw	r3,0(r16)
    50d8:	14c5c83a 	sub	r2,r2,r19
    50dc:	1cc7883a 	add	r3,r3,r19
    50e0:	80800215 	stw	r2,8(r16)
    50e4:	80c00015 	stw	r3,0(r16)
    50e8:	10004326 	beq	r2,zero,51f8 <__sfvwrite_r+0x45c>
    50ec:	9805883a 	mov	r2,r19
    50f0:	003f8306 	br	4f00 <__alt_data_end+0xfffe4f00>
    50f4:	b00d883a 	mov	r6,r22
    50f8:	e00b883a 	mov	r5,fp
    50fc:	da000115 	stw	r8,4(sp)
    5100:	00060bc0 	call	60bc <memmove>
    5104:	80800217 	ldw	r2,8(r16)
    5108:	80c00017 	ldw	r3,0(r16)
    510c:	da000117 	ldw	r8,4(sp)
    5110:	1585c83a 	sub	r2,r2,r22
    5114:	1dad883a 	add	r22,r3,r22
    5118:	80800215 	stw	r2,8(r16)
    511c:	85800015 	stw	r22,0(r16)
    5120:	003fbf06 	br	5020 <__alt_data_end+0xfffe5020>
    5124:	81000017 	ldw	r4,0(r16)
    5128:	9027883a 	mov	r19,r18
    512c:	902f883a 	mov	r23,r18
    5130:	003f6906 	br	4ed8 <__alt_data_end+0xfffe4ed8>
    5134:	900d883a 	mov	r6,r18
    5138:	01400284 	movi	r5,10
    513c:	e009883a 	mov	r4,fp
    5140:	0005e900 	call	5e90 <memchr>
    5144:	10003e26 	beq	r2,zero,5240 <__sfvwrite_r+0x4a4>
    5148:	10800044 	addi	r2,r2,1
    514c:	1727c83a 	sub	r19,r2,fp
    5150:	02000044 	movi	r8,1
    5154:	003f9d06 	br	4fcc <__alt_data_end+0xfffe4fcc>
    5158:	80800517 	ldw	r2,20(r16)
    515c:	81400417 	ldw	r5,16(r16)
    5160:	81c00017 	ldw	r7,0(r16)
    5164:	10a7883a 	add	r19,r2,r2
    5168:	9885883a 	add	r2,r19,r2
    516c:	1026d7fa 	srli	r19,r2,31
    5170:	396dc83a 	sub	r22,r7,r5
    5174:	b1000044 	addi	r4,r22,1
    5178:	9885883a 	add	r2,r19,r2
    517c:	1027d07a 	srai	r19,r2,1
    5180:	2485883a 	add	r2,r4,r18
    5184:	980d883a 	mov	r6,r19
    5188:	9880022e 	bgeu	r19,r2,5194 <__sfvwrite_r+0x3f8>
    518c:	1027883a 	mov	r19,r2
    5190:	100d883a 	mov	r6,r2
    5194:	18c1000c 	andi	r3,r3,1024
    5198:	18001c26 	beq	r3,zero,520c <__sfvwrite_r+0x470>
    519c:	300b883a 	mov	r5,r6
    51a0:	a809883a 	mov	r4,r21
    51a4:	00056840 	call	5684 <_malloc_r>
    51a8:	102f883a 	mov	r23,r2
    51ac:	10002926 	beq	r2,zero,5254 <__sfvwrite_r+0x4b8>
    51b0:	81400417 	ldw	r5,16(r16)
    51b4:	b00d883a 	mov	r6,r22
    51b8:	1009883a 	mov	r4,r2
    51bc:	0005f740 	call	5f74 <memcpy>
    51c0:	8080030b 	ldhu	r2,12(r16)
    51c4:	00fedfc4 	movi	r3,-1153
    51c8:	10c4703a 	and	r2,r2,r3
    51cc:	10802014 	ori	r2,r2,128
    51d0:	8080030d 	sth	r2,12(r16)
    51d4:	bd89883a 	add	r4,r23,r22
    51d8:	9d8fc83a 	sub	r7,r19,r22
    51dc:	85c00415 	stw	r23,16(r16)
    51e0:	84c00515 	stw	r19,20(r16)
    51e4:	81000015 	stw	r4,0(r16)
    51e8:	9027883a 	mov	r19,r18
    51ec:	81c00215 	stw	r7,8(r16)
    51f0:	902f883a 	mov	r23,r18
    51f4:	003f3806 	br	4ed8 <__alt_data_end+0xfffe4ed8>
    51f8:	800b883a 	mov	r5,r16
    51fc:	a809883a 	mov	r4,r21
    5200:	000452c0 	call	452c <_fflush_r>
    5204:	103fb926 	beq	r2,zero,50ec <__alt_data_end+0xfffe50ec>
    5208:	003f6506 	br	4fa0 <__alt_data_end+0xfffe4fa0>
    520c:	a809883a 	mov	r4,r21
    5210:	00073f80 	call	73f8 <_realloc_r>
    5214:	102f883a 	mov	r23,r2
    5218:	103fee1e 	bne	r2,zero,51d4 <__alt_data_end+0xfffe51d4>
    521c:	81400417 	ldw	r5,16(r16)
    5220:	a809883a 	mov	r4,r21
    5224:	0004a8c0 	call	4a8c <_free_r>
    5228:	8080030b 	ldhu	r2,12(r16)
    522c:	00ffdfc4 	movi	r3,-129
    5230:	1884703a 	and	r2,r3,r2
    5234:	00c00304 	movi	r3,12
    5238:	a8c00015 	stw	r3,0(r21)
    523c:	003f5906 	br	4fa4 <__alt_data_end+0xfffe4fa4>
    5240:	94c00044 	addi	r19,r18,1
    5244:	02000044 	movi	r8,1
    5248:	003f6006 	br	4fcc <__alt_data_end+0xfffe4fcc>
    524c:	00bfffc4 	movi	r2,-1
    5250:	003f0006 	br	4e54 <__alt_data_end+0xfffe4e54>
    5254:	00800304 	movi	r2,12
    5258:	a8800015 	stw	r2,0(r21)
    525c:	8080030b 	ldhu	r2,12(r16)
    5260:	003f5006 	br	4fa4 <__alt_data_end+0xfffe4fa4>

00005264 <_fwalk>:
    5264:	defff704 	addi	sp,sp,-36
    5268:	dd000415 	stw	r20,16(sp)
    526c:	dfc00815 	stw	ra,32(sp)
    5270:	ddc00715 	stw	r23,28(sp)
    5274:	dd800615 	stw	r22,24(sp)
    5278:	dd400515 	stw	r21,20(sp)
    527c:	dcc00315 	stw	r19,12(sp)
    5280:	dc800215 	stw	r18,8(sp)
    5284:	dc400115 	stw	r17,4(sp)
    5288:	dc000015 	stw	r16,0(sp)
    528c:	2500b804 	addi	r20,r4,736
    5290:	a0002326 	beq	r20,zero,5320 <_fwalk+0xbc>
    5294:	282b883a 	mov	r21,r5
    5298:	002f883a 	mov	r23,zero
    529c:	05800044 	movi	r22,1
    52a0:	04ffffc4 	movi	r19,-1
    52a4:	a4400117 	ldw	r17,4(r20)
    52a8:	a4800217 	ldw	r18,8(r20)
    52ac:	8c7fffc4 	addi	r17,r17,-1
    52b0:	88000d16 	blt	r17,zero,52e8 <_fwalk+0x84>
    52b4:	94000304 	addi	r16,r18,12
    52b8:	94800384 	addi	r18,r18,14
    52bc:	8080000b 	ldhu	r2,0(r16)
    52c0:	8c7fffc4 	addi	r17,r17,-1
    52c4:	813ffd04 	addi	r4,r16,-12
    52c8:	b080042e 	bgeu	r22,r2,52dc <_fwalk+0x78>
    52cc:	9080000f 	ldh	r2,0(r18)
    52d0:	14c00226 	beq	r2,r19,52dc <_fwalk+0x78>
    52d4:	a83ee83a 	callr	r21
    52d8:	b8aeb03a 	or	r23,r23,r2
    52dc:	84001a04 	addi	r16,r16,104
    52e0:	94801a04 	addi	r18,r18,104
    52e4:	8cfff51e 	bne	r17,r19,52bc <__alt_data_end+0xfffe52bc>
    52e8:	a5000017 	ldw	r20,0(r20)
    52ec:	a03fed1e 	bne	r20,zero,52a4 <__alt_data_end+0xfffe52a4>
    52f0:	b805883a 	mov	r2,r23
    52f4:	dfc00817 	ldw	ra,32(sp)
    52f8:	ddc00717 	ldw	r23,28(sp)
    52fc:	dd800617 	ldw	r22,24(sp)
    5300:	dd400517 	ldw	r21,20(sp)
    5304:	dd000417 	ldw	r20,16(sp)
    5308:	dcc00317 	ldw	r19,12(sp)
    530c:	dc800217 	ldw	r18,8(sp)
    5310:	dc400117 	ldw	r17,4(sp)
    5314:	dc000017 	ldw	r16,0(sp)
    5318:	dec00904 	addi	sp,sp,36
    531c:	f800283a 	ret
    5320:	002f883a 	mov	r23,zero
    5324:	003ff206 	br	52f0 <__alt_data_end+0xfffe52f0>

00005328 <_fwalk_reent>:
    5328:	defff704 	addi	sp,sp,-36
    532c:	dd000415 	stw	r20,16(sp)
    5330:	dfc00815 	stw	ra,32(sp)
    5334:	ddc00715 	stw	r23,28(sp)
    5338:	dd800615 	stw	r22,24(sp)
    533c:	dd400515 	stw	r21,20(sp)
    5340:	dcc00315 	stw	r19,12(sp)
    5344:	dc800215 	stw	r18,8(sp)
    5348:	dc400115 	stw	r17,4(sp)
    534c:	dc000015 	stw	r16,0(sp)
    5350:	2500b804 	addi	r20,r4,736
    5354:	a0002326 	beq	r20,zero,53e4 <_fwalk_reent+0xbc>
    5358:	282b883a 	mov	r21,r5
    535c:	2027883a 	mov	r19,r4
    5360:	002f883a 	mov	r23,zero
    5364:	05800044 	movi	r22,1
    5368:	04bfffc4 	movi	r18,-1
    536c:	a4400117 	ldw	r17,4(r20)
    5370:	a4000217 	ldw	r16,8(r20)
    5374:	8c7fffc4 	addi	r17,r17,-1
    5378:	88000c16 	blt	r17,zero,53ac <_fwalk_reent+0x84>
    537c:	84000304 	addi	r16,r16,12
    5380:	8080000b 	ldhu	r2,0(r16)
    5384:	8c7fffc4 	addi	r17,r17,-1
    5388:	817ffd04 	addi	r5,r16,-12
    538c:	b080052e 	bgeu	r22,r2,53a4 <_fwalk_reent+0x7c>
    5390:	8080008f 	ldh	r2,2(r16)
    5394:	9809883a 	mov	r4,r19
    5398:	14800226 	beq	r2,r18,53a4 <_fwalk_reent+0x7c>
    539c:	a83ee83a 	callr	r21
    53a0:	b8aeb03a 	or	r23,r23,r2
    53a4:	84001a04 	addi	r16,r16,104
    53a8:	8cbff51e 	bne	r17,r18,5380 <__alt_data_end+0xfffe5380>
    53ac:	a5000017 	ldw	r20,0(r20)
    53b0:	a03fee1e 	bne	r20,zero,536c <__alt_data_end+0xfffe536c>
    53b4:	b805883a 	mov	r2,r23
    53b8:	dfc00817 	ldw	ra,32(sp)
    53bc:	ddc00717 	ldw	r23,28(sp)
    53c0:	dd800617 	ldw	r22,24(sp)
    53c4:	dd400517 	ldw	r21,20(sp)
    53c8:	dd000417 	ldw	r20,16(sp)
    53cc:	dcc00317 	ldw	r19,12(sp)
    53d0:	dc800217 	ldw	r18,8(sp)
    53d4:	dc400117 	ldw	r17,4(sp)
    53d8:	dc000017 	ldw	r16,0(sp)
    53dc:	dec00904 	addi	sp,sp,36
    53e0:	f800283a 	ret
    53e4:	002f883a 	mov	r23,zero
    53e8:	003ff206 	br	53b4 <__alt_data_end+0xfffe53b4>

000053ec <_setlocale_r>:
    53ec:	30001b26 	beq	r6,zero,545c <_setlocale_r+0x70>
    53f0:	01400074 	movhi	r5,1
    53f4:	defffe04 	addi	sp,sp,-8
    53f8:	297e5704 	addi	r5,r5,-1700
    53fc:	3009883a 	mov	r4,r6
    5400:	dc000015 	stw	r16,0(sp)
    5404:	dfc00115 	stw	ra,4(sp)
    5408:	3021883a 	mov	r16,r6
    540c:	0007b600 	call	7b60 <strcmp>
    5410:	1000061e 	bne	r2,zero,542c <_setlocale_r+0x40>
    5414:	00800074 	movhi	r2,1
    5418:	10be5604 	addi	r2,r2,-1704
    541c:	dfc00117 	ldw	ra,4(sp)
    5420:	dc000017 	ldw	r16,0(sp)
    5424:	dec00204 	addi	sp,sp,8
    5428:	f800283a 	ret
    542c:	01400074 	movhi	r5,1
    5430:	297e5604 	addi	r5,r5,-1704
    5434:	8009883a 	mov	r4,r16
    5438:	0007b600 	call	7b60 <strcmp>
    543c:	103ff526 	beq	r2,zero,5414 <__alt_data_end+0xfffe5414>
    5440:	01400074 	movhi	r5,1
    5444:	297e4104 	addi	r5,r5,-1788
    5448:	8009883a 	mov	r4,r16
    544c:	0007b600 	call	7b60 <strcmp>
    5450:	103ff026 	beq	r2,zero,5414 <__alt_data_end+0xfffe5414>
    5454:	0005883a 	mov	r2,zero
    5458:	003ff006 	br	541c <__alt_data_end+0xfffe541c>
    545c:	00800074 	movhi	r2,1
    5460:	10be5604 	addi	r2,r2,-1704
    5464:	f800283a 	ret

00005468 <__locale_charset>:
    5468:	00800074 	movhi	r2,1
    546c:	10800904 	addi	r2,r2,36
    5470:	f800283a 	ret

00005474 <__locale_mb_cur_max>:
    5474:	00800074 	movhi	r2,1
    5478:	1085a504 	addi	r2,r2,5780
    547c:	10800017 	ldw	r2,0(r2)
    5480:	f800283a 	ret

00005484 <__locale_msgcharset>:
    5484:	00800074 	movhi	r2,1
    5488:	10800104 	addi	r2,r2,4
    548c:	f800283a 	ret

00005490 <__locale_cjk_lang>:
    5490:	0005883a 	mov	r2,zero
    5494:	f800283a 	ret

00005498 <_localeconv_r>:
    5498:	00800074 	movhi	r2,1
    549c:	10801104 	addi	r2,r2,68
    54a0:	f800283a 	ret

000054a4 <setlocale>:
    54a4:	00800074 	movhi	r2,1
    54a8:	1085a404 	addi	r2,r2,5776
    54ac:	280d883a 	mov	r6,r5
    54b0:	200b883a 	mov	r5,r4
    54b4:	11000017 	ldw	r4,0(r2)
    54b8:	00053ec1 	jmpi	53ec <_setlocale_r>

000054bc <localeconv>:
    54bc:	00800074 	movhi	r2,1
    54c0:	10801104 	addi	r2,r2,68
    54c4:	f800283a 	ret

000054c8 <__smakebuf_r>:
    54c8:	2880030b 	ldhu	r2,12(r5)
    54cc:	10c0008c 	andi	r3,r2,2
    54d0:	1800411e 	bne	r3,zero,55d8 <__smakebuf_r+0x110>
    54d4:	deffec04 	addi	sp,sp,-80
    54d8:	dc000f15 	stw	r16,60(sp)
    54dc:	2821883a 	mov	r16,r5
    54e0:	2940038f 	ldh	r5,14(r5)
    54e4:	dc401015 	stw	r17,64(sp)
    54e8:	dfc01315 	stw	ra,76(sp)
    54ec:	dcc01215 	stw	r19,72(sp)
    54f0:	dc801115 	stw	r18,68(sp)
    54f4:	2023883a 	mov	r17,r4
    54f8:	28001c16 	blt	r5,zero,556c <__smakebuf_r+0xa4>
    54fc:	d80d883a 	mov	r6,sp
    5500:	00097d00 	call	97d0 <_fstat_r>
    5504:	10001816 	blt	r2,zero,5568 <__smakebuf_r+0xa0>
    5508:	d8800117 	ldw	r2,4(sp)
    550c:	00e00014 	movui	r3,32768
    5510:	10bc000c 	andi	r2,r2,61440
    5514:	14c80020 	cmpeqi	r19,r2,8192
    5518:	10c03726 	beq	r2,r3,55f8 <__smakebuf_r+0x130>
    551c:	80c0030b 	ldhu	r3,12(r16)
    5520:	18c20014 	ori	r3,r3,2048
    5524:	80c0030d 	sth	r3,12(r16)
    5528:	00c80004 	movi	r3,8192
    552c:	10c0521e 	bne	r2,r3,5678 <__smakebuf_r+0x1b0>
    5530:	8140038f 	ldh	r5,14(r16)
    5534:	8809883a 	mov	r4,r17
    5538:	000982c0 	call	982c <_isatty_r>
    553c:	10004c26 	beq	r2,zero,5670 <__smakebuf_r+0x1a8>
    5540:	8080030b 	ldhu	r2,12(r16)
    5544:	80c010c4 	addi	r3,r16,67
    5548:	80c00015 	stw	r3,0(r16)
    554c:	10800054 	ori	r2,r2,1
    5550:	8080030d 	sth	r2,12(r16)
    5554:	00800044 	movi	r2,1
    5558:	80c00415 	stw	r3,16(r16)
    555c:	80800515 	stw	r2,20(r16)
    5560:	04810004 	movi	r18,1024
    5564:	00000706 	br	5584 <__smakebuf_r+0xbc>
    5568:	8080030b 	ldhu	r2,12(r16)
    556c:	10c0200c 	andi	r3,r2,128
    5570:	18001f1e 	bne	r3,zero,55f0 <__smakebuf_r+0x128>
    5574:	04810004 	movi	r18,1024
    5578:	10820014 	ori	r2,r2,2048
    557c:	8080030d 	sth	r2,12(r16)
    5580:	0027883a 	mov	r19,zero
    5584:	900b883a 	mov	r5,r18
    5588:	8809883a 	mov	r4,r17
    558c:	00056840 	call	5684 <_malloc_r>
    5590:	10002c26 	beq	r2,zero,5644 <__smakebuf_r+0x17c>
    5594:	80c0030b 	ldhu	r3,12(r16)
    5598:	01000034 	movhi	r4,0
    559c:	21117004 	addi	r4,r4,17856
    55a0:	89000f15 	stw	r4,60(r17)
    55a4:	18c02014 	ori	r3,r3,128
    55a8:	80c0030d 	sth	r3,12(r16)
    55ac:	80800015 	stw	r2,0(r16)
    55b0:	80800415 	stw	r2,16(r16)
    55b4:	84800515 	stw	r18,20(r16)
    55b8:	98001a1e 	bne	r19,zero,5624 <__smakebuf_r+0x15c>
    55bc:	dfc01317 	ldw	ra,76(sp)
    55c0:	dcc01217 	ldw	r19,72(sp)
    55c4:	dc801117 	ldw	r18,68(sp)
    55c8:	dc401017 	ldw	r17,64(sp)
    55cc:	dc000f17 	ldw	r16,60(sp)
    55d0:	dec01404 	addi	sp,sp,80
    55d4:	f800283a 	ret
    55d8:	288010c4 	addi	r2,r5,67
    55dc:	28800015 	stw	r2,0(r5)
    55e0:	28800415 	stw	r2,16(r5)
    55e4:	00800044 	movi	r2,1
    55e8:	28800515 	stw	r2,20(r5)
    55ec:	f800283a 	ret
    55f0:	04801004 	movi	r18,64
    55f4:	003fe006 	br	5578 <__alt_data_end+0xfffe5578>
    55f8:	81000a17 	ldw	r4,40(r16)
    55fc:	00c00034 	movhi	r3,0
    5600:	18debf04 	addi	r3,r3,31484
    5604:	20ffc51e 	bne	r4,r3,551c <__alt_data_end+0xfffe551c>
    5608:	8080030b 	ldhu	r2,12(r16)
    560c:	04810004 	movi	r18,1024
    5610:	84801315 	stw	r18,76(r16)
    5614:	1484b03a 	or	r2,r2,r18
    5618:	8080030d 	sth	r2,12(r16)
    561c:	0027883a 	mov	r19,zero
    5620:	003fd806 	br	5584 <__alt_data_end+0xfffe5584>
    5624:	8140038f 	ldh	r5,14(r16)
    5628:	8809883a 	mov	r4,r17
    562c:	000982c0 	call	982c <_isatty_r>
    5630:	103fe226 	beq	r2,zero,55bc <__alt_data_end+0xfffe55bc>
    5634:	8080030b 	ldhu	r2,12(r16)
    5638:	10800054 	ori	r2,r2,1
    563c:	8080030d 	sth	r2,12(r16)
    5640:	003fde06 	br	55bc <__alt_data_end+0xfffe55bc>
    5644:	8080030b 	ldhu	r2,12(r16)
    5648:	10c0800c 	andi	r3,r2,512
    564c:	183fdb1e 	bne	r3,zero,55bc <__alt_data_end+0xfffe55bc>
    5650:	10800094 	ori	r2,r2,2
    5654:	80c010c4 	addi	r3,r16,67
    5658:	8080030d 	sth	r2,12(r16)
    565c:	00800044 	movi	r2,1
    5660:	80c00015 	stw	r3,0(r16)
    5664:	80c00415 	stw	r3,16(r16)
    5668:	80800515 	stw	r2,20(r16)
    566c:	003fd306 	br	55bc <__alt_data_end+0xfffe55bc>
    5670:	04810004 	movi	r18,1024
    5674:	003fc306 	br	5584 <__alt_data_end+0xfffe5584>
    5678:	0027883a 	mov	r19,zero
    567c:	04810004 	movi	r18,1024
    5680:	003fc006 	br	5584 <__alt_data_end+0xfffe5584>

00005684 <_malloc_r>:
    5684:	defff504 	addi	sp,sp,-44
    5688:	dc800315 	stw	r18,12(sp)
    568c:	dfc00a15 	stw	ra,40(sp)
    5690:	df000915 	stw	fp,36(sp)
    5694:	ddc00815 	stw	r23,32(sp)
    5698:	dd800715 	stw	r22,28(sp)
    569c:	dd400615 	stw	r21,24(sp)
    56a0:	dd000515 	stw	r20,20(sp)
    56a4:	dcc00415 	stw	r19,16(sp)
    56a8:	dc400215 	stw	r17,8(sp)
    56ac:	dc000115 	stw	r16,4(sp)
    56b0:	288002c4 	addi	r2,r5,11
    56b4:	00c00584 	movi	r3,22
    56b8:	2025883a 	mov	r18,r4
    56bc:	18807f2e 	bgeu	r3,r2,58bc <_malloc_r+0x238>
    56c0:	047ffe04 	movi	r17,-8
    56c4:	1462703a 	and	r17,r2,r17
    56c8:	8800a316 	blt	r17,zero,5958 <_malloc_r+0x2d4>
    56cc:	8940a236 	bltu	r17,r5,5958 <_malloc_r+0x2d4>
    56d0:	000d85c0 	call	d85c <__malloc_lock>
    56d4:	00807dc4 	movi	r2,503
    56d8:	1441e92e 	bgeu	r2,r17,5e80 <_malloc_r+0x7fc>
    56dc:	8804d27a 	srli	r2,r17,9
    56e0:	1000a126 	beq	r2,zero,5968 <_malloc_r+0x2e4>
    56e4:	00c00104 	movi	r3,4
    56e8:	18811e36 	bltu	r3,r2,5b64 <_malloc_r+0x4e0>
    56ec:	8804d1ba 	srli	r2,r17,6
    56f0:	12000e44 	addi	r8,r2,57
    56f4:	11c00e04 	addi	r7,r2,56
    56f8:	4209883a 	add	r4,r8,r8
    56fc:	04c00074 	movhi	r19,1
    5700:	2109883a 	add	r4,r4,r4
    5704:	9cc01f04 	addi	r19,r19,124
    5708:	2109883a 	add	r4,r4,r4
    570c:	9909883a 	add	r4,r19,r4
    5710:	24000117 	ldw	r16,4(r4)
    5714:	213ffe04 	addi	r4,r4,-8
    5718:	24009726 	beq	r4,r16,5978 <_malloc_r+0x2f4>
    571c:	80800117 	ldw	r2,4(r16)
    5720:	01bfff04 	movi	r6,-4
    5724:	014003c4 	movi	r5,15
    5728:	1184703a 	and	r2,r2,r6
    572c:	1447c83a 	sub	r3,r2,r17
    5730:	28c00716 	blt	r5,r3,5750 <_malloc_r+0xcc>
    5734:	1800920e 	bge	r3,zero,5980 <_malloc_r+0x2fc>
    5738:	84000317 	ldw	r16,12(r16)
    573c:	24008e26 	beq	r4,r16,5978 <_malloc_r+0x2f4>
    5740:	80800117 	ldw	r2,4(r16)
    5744:	1184703a 	and	r2,r2,r6
    5748:	1447c83a 	sub	r3,r2,r17
    574c:	28fff90e 	bge	r5,r3,5734 <__alt_data_end+0xfffe5734>
    5750:	3809883a 	mov	r4,r7
    5754:	01800074 	movhi	r6,1
    5758:	9c000417 	ldw	r16,16(r19)
    575c:	31801f04 	addi	r6,r6,124
    5760:	32000204 	addi	r8,r6,8
    5764:	82013426 	beq	r16,r8,5c38 <_malloc_r+0x5b4>
    5768:	80c00117 	ldw	r3,4(r16)
    576c:	00bfff04 	movi	r2,-4
    5770:	188e703a 	and	r7,r3,r2
    5774:	3c45c83a 	sub	r2,r7,r17
    5778:	00c003c4 	movi	r3,15
    577c:	18811f16 	blt	r3,r2,5bfc <_malloc_r+0x578>
    5780:	32000515 	stw	r8,20(r6)
    5784:	32000415 	stw	r8,16(r6)
    5788:	10007f0e 	bge	r2,zero,5988 <_malloc_r+0x304>
    578c:	00807fc4 	movi	r2,511
    5790:	11c0fd36 	bltu	r2,r7,5b88 <_malloc_r+0x504>
    5794:	3806d0fa 	srli	r3,r7,3
    5798:	01c00044 	movi	r7,1
    579c:	30800117 	ldw	r2,4(r6)
    57a0:	19400044 	addi	r5,r3,1
    57a4:	294b883a 	add	r5,r5,r5
    57a8:	1807d0ba 	srai	r3,r3,2
    57ac:	294b883a 	add	r5,r5,r5
    57b0:	294b883a 	add	r5,r5,r5
    57b4:	298b883a 	add	r5,r5,r6
    57b8:	38c6983a 	sll	r3,r7,r3
    57bc:	29c00017 	ldw	r7,0(r5)
    57c0:	2a7ffe04 	addi	r9,r5,-8
    57c4:	1886b03a 	or	r3,r3,r2
    57c8:	82400315 	stw	r9,12(r16)
    57cc:	81c00215 	stw	r7,8(r16)
    57d0:	30c00115 	stw	r3,4(r6)
    57d4:	2c000015 	stw	r16,0(r5)
    57d8:	3c000315 	stw	r16,12(r7)
    57dc:	2005d0ba 	srai	r2,r4,2
    57e0:	01400044 	movi	r5,1
    57e4:	288a983a 	sll	r5,r5,r2
    57e8:	19406f36 	bltu	r3,r5,59a8 <_malloc_r+0x324>
    57ec:	28c4703a 	and	r2,r5,r3
    57f0:	10000a1e 	bne	r2,zero,581c <_malloc_r+0x198>
    57f4:	00bfff04 	movi	r2,-4
    57f8:	294b883a 	add	r5,r5,r5
    57fc:	2088703a 	and	r4,r4,r2
    5800:	28c4703a 	and	r2,r5,r3
    5804:	21000104 	addi	r4,r4,4
    5808:	1000041e 	bne	r2,zero,581c <_malloc_r+0x198>
    580c:	294b883a 	add	r5,r5,r5
    5810:	28c4703a 	and	r2,r5,r3
    5814:	21000104 	addi	r4,r4,4
    5818:	103ffc26 	beq	r2,zero,580c <__alt_data_end+0xfffe580c>
    581c:	02bfff04 	movi	r10,-4
    5820:	024003c4 	movi	r9,15
    5824:	21800044 	addi	r6,r4,1
    5828:	318d883a 	add	r6,r6,r6
    582c:	318d883a 	add	r6,r6,r6
    5830:	318d883a 	add	r6,r6,r6
    5834:	998d883a 	add	r6,r19,r6
    5838:	333ffe04 	addi	r12,r6,-8
    583c:	2017883a 	mov	r11,r4
    5840:	31800104 	addi	r6,r6,4
    5844:	34000017 	ldw	r16,0(r6)
    5848:	31fffd04 	addi	r7,r6,-12
    584c:	81c0041e 	bne	r16,r7,5860 <_malloc_r+0x1dc>
    5850:	0000fb06 	br	5c40 <_malloc_r+0x5bc>
    5854:	1801030e 	bge	r3,zero,5c64 <_malloc_r+0x5e0>
    5858:	84000317 	ldw	r16,12(r16)
    585c:	81c0f826 	beq	r16,r7,5c40 <_malloc_r+0x5bc>
    5860:	80800117 	ldw	r2,4(r16)
    5864:	1284703a 	and	r2,r2,r10
    5868:	1447c83a 	sub	r3,r2,r17
    586c:	48fff90e 	bge	r9,r3,5854 <__alt_data_end+0xfffe5854>
    5870:	80800317 	ldw	r2,12(r16)
    5874:	81000217 	ldw	r4,8(r16)
    5878:	89400054 	ori	r5,r17,1
    587c:	81400115 	stw	r5,4(r16)
    5880:	20800315 	stw	r2,12(r4)
    5884:	11000215 	stw	r4,8(r2)
    5888:	8463883a 	add	r17,r16,r17
    588c:	9c400515 	stw	r17,20(r19)
    5890:	9c400415 	stw	r17,16(r19)
    5894:	18800054 	ori	r2,r3,1
    5898:	88800115 	stw	r2,4(r17)
    589c:	8a000315 	stw	r8,12(r17)
    58a0:	8a000215 	stw	r8,8(r17)
    58a4:	88e3883a 	add	r17,r17,r3
    58a8:	88c00015 	stw	r3,0(r17)
    58ac:	9009883a 	mov	r4,r18
    58b0:	000d8800 	call	d880 <__malloc_unlock>
    58b4:	80800204 	addi	r2,r16,8
    58b8:	00001b06 	br	5928 <_malloc_r+0x2a4>
    58bc:	04400404 	movi	r17,16
    58c0:	89402536 	bltu	r17,r5,5958 <_malloc_r+0x2d4>
    58c4:	000d85c0 	call	d85c <__malloc_lock>
    58c8:	00800184 	movi	r2,6
    58cc:	01000084 	movi	r4,2
    58d0:	04c00074 	movhi	r19,1
    58d4:	1085883a 	add	r2,r2,r2
    58d8:	9cc01f04 	addi	r19,r19,124
    58dc:	1085883a 	add	r2,r2,r2
    58e0:	9885883a 	add	r2,r19,r2
    58e4:	14000117 	ldw	r16,4(r2)
    58e8:	10fffe04 	addi	r3,r2,-8
    58ec:	80c0d926 	beq	r16,r3,5c54 <_malloc_r+0x5d0>
    58f0:	80c00117 	ldw	r3,4(r16)
    58f4:	81000317 	ldw	r4,12(r16)
    58f8:	00bfff04 	movi	r2,-4
    58fc:	1884703a 	and	r2,r3,r2
    5900:	81400217 	ldw	r5,8(r16)
    5904:	8085883a 	add	r2,r16,r2
    5908:	10c00117 	ldw	r3,4(r2)
    590c:	29000315 	stw	r4,12(r5)
    5910:	21400215 	stw	r5,8(r4)
    5914:	18c00054 	ori	r3,r3,1
    5918:	10c00115 	stw	r3,4(r2)
    591c:	9009883a 	mov	r4,r18
    5920:	000d8800 	call	d880 <__malloc_unlock>
    5924:	80800204 	addi	r2,r16,8
    5928:	dfc00a17 	ldw	ra,40(sp)
    592c:	df000917 	ldw	fp,36(sp)
    5930:	ddc00817 	ldw	r23,32(sp)
    5934:	dd800717 	ldw	r22,28(sp)
    5938:	dd400617 	ldw	r21,24(sp)
    593c:	dd000517 	ldw	r20,20(sp)
    5940:	dcc00417 	ldw	r19,16(sp)
    5944:	dc800317 	ldw	r18,12(sp)
    5948:	dc400217 	ldw	r17,8(sp)
    594c:	dc000117 	ldw	r16,4(sp)
    5950:	dec00b04 	addi	sp,sp,44
    5954:	f800283a 	ret
    5958:	00800304 	movi	r2,12
    595c:	90800015 	stw	r2,0(r18)
    5960:	0005883a 	mov	r2,zero
    5964:	003ff006 	br	5928 <__alt_data_end+0xfffe5928>
    5968:	01002004 	movi	r4,128
    596c:	02001004 	movi	r8,64
    5970:	01c00fc4 	movi	r7,63
    5974:	003f6106 	br	56fc <__alt_data_end+0xfffe56fc>
    5978:	4009883a 	mov	r4,r8
    597c:	003f7506 	br	5754 <__alt_data_end+0xfffe5754>
    5980:	81000317 	ldw	r4,12(r16)
    5984:	003fde06 	br	5900 <__alt_data_end+0xfffe5900>
    5988:	81c5883a 	add	r2,r16,r7
    598c:	11400117 	ldw	r5,4(r2)
    5990:	9009883a 	mov	r4,r18
    5994:	29400054 	ori	r5,r5,1
    5998:	11400115 	stw	r5,4(r2)
    599c:	000d8800 	call	d880 <__malloc_unlock>
    59a0:	80800204 	addi	r2,r16,8
    59a4:	003fe006 	br	5928 <__alt_data_end+0xfffe5928>
    59a8:	9c000217 	ldw	r16,8(r19)
    59ac:	00bfff04 	movi	r2,-4
    59b0:	85800117 	ldw	r22,4(r16)
    59b4:	b0ac703a 	and	r22,r22,r2
    59b8:	b4400336 	bltu	r22,r17,59c8 <_malloc_r+0x344>
    59bc:	b445c83a 	sub	r2,r22,r17
    59c0:	00c003c4 	movi	r3,15
    59c4:	18805d16 	blt	r3,r2,5b3c <_malloc_r+0x4b8>
    59c8:	05c00074 	movhi	r23,1
    59cc:	00800074 	movhi	r2,1
    59d0:	108c7304 	addi	r2,r2,12748
    59d4:	bdc5a604 	addi	r23,r23,5784
    59d8:	15400017 	ldw	r21,0(r2)
    59dc:	b8c00017 	ldw	r3,0(r23)
    59e0:	00bfffc4 	movi	r2,-1
    59e4:	858d883a 	add	r6,r16,r22
    59e8:	8d6b883a 	add	r21,r17,r21
    59ec:	1880ea26 	beq	r3,r2,5d98 <_malloc_r+0x714>
    59f0:	ad4403c4 	addi	r21,r21,4111
    59f4:	00bc0004 	movi	r2,-4096
    59f8:	a8aa703a 	and	r21,r21,r2
    59fc:	a80b883a 	mov	r5,r21
    5a00:	9009883a 	mov	r4,r18
    5a04:	d9800015 	stw	r6,0(sp)
    5a08:	00079d00 	call	79d0 <_sbrk_r>
    5a0c:	1029883a 	mov	r20,r2
    5a10:	00bfffc4 	movi	r2,-1
    5a14:	d9800017 	ldw	r6,0(sp)
    5a18:	a080e826 	beq	r20,r2,5dbc <_malloc_r+0x738>
    5a1c:	a180a636 	bltu	r20,r6,5cb8 <_malloc_r+0x634>
    5a20:	07000074 	movhi	fp,1
    5a24:	e70c7b04 	addi	fp,fp,12780
    5a28:	e0800017 	ldw	r2,0(fp)
    5a2c:	a887883a 	add	r3,r21,r2
    5a30:	e0c00015 	stw	r3,0(fp)
    5a34:	3500e626 	beq	r6,r20,5dd0 <_malloc_r+0x74c>
    5a38:	b9000017 	ldw	r4,0(r23)
    5a3c:	00bfffc4 	movi	r2,-1
    5a40:	2080ee26 	beq	r4,r2,5dfc <_malloc_r+0x778>
    5a44:	a185c83a 	sub	r2,r20,r6
    5a48:	10c5883a 	add	r2,r2,r3
    5a4c:	e0800015 	stw	r2,0(fp)
    5a50:	a0c001cc 	andi	r3,r20,7
    5a54:	1800bc26 	beq	r3,zero,5d48 <_malloc_r+0x6c4>
    5a58:	a0e9c83a 	sub	r20,r20,r3
    5a5c:	00840204 	movi	r2,4104
    5a60:	a5000204 	addi	r20,r20,8
    5a64:	10c7c83a 	sub	r3,r2,r3
    5a68:	a545883a 	add	r2,r20,r21
    5a6c:	1083ffcc 	andi	r2,r2,4095
    5a70:	18abc83a 	sub	r21,r3,r2
    5a74:	a80b883a 	mov	r5,r21
    5a78:	9009883a 	mov	r4,r18
    5a7c:	00079d00 	call	79d0 <_sbrk_r>
    5a80:	00ffffc4 	movi	r3,-1
    5a84:	10c0e126 	beq	r2,r3,5e0c <_malloc_r+0x788>
    5a88:	1505c83a 	sub	r2,r2,r20
    5a8c:	1545883a 	add	r2,r2,r21
    5a90:	10800054 	ori	r2,r2,1
    5a94:	e0c00017 	ldw	r3,0(fp)
    5a98:	9d000215 	stw	r20,8(r19)
    5a9c:	a0800115 	stw	r2,4(r20)
    5aa0:	a8c7883a 	add	r3,r21,r3
    5aa4:	e0c00015 	stw	r3,0(fp)
    5aa8:	84c00e26 	beq	r16,r19,5ae4 <_malloc_r+0x460>
    5aac:	018003c4 	movi	r6,15
    5ab0:	3580a72e 	bgeu	r6,r22,5d50 <_malloc_r+0x6cc>
    5ab4:	81400117 	ldw	r5,4(r16)
    5ab8:	013ffe04 	movi	r4,-8
    5abc:	b0bffd04 	addi	r2,r22,-12
    5ac0:	1104703a 	and	r2,r2,r4
    5ac4:	2900004c 	andi	r4,r5,1
    5ac8:	2088b03a 	or	r4,r4,r2
    5acc:	81000115 	stw	r4,4(r16)
    5ad0:	01400144 	movi	r5,5
    5ad4:	8089883a 	add	r4,r16,r2
    5ad8:	21400115 	stw	r5,4(r4)
    5adc:	21400215 	stw	r5,8(r4)
    5ae0:	3080cd36 	bltu	r6,r2,5e18 <_malloc_r+0x794>
    5ae4:	00800074 	movhi	r2,1
    5ae8:	108c7204 	addi	r2,r2,12744
    5aec:	11000017 	ldw	r4,0(r2)
    5af0:	20c0012e 	bgeu	r4,r3,5af8 <_malloc_r+0x474>
    5af4:	10c00015 	stw	r3,0(r2)
    5af8:	00800074 	movhi	r2,1
    5afc:	108c7104 	addi	r2,r2,12740
    5b00:	11000017 	ldw	r4,0(r2)
    5b04:	9c000217 	ldw	r16,8(r19)
    5b08:	20c0012e 	bgeu	r4,r3,5b10 <_malloc_r+0x48c>
    5b0c:	10c00015 	stw	r3,0(r2)
    5b10:	80c00117 	ldw	r3,4(r16)
    5b14:	00bfff04 	movi	r2,-4
    5b18:	1886703a 	and	r3,r3,r2
    5b1c:	1c45c83a 	sub	r2,r3,r17
    5b20:	1c400236 	bltu	r3,r17,5b2c <_malloc_r+0x4a8>
    5b24:	00c003c4 	movi	r3,15
    5b28:	18800416 	blt	r3,r2,5b3c <_malloc_r+0x4b8>
    5b2c:	9009883a 	mov	r4,r18
    5b30:	000d8800 	call	d880 <__malloc_unlock>
    5b34:	0005883a 	mov	r2,zero
    5b38:	003f7b06 	br	5928 <__alt_data_end+0xfffe5928>
    5b3c:	88c00054 	ori	r3,r17,1
    5b40:	80c00115 	stw	r3,4(r16)
    5b44:	8463883a 	add	r17,r16,r17
    5b48:	10800054 	ori	r2,r2,1
    5b4c:	9c400215 	stw	r17,8(r19)
    5b50:	88800115 	stw	r2,4(r17)
    5b54:	9009883a 	mov	r4,r18
    5b58:	000d8800 	call	d880 <__malloc_unlock>
    5b5c:	80800204 	addi	r2,r16,8
    5b60:	003f7106 	br	5928 <__alt_data_end+0xfffe5928>
    5b64:	00c00504 	movi	r3,20
    5b68:	18804a2e 	bgeu	r3,r2,5c94 <_malloc_r+0x610>
    5b6c:	00c01504 	movi	r3,84
    5b70:	18806e36 	bltu	r3,r2,5d2c <_malloc_r+0x6a8>
    5b74:	8804d33a 	srli	r2,r17,12
    5b78:	12001bc4 	addi	r8,r2,111
    5b7c:	11c01b84 	addi	r7,r2,110
    5b80:	4209883a 	add	r4,r8,r8
    5b84:	003edd06 	br	56fc <__alt_data_end+0xfffe56fc>
    5b88:	3804d27a 	srli	r2,r7,9
    5b8c:	00c00104 	movi	r3,4
    5b90:	1880442e 	bgeu	r3,r2,5ca4 <_malloc_r+0x620>
    5b94:	00c00504 	movi	r3,20
    5b98:	18808136 	bltu	r3,r2,5da0 <_malloc_r+0x71c>
    5b9c:	11401704 	addi	r5,r2,92
    5ba0:	10c016c4 	addi	r3,r2,91
    5ba4:	294b883a 	add	r5,r5,r5
    5ba8:	294b883a 	add	r5,r5,r5
    5bac:	294b883a 	add	r5,r5,r5
    5bb0:	994b883a 	add	r5,r19,r5
    5bb4:	28800017 	ldw	r2,0(r5)
    5bb8:	01800074 	movhi	r6,1
    5bbc:	297ffe04 	addi	r5,r5,-8
    5bc0:	31801f04 	addi	r6,r6,124
    5bc4:	28806526 	beq	r5,r2,5d5c <_malloc_r+0x6d8>
    5bc8:	01bfff04 	movi	r6,-4
    5bcc:	10c00117 	ldw	r3,4(r2)
    5bd0:	1986703a 	and	r3,r3,r6
    5bd4:	38c0022e 	bgeu	r7,r3,5be0 <_malloc_r+0x55c>
    5bd8:	10800217 	ldw	r2,8(r2)
    5bdc:	28bffb1e 	bne	r5,r2,5bcc <__alt_data_end+0xfffe5bcc>
    5be0:	11400317 	ldw	r5,12(r2)
    5be4:	98c00117 	ldw	r3,4(r19)
    5be8:	81400315 	stw	r5,12(r16)
    5bec:	80800215 	stw	r2,8(r16)
    5bf0:	2c000215 	stw	r16,8(r5)
    5bf4:	14000315 	stw	r16,12(r2)
    5bf8:	003ef806 	br	57dc <__alt_data_end+0xfffe57dc>
    5bfc:	88c00054 	ori	r3,r17,1
    5c00:	80c00115 	stw	r3,4(r16)
    5c04:	8463883a 	add	r17,r16,r17
    5c08:	34400515 	stw	r17,20(r6)
    5c0c:	34400415 	stw	r17,16(r6)
    5c10:	10c00054 	ori	r3,r2,1
    5c14:	8a000315 	stw	r8,12(r17)
    5c18:	8a000215 	stw	r8,8(r17)
    5c1c:	88c00115 	stw	r3,4(r17)
    5c20:	88a3883a 	add	r17,r17,r2
    5c24:	88800015 	stw	r2,0(r17)
    5c28:	9009883a 	mov	r4,r18
    5c2c:	000d8800 	call	d880 <__malloc_unlock>
    5c30:	80800204 	addi	r2,r16,8
    5c34:	003f3c06 	br	5928 <__alt_data_end+0xfffe5928>
    5c38:	30c00117 	ldw	r3,4(r6)
    5c3c:	003ee706 	br	57dc <__alt_data_end+0xfffe57dc>
    5c40:	5ac00044 	addi	r11,r11,1
    5c44:	588000cc 	andi	r2,r11,3
    5c48:	31800204 	addi	r6,r6,8
    5c4c:	103efd1e 	bne	r2,zero,5844 <__alt_data_end+0xfffe5844>
    5c50:	00002406 	br	5ce4 <_malloc_r+0x660>
    5c54:	14000317 	ldw	r16,12(r2)
    5c58:	143f251e 	bne	r2,r16,58f0 <__alt_data_end+0xfffe58f0>
    5c5c:	21000084 	addi	r4,r4,2
    5c60:	003ebc06 	br	5754 <__alt_data_end+0xfffe5754>
    5c64:	8085883a 	add	r2,r16,r2
    5c68:	10c00117 	ldw	r3,4(r2)
    5c6c:	81000317 	ldw	r4,12(r16)
    5c70:	81400217 	ldw	r5,8(r16)
    5c74:	18c00054 	ori	r3,r3,1
    5c78:	10c00115 	stw	r3,4(r2)
    5c7c:	29000315 	stw	r4,12(r5)
    5c80:	21400215 	stw	r5,8(r4)
    5c84:	9009883a 	mov	r4,r18
    5c88:	000d8800 	call	d880 <__malloc_unlock>
    5c8c:	80800204 	addi	r2,r16,8
    5c90:	003f2506 	br	5928 <__alt_data_end+0xfffe5928>
    5c94:	12001704 	addi	r8,r2,92
    5c98:	11c016c4 	addi	r7,r2,91
    5c9c:	4209883a 	add	r4,r8,r8
    5ca0:	003e9606 	br	56fc <__alt_data_end+0xfffe56fc>
    5ca4:	3804d1ba 	srli	r2,r7,6
    5ca8:	11400e44 	addi	r5,r2,57
    5cac:	10c00e04 	addi	r3,r2,56
    5cb0:	294b883a 	add	r5,r5,r5
    5cb4:	003fbc06 	br	5ba8 <__alt_data_end+0xfffe5ba8>
    5cb8:	84ff5926 	beq	r16,r19,5a20 <__alt_data_end+0xfffe5a20>
    5cbc:	00800074 	movhi	r2,1
    5cc0:	10801f04 	addi	r2,r2,124
    5cc4:	14000217 	ldw	r16,8(r2)
    5cc8:	00bfff04 	movi	r2,-4
    5ccc:	80c00117 	ldw	r3,4(r16)
    5cd0:	1886703a 	and	r3,r3,r2
    5cd4:	003f9106 	br	5b1c <__alt_data_end+0xfffe5b1c>
    5cd8:	60800217 	ldw	r2,8(r12)
    5cdc:	213fffc4 	addi	r4,r4,-1
    5ce0:	1300651e 	bne	r2,r12,5e78 <_malloc_r+0x7f4>
    5ce4:	208000cc 	andi	r2,r4,3
    5ce8:	633ffe04 	addi	r12,r12,-8
    5cec:	103ffa1e 	bne	r2,zero,5cd8 <__alt_data_end+0xfffe5cd8>
    5cf0:	98800117 	ldw	r2,4(r19)
    5cf4:	0146303a 	nor	r3,zero,r5
    5cf8:	1884703a 	and	r2,r3,r2
    5cfc:	98800115 	stw	r2,4(r19)
    5d00:	294b883a 	add	r5,r5,r5
    5d04:	117f2836 	bltu	r2,r5,59a8 <__alt_data_end+0xfffe59a8>
    5d08:	283f2726 	beq	r5,zero,59a8 <__alt_data_end+0xfffe59a8>
    5d0c:	2886703a 	and	r3,r5,r2
    5d10:	5809883a 	mov	r4,r11
    5d14:	183ec31e 	bne	r3,zero,5824 <__alt_data_end+0xfffe5824>
    5d18:	294b883a 	add	r5,r5,r5
    5d1c:	2886703a 	and	r3,r5,r2
    5d20:	21000104 	addi	r4,r4,4
    5d24:	183ffc26 	beq	r3,zero,5d18 <__alt_data_end+0xfffe5d18>
    5d28:	003ebe06 	br	5824 <__alt_data_end+0xfffe5824>
    5d2c:	00c05504 	movi	r3,340
    5d30:	18801236 	bltu	r3,r2,5d7c <_malloc_r+0x6f8>
    5d34:	8804d3fa 	srli	r2,r17,15
    5d38:	12001e04 	addi	r8,r2,120
    5d3c:	11c01dc4 	addi	r7,r2,119
    5d40:	4209883a 	add	r4,r8,r8
    5d44:	003e6d06 	br	56fc <__alt_data_end+0xfffe56fc>
    5d48:	00c40004 	movi	r3,4096
    5d4c:	003f4606 	br	5a68 <__alt_data_end+0xfffe5a68>
    5d50:	00800044 	movi	r2,1
    5d54:	a0800115 	stw	r2,4(r20)
    5d58:	003f7406 	br	5b2c <__alt_data_end+0xfffe5b2c>
    5d5c:	1805d0ba 	srai	r2,r3,2
    5d60:	01c00044 	movi	r7,1
    5d64:	30c00117 	ldw	r3,4(r6)
    5d68:	388e983a 	sll	r7,r7,r2
    5d6c:	2805883a 	mov	r2,r5
    5d70:	38c6b03a 	or	r3,r7,r3
    5d74:	30c00115 	stw	r3,4(r6)
    5d78:	003f9b06 	br	5be8 <__alt_data_end+0xfffe5be8>
    5d7c:	00c15504 	movi	r3,1364
    5d80:	18801a36 	bltu	r3,r2,5dec <_malloc_r+0x768>
    5d84:	8804d4ba 	srli	r2,r17,18
    5d88:	12001f44 	addi	r8,r2,125
    5d8c:	11c01f04 	addi	r7,r2,124
    5d90:	4209883a 	add	r4,r8,r8
    5d94:	003e5906 	br	56fc <__alt_data_end+0xfffe56fc>
    5d98:	ad400404 	addi	r21,r21,16
    5d9c:	003f1706 	br	59fc <__alt_data_end+0xfffe59fc>
    5da0:	00c01504 	movi	r3,84
    5da4:	18802336 	bltu	r3,r2,5e34 <_malloc_r+0x7b0>
    5da8:	3804d33a 	srli	r2,r7,12
    5dac:	11401bc4 	addi	r5,r2,111
    5db0:	10c01b84 	addi	r3,r2,110
    5db4:	294b883a 	add	r5,r5,r5
    5db8:	003f7b06 	br	5ba8 <__alt_data_end+0xfffe5ba8>
    5dbc:	9c000217 	ldw	r16,8(r19)
    5dc0:	00bfff04 	movi	r2,-4
    5dc4:	80c00117 	ldw	r3,4(r16)
    5dc8:	1886703a 	and	r3,r3,r2
    5dcc:	003f5306 	br	5b1c <__alt_data_end+0xfffe5b1c>
    5dd0:	3083ffcc 	andi	r2,r6,4095
    5dd4:	103f181e 	bne	r2,zero,5a38 <__alt_data_end+0xfffe5a38>
    5dd8:	99000217 	ldw	r4,8(r19)
    5ddc:	b545883a 	add	r2,r22,r21
    5de0:	10800054 	ori	r2,r2,1
    5de4:	20800115 	stw	r2,4(r4)
    5de8:	003f3e06 	br	5ae4 <__alt_data_end+0xfffe5ae4>
    5dec:	01003f84 	movi	r4,254
    5df0:	02001fc4 	movi	r8,127
    5df4:	01c01f84 	movi	r7,126
    5df8:	003e4006 	br	56fc <__alt_data_end+0xfffe56fc>
    5dfc:	00800074 	movhi	r2,1
    5e00:	1085a604 	addi	r2,r2,5784
    5e04:	15000015 	stw	r20,0(r2)
    5e08:	003f1106 	br	5a50 <__alt_data_end+0xfffe5a50>
    5e0c:	00800044 	movi	r2,1
    5e10:	002b883a 	mov	r21,zero
    5e14:	003f1f06 	br	5a94 <__alt_data_end+0xfffe5a94>
    5e18:	81400204 	addi	r5,r16,8
    5e1c:	9009883a 	mov	r4,r18
    5e20:	0004a8c0 	call	4a8c <_free_r>
    5e24:	00800074 	movhi	r2,1
    5e28:	108c7b04 	addi	r2,r2,12780
    5e2c:	10c00017 	ldw	r3,0(r2)
    5e30:	003f2c06 	br	5ae4 <__alt_data_end+0xfffe5ae4>
    5e34:	00c05504 	movi	r3,340
    5e38:	18800536 	bltu	r3,r2,5e50 <_malloc_r+0x7cc>
    5e3c:	3804d3fa 	srli	r2,r7,15
    5e40:	11401e04 	addi	r5,r2,120
    5e44:	10c01dc4 	addi	r3,r2,119
    5e48:	294b883a 	add	r5,r5,r5
    5e4c:	003f5606 	br	5ba8 <__alt_data_end+0xfffe5ba8>
    5e50:	00c15504 	movi	r3,1364
    5e54:	18800536 	bltu	r3,r2,5e6c <_malloc_r+0x7e8>
    5e58:	3804d4ba 	srli	r2,r7,18
    5e5c:	11401f44 	addi	r5,r2,125
    5e60:	10c01f04 	addi	r3,r2,124
    5e64:	294b883a 	add	r5,r5,r5
    5e68:	003f4f06 	br	5ba8 <__alt_data_end+0xfffe5ba8>
    5e6c:	01403f84 	movi	r5,254
    5e70:	00c01f84 	movi	r3,126
    5e74:	003f4c06 	br	5ba8 <__alt_data_end+0xfffe5ba8>
    5e78:	98800117 	ldw	r2,4(r19)
    5e7c:	003fa006 	br	5d00 <__alt_data_end+0xfffe5d00>
    5e80:	8808d0fa 	srli	r4,r17,3
    5e84:	20800044 	addi	r2,r4,1
    5e88:	1085883a 	add	r2,r2,r2
    5e8c:	003e9006 	br	58d0 <__alt_data_end+0xfffe58d0>

00005e90 <memchr>:
    5e90:	208000cc 	andi	r2,r4,3
    5e94:	280f883a 	mov	r7,r5
    5e98:	10003426 	beq	r2,zero,5f6c <memchr+0xdc>
    5e9c:	30bfffc4 	addi	r2,r6,-1
    5ea0:	30001a26 	beq	r6,zero,5f0c <memchr+0x7c>
    5ea4:	20c00003 	ldbu	r3,0(r4)
    5ea8:	29803fcc 	andi	r6,r5,255
    5eac:	30c0051e 	bne	r6,r3,5ec4 <memchr+0x34>
    5eb0:	00001806 	br	5f14 <memchr+0x84>
    5eb4:	10001526 	beq	r2,zero,5f0c <memchr+0x7c>
    5eb8:	20c00003 	ldbu	r3,0(r4)
    5ebc:	10bfffc4 	addi	r2,r2,-1
    5ec0:	30c01426 	beq	r6,r3,5f14 <memchr+0x84>
    5ec4:	21000044 	addi	r4,r4,1
    5ec8:	20c000cc 	andi	r3,r4,3
    5ecc:	183ff91e 	bne	r3,zero,5eb4 <__alt_data_end+0xfffe5eb4>
    5ed0:	020000c4 	movi	r8,3
    5ed4:	40801136 	bltu	r8,r2,5f1c <memchr+0x8c>
    5ed8:	10000c26 	beq	r2,zero,5f0c <memchr+0x7c>
    5edc:	20c00003 	ldbu	r3,0(r4)
    5ee0:	29403fcc 	andi	r5,r5,255
    5ee4:	28c00b26 	beq	r5,r3,5f14 <memchr+0x84>
    5ee8:	20c00044 	addi	r3,r4,1
    5eec:	39803fcc 	andi	r6,r7,255
    5ef0:	2089883a 	add	r4,r4,r2
    5ef4:	00000306 	br	5f04 <memchr+0x74>
    5ef8:	18c00044 	addi	r3,r3,1
    5efc:	197fffc3 	ldbu	r5,-1(r3)
    5f00:	31400526 	beq	r6,r5,5f18 <memchr+0x88>
    5f04:	1805883a 	mov	r2,r3
    5f08:	20fffb1e 	bne	r4,r3,5ef8 <__alt_data_end+0xfffe5ef8>
    5f0c:	0005883a 	mov	r2,zero
    5f10:	f800283a 	ret
    5f14:	2005883a 	mov	r2,r4
    5f18:	f800283a 	ret
    5f1c:	28c03fcc 	andi	r3,r5,255
    5f20:	1812923a 	slli	r9,r3,8
    5f24:	02ffbff4 	movhi	r11,65279
    5f28:	02a02074 	movhi	r10,32897
    5f2c:	48d2b03a 	or	r9,r9,r3
    5f30:	4806943a 	slli	r3,r9,16
    5f34:	5affbfc4 	addi	r11,r11,-257
    5f38:	52a02004 	addi	r10,r10,-32640
    5f3c:	48d2b03a 	or	r9,r9,r3
    5f40:	20c00017 	ldw	r3,0(r4)
    5f44:	48c6f03a 	xor	r3,r9,r3
    5f48:	1acd883a 	add	r6,r3,r11
    5f4c:	00c6303a 	nor	r3,zero,r3
    5f50:	30c6703a 	and	r3,r6,r3
    5f54:	1a86703a 	and	r3,r3,r10
    5f58:	183fe01e 	bne	r3,zero,5edc <__alt_data_end+0xfffe5edc>
    5f5c:	10bfff04 	addi	r2,r2,-4
    5f60:	21000104 	addi	r4,r4,4
    5f64:	40bff636 	bltu	r8,r2,5f40 <__alt_data_end+0xfffe5f40>
    5f68:	003fdb06 	br	5ed8 <__alt_data_end+0xfffe5ed8>
    5f6c:	3005883a 	mov	r2,r6
    5f70:	003fd706 	br	5ed0 <__alt_data_end+0xfffe5ed0>

00005f74 <memcpy>:
    5f74:	defffd04 	addi	sp,sp,-12
    5f78:	dfc00215 	stw	ra,8(sp)
    5f7c:	dc400115 	stw	r17,4(sp)
    5f80:	dc000015 	stw	r16,0(sp)
    5f84:	00c003c4 	movi	r3,15
    5f88:	2005883a 	mov	r2,r4
    5f8c:	1980452e 	bgeu	r3,r6,60a4 <memcpy+0x130>
    5f90:	2906b03a 	or	r3,r5,r4
    5f94:	18c000cc 	andi	r3,r3,3
    5f98:	1800441e 	bne	r3,zero,60ac <memcpy+0x138>
    5f9c:	347ffc04 	addi	r17,r6,-16
    5fa0:	8822d13a 	srli	r17,r17,4
    5fa4:	28c00104 	addi	r3,r5,4
    5fa8:	23400104 	addi	r13,r4,4
    5fac:	8820913a 	slli	r16,r17,4
    5fb0:	2b000204 	addi	r12,r5,8
    5fb4:	22c00204 	addi	r11,r4,8
    5fb8:	84000504 	addi	r16,r16,20
    5fbc:	2a800304 	addi	r10,r5,12
    5fc0:	22400304 	addi	r9,r4,12
    5fc4:	2c21883a 	add	r16,r5,r16
    5fc8:	2811883a 	mov	r8,r5
    5fcc:	200f883a 	mov	r7,r4
    5fd0:	41000017 	ldw	r4,0(r8)
    5fd4:	1fc00017 	ldw	ra,0(r3)
    5fd8:	63c00017 	ldw	r15,0(r12)
    5fdc:	39000015 	stw	r4,0(r7)
    5fe0:	53800017 	ldw	r14,0(r10)
    5fe4:	6fc00015 	stw	ra,0(r13)
    5fe8:	5bc00015 	stw	r15,0(r11)
    5fec:	4b800015 	stw	r14,0(r9)
    5ff0:	18c00404 	addi	r3,r3,16
    5ff4:	39c00404 	addi	r7,r7,16
    5ff8:	42000404 	addi	r8,r8,16
    5ffc:	6b400404 	addi	r13,r13,16
    6000:	63000404 	addi	r12,r12,16
    6004:	5ac00404 	addi	r11,r11,16
    6008:	52800404 	addi	r10,r10,16
    600c:	4a400404 	addi	r9,r9,16
    6010:	1c3fef1e 	bne	r3,r16,5fd0 <__alt_data_end+0xfffe5fd0>
    6014:	89c00044 	addi	r7,r17,1
    6018:	380e913a 	slli	r7,r7,4
    601c:	310003cc 	andi	r4,r6,15
    6020:	02c000c4 	movi	r11,3
    6024:	11c7883a 	add	r3,r2,r7
    6028:	29cb883a 	add	r5,r5,r7
    602c:	5900212e 	bgeu	r11,r4,60b4 <memcpy+0x140>
    6030:	1813883a 	mov	r9,r3
    6034:	2811883a 	mov	r8,r5
    6038:	200f883a 	mov	r7,r4
    603c:	42800017 	ldw	r10,0(r8)
    6040:	4a400104 	addi	r9,r9,4
    6044:	39ffff04 	addi	r7,r7,-4
    6048:	4abfff15 	stw	r10,-4(r9)
    604c:	42000104 	addi	r8,r8,4
    6050:	59fffa36 	bltu	r11,r7,603c <__alt_data_end+0xfffe603c>
    6054:	213fff04 	addi	r4,r4,-4
    6058:	2008d0ba 	srli	r4,r4,2
    605c:	318000cc 	andi	r6,r6,3
    6060:	21000044 	addi	r4,r4,1
    6064:	2109883a 	add	r4,r4,r4
    6068:	2109883a 	add	r4,r4,r4
    606c:	1907883a 	add	r3,r3,r4
    6070:	290b883a 	add	r5,r5,r4
    6074:	30000626 	beq	r6,zero,6090 <memcpy+0x11c>
    6078:	198d883a 	add	r6,r3,r6
    607c:	29c00003 	ldbu	r7,0(r5)
    6080:	18c00044 	addi	r3,r3,1
    6084:	29400044 	addi	r5,r5,1
    6088:	19ffffc5 	stb	r7,-1(r3)
    608c:	19bffb1e 	bne	r3,r6,607c <__alt_data_end+0xfffe607c>
    6090:	dfc00217 	ldw	ra,8(sp)
    6094:	dc400117 	ldw	r17,4(sp)
    6098:	dc000017 	ldw	r16,0(sp)
    609c:	dec00304 	addi	sp,sp,12
    60a0:	f800283a 	ret
    60a4:	2007883a 	mov	r3,r4
    60a8:	003ff206 	br	6074 <__alt_data_end+0xfffe6074>
    60ac:	2007883a 	mov	r3,r4
    60b0:	003ff106 	br	6078 <__alt_data_end+0xfffe6078>
    60b4:	200d883a 	mov	r6,r4
    60b8:	003fee06 	br	6074 <__alt_data_end+0xfffe6074>

000060bc <memmove>:
    60bc:	2005883a 	mov	r2,r4
    60c0:	29000b2e 	bgeu	r5,r4,60f0 <memmove+0x34>
    60c4:	298f883a 	add	r7,r5,r6
    60c8:	21c0092e 	bgeu	r4,r7,60f0 <memmove+0x34>
    60cc:	2187883a 	add	r3,r4,r6
    60d0:	198bc83a 	sub	r5,r3,r6
    60d4:	30004826 	beq	r6,zero,61f8 <memmove+0x13c>
    60d8:	39ffffc4 	addi	r7,r7,-1
    60dc:	39000003 	ldbu	r4,0(r7)
    60e0:	18ffffc4 	addi	r3,r3,-1
    60e4:	19000005 	stb	r4,0(r3)
    60e8:	28fffb1e 	bne	r5,r3,60d8 <__alt_data_end+0xfffe60d8>
    60ec:	f800283a 	ret
    60f0:	00c003c4 	movi	r3,15
    60f4:	1980412e 	bgeu	r3,r6,61fc <memmove+0x140>
    60f8:	2886b03a 	or	r3,r5,r2
    60fc:	18c000cc 	andi	r3,r3,3
    6100:	1800401e 	bne	r3,zero,6204 <memmove+0x148>
    6104:	33fffc04 	addi	r15,r6,-16
    6108:	781ed13a 	srli	r15,r15,4
    610c:	28c00104 	addi	r3,r5,4
    6110:	13400104 	addi	r13,r2,4
    6114:	781c913a 	slli	r14,r15,4
    6118:	2b000204 	addi	r12,r5,8
    611c:	12c00204 	addi	r11,r2,8
    6120:	73800504 	addi	r14,r14,20
    6124:	2a800304 	addi	r10,r5,12
    6128:	12400304 	addi	r9,r2,12
    612c:	2b9d883a 	add	r14,r5,r14
    6130:	2811883a 	mov	r8,r5
    6134:	100f883a 	mov	r7,r2
    6138:	41000017 	ldw	r4,0(r8)
    613c:	39c00404 	addi	r7,r7,16
    6140:	18c00404 	addi	r3,r3,16
    6144:	393ffc15 	stw	r4,-16(r7)
    6148:	193ffc17 	ldw	r4,-16(r3)
    614c:	6b400404 	addi	r13,r13,16
    6150:	5ac00404 	addi	r11,r11,16
    6154:	693ffc15 	stw	r4,-16(r13)
    6158:	61000017 	ldw	r4,0(r12)
    615c:	4a400404 	addi	r9,r9,16
    6160:	42000404 	addi	r8,r8,16
    6164:	593ffc15 	stw	r4,-16(r11)
    6168:	51000017 	ldw	r4,0(r10)
    616c:	63000404 	addi	r12,r12,16
    6170:	52800404 	addi	r10,r10,16
    6174:	493ffc15 	stw	r4,-16(r9)
    6178:	1bbfef1e 	bne	r3,r14,6138 <__alt_data_end+0xfffe6138>
    617c:	79000044 	addi	r4,r15,1
    6180:	2008913a 	slli	r4,r4,4
    6184:	328003cc 	andi	r10,r6,15
    6188:	02c000c4 	movi	r11,3
    618c:	1107883a 	add	r3,r2,r4
    6190:	290b883a 	add	r5,r5,r4
    6194:	5a801e2e 	bgeu	r11,r10,6210 <memmove+0x154>
    6198:	1813883a 	mov	r9,r3
    619c:	2811883a 	mov	r8,r5
    61a0:	500f883a 	mov	r7,r10
    61a4:	41000017 	ldw	r4,0(r8)
    61a8:	4a400104 	addi	r9,r9,4
    61ac:	39ffff04 	addi	r7,r7,-4
    61b0:	493fff15 	stw	r4,-4(r9)
    61b4:	42000104 	addi	r8,r8,4
    61b8:	59fffa36 	bltu	r11,r7,61a4 <__alt_data_end+0xfffe61a4>
    61bc:	513fff04 	addi	r4,r10,-4
    61c0:	2008d0ba 	srli	r4,r4,2
    61c4:	318000cc 	andi	r6,r6,3
    61c8:	21000044 	addi	r4,r4,1
    61cc:	2109883a 	add	r4,r4,r4
    61d0:	2109883a 	add	r4,r4,r4
    61d4:	1907883a 	add	r3,r3,r4
    61d8:	290b883a 	add	r5,r5,r4
    61dc:	30000b26 	beq	r6,zero,620c <memmove+0x150>
    61e0:	198d883a 	add	r6,r3,r6
    61e4:	29c00003 	ldbu	r7,0(r5)
    61e8:	18c00044 	addi	r3,r3,1
    61ec:	29400044 	addi	r5,r5,1
    61f0:	19ffffc5 	stb	r7,-1(r3)
    61f4:	19bffb1e 	bne	r3,r6,61e4 <__alt_data_end+0xfffe61e4>
    61f8:	f800283a 	ret
    61fc:	1007883a 	mov	r3,r2
    6200:	003ff606 	br	61dc <__alt_data_end+0xfffe61dc>
    6204:	1007883a 	mov	r3,r2
    6208:	003ff506 	br	61e0 <__alt_data_end+0xfffe61e0>
    620c:	f800283a 	ret
    6210:	500d883a 	mov	r6,r10
    6214:	003ff106 	br	61dc <__alt_data_end+0xfffe61dc>

00006218 <memset>:
    6218:	20c000cc 	andi	r3,r4,3
    621c:	2005883a 	mov	r2,r4
    6220:	18004426 	beq	r3,zero,6334 <memset+0x11c>
    6224:	31ffffc4 	addi	r7,r6,-1
    6228:	30004026 	beq	r6,zero,632c <memset+0x114>
    622c:	2813883a 	mov	r9,r5
    6230:	200d883a 	mov	r6,r4
    6234:	2007883a 	mov	r3,r4
    6238:	00000406 	br	624c <memset+0x34>
    623c:	3a3fffc4 	addi	r8,r7,-1
    6240:	31800044 	addi	r6,r6,1
    6244:	38003926 	beq	r7,zero,632c <memset+0x114>
    6248:	400f883a 	mov	r7,r8
    624c:	18c00044 	addi	r3,r3,1
    6250:	32400005 	stb	r9,0(r6)
    6254:	1a0000cc 	andi	r8,r3,3
    6258:	403ff81e 	bne	r8,zero,623c <__alt_data_end+0xfffe623c>
    625c:	010000c4 	movi	r4,3
    6260:	21c02d2e 	bgeu	r4,r7,6318 <memset+0x100>
    6264:	29003fcc 	andi	r4,r5,255
    6268:	200c923a 	slli	r6,r4,8
    626c:	3108b03a 	or	r4,r6,r4
    6270:	200c943a 	slli	r6,r4,16
    6274:	218cb03a 	or	r6,r4,r6
    6278:	010003c4 	movi	r4,15
    627c:	21c0182e 	bgeu	r4,r7,62e0 <memset+0xc8>
    6280:	3b3ffc04 	addi	r12,r7,-16
    6284:	6018d13a 	srli	r12,r12,4
    6288:	1a000104 	addi	r8,r3,4
    628c:	1ac00204 	addi	r11,r3,8
    6290:	6008913a 	slli	r4,r12,4
    6294:	1a800304 	addi	r10,r3,12
    6298:	1813883a 	mov	r9,r3
    629c:	21000504 	addi	r4,r4,20
    62a0:	1909883a 	add	r4,r3,r4
    62a4:	49800015 	stw	r6,0(r9)
    62a8:	41800015 	stw	r6,0(r8)
    62ac:	59800015 	stw	r6,0(r11)
    62b0:	51800015 	stw	r6,0(r10)
    62b4:	42000404 	addi	r8,r8,16
    62b8:	4a400404 	addi	r9,r9,16
    62bc:	5ac00404 	addi	r11,r11,16
    62c0:	52800404 	addi	r10,r10,16
    62c4:	413ff71e 	bne	r8,r4,62a4 <__alt_data_end+0xfffe62a4>
    62c8:	63000044 	addi	r12,r12,1
    62cc:	6018913a 	slli	r12,r12,4
    62d0:	39c003cc 	andi	r7,r7,15
    62d4:	010000c4 	movi	r4,3
    62d8:	1b07883a 	add	r3,r3,r12
    62dc:	21c00e2e 	bgeu	r4,r7,6318 <memset+0x100>
    62e0:	1813883a 	mov	r9,r3
    62e4:	3811883a 	mov	r8,r7
    62e8:	010000c4 	movi	r4,3
    62ec:	49800015 	stw	r6,0(r9)
    62f0:	423fff04 	addi	r8,r8,-4
    62f4:	4a400104 	addi	r9,r9,4
    62f8:	223ffc36 	bltu	r4,r8,62ec <__alt_data_end+0xfffe62ec>
    62fc:	393fff04 	addi	r4,r7,-4
    6300:	2008d0ba 	srli	r4,r4,2
    6304:	39c000cc 	andi	r7,r7,3
    6308:	21000044 	addi	r4,r4,1
    630c:	2109883a 	add	r4,r4,r4
    6310:	2109883a 	add	r4,r4,r4
    6314:	1907883a 	add	r3,r3,r4
    6318:	38000526 	beq	r7,zero,6330 <memset+0x118>
    631c:	19cf883a 	add	r7,r3,r7
    6320:	19400005 	stb	r5,0(r3)
    6324:	18c00044 	addi	r3,r3,1
    6328:	38fffd1e 	bne	r7,r3,6320 <__alt_data_end+0xfffe6320>
    632c:	f800283a 	ret
    6330:	f800283a 	ret
    6334:	2007883a 	mov	r3,r4
    6338:	300f883a 	mov	r7,r6
    633c:	003fc706 	br	625c <__alt_data_end+0xfffe625c>

00006340 <_Balloc>:
    6340:	20801317 	ldw	r2,76(r4)
    6344:	defffc04 	addi	sp,sp,-16
    6348:	dc400115 	stw	r17,4(sp)
    634c:	dc000015 	stw	r16,0(sp)
    6350:	dfc00315 	stw	ra,12(sp)
    6354:	dc800215 	stw	r18,8(sp)
    6358:	2023883a 	mov	r17,r4
    635c:	2821883a 	mov	r16,r5
    6360:	10000f26 	beq	r2,zero,63a0 <_Balloc+0x60>
    6364:	8407883a 	add	r3,r16,r16
    6368:	18c7883a 	add	r3,r3,r3
    636c:	10c7883a 	add	r3,r2,r3
    6370:	18800017 	ldw	r2,0(r3)
    6374:	10001126 	beq	r2,zero,63bc <_Balloc+0x7c>
    6378:	11000017 	ldw	r4,0(r2)
    637c:	19000015 	stw	r4,0(r3)
    6380:	10000415 	stw	zero,16(r2)
    6384:	10000315 	stw	zero,12(r2)
    6388:	dfc00317 	ldw	ra,12(sp)
    638c:	dc800217 	ldw	r18,8(sp)
    6390:	dc400117 	ldw	r17,4(sp)
    6394:	dc000017 	ldw	r16,0(sp)
    6398:	dec00404 	addi	sp,sp,16
    639c:	f800283a 	ret
    63a0:	01800844 	movi	r6,33
    63a4:	01400104 	movi	r5,4
    63a8:	00093e80 	call	93e8 <_calloc_r>
    63ac:	88801315 	stw	r2,76(r17)
    63b0:	103fec1e 	bne	r2,zero,6364 <__alt_data_end+0xfffe6364>
    63b4:	0005883a 	mov	r2,zero
    63b8:	003ff306 	br	6388 <__alt_data_end+0xfffe6388>
    63bc:	01400044 	movi	r5,1
    63c0:	2c24983a 	sll	r18,r5,r16
    63c4:	8809883a 	mov	r4,r17
    63c8:	91800144 	addi	r6,r18,5
    63cc:	318d883a 	add	r6,r6,r6
    63d0:	318d883a 	add	r6,r6,r6
    63d4:	00093e80 	call	93e8 <_calloc_r>
    63d8:	103ff626 	beq	r2,zero,63b4 <__alt_data_end+0xfffe63b4>
    63dc:	14000115 	stw	r16,4(r2)
    63e0:	14800215 	stw	r18,8(r2)
    63e4:	003fe606 	br	6380 <__alt_data_end+0xfffe6380>

000063e8 <_Bfree>:
    63e8:	28000826 	beq	r5,zero,640c <_Bfree+0x24>
    63ec:	28c00117 	ldw	r3,4(r5)
    63f0:	20801317 	ldw	r2,76(r4)
    63f4:	18c7883a 	add	r3,r3,r3
    63f8:	18c7883a 	add	r3,r3,r3
    63fc:	10c5883a 	add	r2,r2,r3
    6400:	10c00017 	ldw	r3,0(r2)
    6404:	28c00015 	stw	r3,0(r5)
    6408:	11400015 	stw	r5,0(r2)
    640c:	f800283a 	ret

00006410 <__multadd>:
    6410:	defff704 	addi	sp,sp,-36
    6414:	dc800215 	stw	r18,8(sp)
    6418:	2c800417 	ldw	r18,16(r5)
    641c:	dd800615 	stw	r22,24(sp)
    6420:	dd400515 	stw	r21,20(sp)
    6424:	dd000415 	stw	r20,16(sp)
    6428:	dcc00315 	stw	r19,12(sp)
    642c:	dc400115 	stw	r17,4(sp)
    6430:	dc000015 	stw	r16,0(sp)
    6434:	dfc00815 	stw	ra,32(sp)
    6438:	ddc00715 	stw	r23,28(sp)
    643c:	2827883a 	mov	r19,r5
    6440:	2029883a 	mov	r20,r4
    6444:	3023883a 	mov	r17,r6
    6448:	3821883a 	mov	r16,r7
    644c:	2d400504 	addi	r21,r5,20
    6450:	002d883a 	mov	r22,zero
    6454:	adc00017 	ldw	r23,0(r21)
    6458:	880b883a 	mov	r5,r17
    645c:	ad400104 	addi	r21,r21,4
    6460:	b93fffcc 	andi	r4,r23,65535
    6464:	000a9f40 	call	a9f4 <__mulsi3>
    6468:	b808d43a 	srli	r4,r23,16
    646c:	880b883a 	mov	r5,r17
    6470:	1421883a 	add	r16,r2,r16
    6474:	000a9f40 	call	a9f4 <__mulsi3>
    6478:	800ed43a 	srli	r7,r16,16
    647c:	80ffffcc 	andi	r3,r16,65535
    6480:	b5800044 	addi	r22,r22,1
    6484:	11c5883a 	add	r2,r2,r7
    6488:	100e943a 	slli	r7,r2,16
    648c:	1020d43a 	srli	r16,r2,16
    6490:	38c7883a 	add	r3,r7,r3
    6494:	a8ffff15 	stw	r3,-4(r21)
    6498:	b4bfee16 	blt	r22,r18,6454 <__alt_data_end+0xfffe6454>
    649c:	80000926 	beq	r16,zero,64c4 <__multadd+0xb4>
    64a0:	98800217 	ldw	r2,8(r19)
    64a4:	9080130e 	bge	r18,r2,64f4 <__multadd+0xe4>
    64a8:	90800144 	addi	r2,r18,5
    64ac:	1085883a 	add	r2,r2,r2
    64b0:	1085883a 	add	r2,r2,r2
    64b4:	9885883a 	add	r2,r19,r2
    64b8:	14000015 	stw	r16,0(r2)
    64bc:	94800044 	addi	r18,r18,1
    64c0:	9c800415 	stw	r18,16(r19)
    64c4:	9805883a 	mov	r2,r19
    64c8:	dfc00817 	ldw	ra,32(sp)
    64cc:	ddc00717 	ldw	r23,28(sp)
    64d0:	dd800617 	ldw	r22,24(sp)
    64d4:	dd400517 	ldw	r21,20(sp)
    64d8:	dd000417 	ldw	r20,16(sp)
    64dc:	dcc00317 	ldw	r19,12(sp)
    64e0:	dc800217 	ldw	r18,8(sp)
    64e4:	dc400117 	ldw	r17,4(sp)
    64e8:	dc000017 	ldw	r16,0(sp)
    64ec:	dec00904 	addi	sp,sp,36
    64f0:	f800283a 	ret
    64f4:	99400117 	ldw	r5,4(r19)
    64f8:	a009883a 	mov	r4,r20
    64fc:	29400044 	addi	r5,r5,1
    6500:	00063400 	call	6340 <_Balloc>
    6504:	99800417 	ldw	r6,16(r19)
    6508:	99400304 	addi	r5,r19,12
    650c:	11000304 	addi	r4,r2,12
    6510:	31800084 	addi	r6,r6,2
    6514:	318d883a 	add	r6,r6,r6
    6518:	318d883a 	add	r6,r6,r6
    651c:	1023883a 	mov	r17,r2
    6520:	0005f740 	call	5f74 <memcpy>
    6524:	98000a26 	beq	r19,zero,6550 <__multadd+0x140>
    6528:	98c00117 	ldw	r3,4(r19)
    652c:	a0801317 	ldw	r2,76(r20)
    6530:	18c7883a 	add	r3,r3,r3
    6534:	18c7883a 	add	r3,r3,r3
    6538:	10c5883a 	add	r2,r2,r3
    653c:	10c00017 	ldw	r3,0(r2)
    6540:	98c00015 	stw	r3,0(r19)
    6544:	14c00015 	stw	r19,0(r2)
    6548:	8827883a 	mov	r19,r17
    654c:	003fd606 	br	64a8 <__alt_data_end+0xfffe64a8>
    6550:	8827883a 	mov	r19,r17
    6554:	003fd406 	br	64a8 <__alt_data_end+0xfffe64a8>

00006558 <__s2b>:
    6558:	defff904 	addi	sp,sp,-28
    655c:	dc400115 	stw	r17,4(sp)
    6560:	dc000015 	stw	r16,0(sp)
    6564:	2023883a 	mov	r17,r4
    6568:	2821883a 	mov	r16,r5
    656c:	39000204 	addi	r4,r7,8
    6570:	01400244 	movi	r5,9
    6574:	dcc00315 	stw	r19,12(sp)
    6578:	dc800215 	stw	r18,8(sp)
    657c:	dfc00615 	stw	ra,24(sp)
    6580:	dd400515 	stw	r21,20(sp)
    6584:	dd000415 	stw	r20,16(sp)
    6588:	3825883a 	mov	r18,r7
    658c:	3027883a 	mov	r19,r6
    6590:	000a8400 	call	a840 <__divsi3>
    6594:	00c00044 	movi	r3,1
    6598:	000b883a 	mov	r5,zero
    659c:	1880030e 	bge	r3,r2,65ac <__s2b+0x54>
    65a0:	18c7883a 	add	r3,r3,r3
    65a4:	29400044 	addi	r5,r5,1
    65a8:	18bffd16 	blt	r3,r2,65a0 <__alt_data_end+0xfffe65a0>
    65ac:	8809883a 	mov	r4,r17
    65b0:	00063400 	call	6340 <_Balloc>
    65b4:	d8c00717 	ldw	r3,28(sp)
    65b8:	10c00515 	stw	r3,20(r2)
    65bc:	00c00044 	movi	r3,1
    65c0:	10c00415 	stw	r3,16(r2)
    65c4:	00c00244 	movi	r3,9
    65c8:	1cc0210e 	bge	r3,r19,6650 <__s2b+0xf8>
    65cc:	80eb883a 	add	r21,r16,r3
    65d0:	a829883a 	mov	r20,r21
    65d4:	84e1883a 	add	r16,r16,r19
    65d8:	a1c00007 	ldb	r7,0(r20)
    65dc:	01800284 	movi	r6,10
    65e0:	a5000044 	addi	r20,r20,1
    65e4:	100b883a 	mov	r5,r2
    65e8:	39fff404 	addi	r7,r7,-48
    65ec:	8809883a 	mov	r4,r17
    65f0:	00064100 	call	6410 <__multadd>
    65f4:	a43ff81e 	bne	r20,r16,65d8 <__alt_data_end+0xfffe65d8>
    65f8:	ace1883a 	add	r16,r21,r19
    65fc:	843ffe04 	addi	r16,r16,-8
    6600:	9c800a0e 	bge	r19,r18,662c <__s2b+0xd4>
    6604:	94e5c83a 	sub	r18,r18,r19
    6608:	84a5883a 	add	r18,r16,r18
    660c:	81c00007 	ldb	r7,0(r16)
    6610:	01800284 	movi	r6,10
    6614:	84000044 	addi	r16,r16,1
    6618:	100b883a 	mov	r5,r2
    661c:	39fff404 	addi	r7,r7,-48
    6620:	8809883a 	mov	r4,r17
    6624:	00064100 	call	6410 <__multadd>
    6628:	84bff81e 	bne	r16,r18,660c <__alt_data_end+0xfffe660c>
    662c:	dfc00617 	ldw	ra,24(sp)
    6630:	dd400517 	ldw	r21,20(sp)
    6634:	dd000417 	ldw	r20,16(sp)
    6638:	dcc00317 	ldw	r19,12(sp)
    663c:	dc800217 	ldw	r18,8(sp)
    6640:	dc400117 	ldw	r17,4(sp)
    6644:	dc000017 	ldw	r16,0(sp)
    6648:	dec00704 	addi	sp,sp,28
    664c:	f800283a 	ret
    6650:	84000284 	addi	r16,r16,10
    6654:	1827883a 	mov	r19,r3
    6658:	003fe906 	br	6600 <__alt_data_end+0xfffe6600>

0000665c <__hi0bits>:
    665c:	20bfffec 	andhi	r2,r4,65535
    6660:	1000141e 	bne	r2,zero,66b4 <__hi0bits+0x58>
    6664:	2008943a 	slli	r4,r4,16
    6668:	00800404 	movi	r2,16
    666c:	20ffc02c 	andhi	r3,r4,65280
    6670:	1800021e 	bne	r3,zero,667c <__hi0bits+0x20>
    6674:	2008923a 	slli	r4,r4,8
    6678:	10800204 	addi	r2,r2,8
    667c:	20fc002c 	andhi	r3,r4,61440
    6680:	1800021e 	bne	r3,zero,668c <__hi0bits+0x30>
    6684:	2008913a 	slli	r4,r4,4
    6688:	10800104 	addi	r2,r2,4
    668c:	20f0002c 	andhi	r3,r4,49152
    6690:	1800031e 	bne	r3,zero,66a0 <__hi0bits+0x44>
    6694:	2109883a 	add	r4,r4,r4
    6698:	10800084 	addi	r2,r2,2
    669c:	2109883a 	add	r4,r4,r4
    66a0:	20000316 	blt	r4,zero,66b0 <__hi0bits+0x54>
    66a4:	2110002c 	andhi	r4,r4,16384
    66a8:	2000041e 	bne	r4,zero,66bc <__hi0bits+0x60>
    66ac:	00800804 	movi	r2,32
    66b0:	f800283a 	ret
    66b4:	0005883a 	mov	r2,zero
    66b8:	003fec06 	br	666c <__alt_data_end+0xfffe666c>
    66bc:	10800044 	addi	r2,r2,1
    66c0:	f800283a 	ret

000066c4 <__lo0bits>:
    66c4:	20c00017 	ldw	r3,0(r4)
    66c8:	188001cc 	andi	r2,r3,7
    66cc:	10000826 	beq	r2,zero,66f0 <__lo0bits+0x2c>
    66d0:	1880004c 	andi	r2,r3,1
    66d4:	1000211e 	bne	r2,zero,675c <__lo0bits+0x98>
    66d8:	1880008c 	andi	r2,r3,2
    66dc:	1000211e 	bne	r2,zero,6764 <__lo0bits+0xa0>
    66e0:	1806d0ba 	srli	r3,r3,2
    66e4:	00800084 	movi	r2,2
    66e8:	20c00015 	stw	r3,0(r4)
    66ec:	f800283a 	ret
    66f0:	18bfffcc 	andi	r2,r3,65535
    66f4:	10001326 	beq	r2,zero,6744 <__lo0bits+0x80>
    66f8:	0005883a 	mov	r2,zero
    66fc:	19403fcc 	andi	r5,r3,255
    6700:	2800021e 	bne	r5,zero,670c <__lo0bits+0x48>
    6704:	1806d23a 	srli	r3,r3,8
    6708:	10800204 	addi	r2,r2,8
    670c:	194003cc 	andi	r5,r3,15
    6710:	2800021e 	bne	r5,zero,671c <__lo0bits+0x58>
    6714:	1806d13a 	srli	r3,r3,4
    6718:	10800104 	addi	r2,r2,4
    671c:	194000cc 	andi	r5,r3,3
    6720:	2800021e 	bne	r5,zero,672c <__lo0bits+0x68>
    6724:	1806d0ba 	srli	r3,r3,2
    6728:	10800084 	addi	r2,r2,2
    672c:	1940004c 	andi	r5,r3,1
    6730:	2800081e 	bne	r5,zero,6754 <__lo0bits+0x90>
    6734:	1806d07a 	srli	r3,r3,1
    6738:	1800051e 	bne	r3,zero,6750 <__lo0bits+0x8c>
    673c:	00800804 	movi	r2,32
    6740:	f800283a 	ret
    6744:	1806d43a 	srli	r3,r3,16
    6748:	00800404 	movi	r2,16
    674c:	003feb06 	br	66fc <__alt_data_end+0xfffe66fc>
    6750:	10800044 	addi	r2,r2,1
    6754:	20c00015 	stw	r3,0(r4)
    6758:	f800283a 	ret
    675c:	0005883a 	mov	r2,zero
    6760:	f800283a 	ret
    6764:	1806d07a 	srli	r3,r3,1
    6768:	00800044 	movi	r2,1
    676c:	20c00015 	stw	r3,0(r4)
    6770:	f800283a 	ret

00006774 <__i2b>:
    6774:	defffd04 	addi	sp,sp,-12
    6778:	dc000015 	stw	r16,0(sp)
    677c:	04000044 	movi	r16,1
    6780:	dc400115 	stw	r17,4(sp)
    6784:	2823883a 	mov	r17,r5
    6788:	800b883a 	mov	r5,r16
    678c:	dfc00215 	stw	ra,8(sp)
    6790:	00063400 	call	6340 <_Balloc>
    6794:	14400515 	stw	r17,20(r2)
    6798:	14000415 	stw	r16,16(r2)
    679c:	dfc00217 	ldw	ra,8(sp)
    67a0:	dc400117 	ldw	r17,4(sp)
    67a4:	dc000017 	ldw	r16,0(sp)
    67a8:	dec00304 	addi	sp,sp,12
    67ac:	f800283a 	ret

000067b0 <__multiply>:
    67b0:	deffef04 	addi	sp,sp,-68
    67b4:	dc400815 	stw	r17,32(sp)
    67b8:	dc000715 	stw	r16,28(sp)
    67bc:	34400417 	ldw	r17,16(r6)
    67c0:	2c000417 	ldw	r16,16(r5)
    67c4:	dd800d15 	stw	r22,52(sp)
    67c8:	dc800915 	stw	r18,36(sp)
    67cc:	dfc01015 	stw	ra,64(sp)
    67d0:	df000f15 	stw	fp,60(sp)
    67d4:	ddc00e15 	stw	r23,56(sp)
    67d8:	dd400c15 	stw	r21,48(sp)
    67dc:	dd000b15 	stw	r20,44(sp)
    67e0:	dcc00a15 	stw	r19,40(sp)
    67e4:	2825883a 	mov	r18,r5
    67e8:	302d883a 	mov	r22,r6
    67ec:	8440050e 	bge	r16,r17,6804 <__multiply+0x54>
    67f0:	8007883a 	mov	r3,r16
    67f4:	3025883a 	mov	r18,r6
    67f8:	8821883a 	mov	r16,r17
    67fc:	282d883a 	mov	r22,r5
    6800:	1823883a 	mov	r17,r3
    6804:	90800217 	ldw	r2,8(r18)
    6808:	8447883a 	add	r3,r16,r17
    680c:	d8c00215 	stw	r3,8(sp)
    6810:	91400117 	ldw	r5,4(r18)
    6814:	10c0010e 	bge	r2,r3,681c <__multiply+0x6c>
    6818:	29400044 	addi	r5,r5,1
    681c:	00063400 	call	6340 <_Balloc>
    6820:	d8c00217 	ldw	r3,8(sp)
    6824:	d8800615 	stw	r2,24(sp)
    6828:	18eb883a 	add	r21,r3,r3
    682c:	ad6b883a 	add	r21,r21,r21
    6830:	10c00504 	addi	r3,r2,20
    6834:	1d6b883a 	add	r21,r3,r21
    6838:	d8c00115 	stw	r3,4(sp)
    683c:	dd400315 	stw	r21,12(sp)
    6840:	1805883a 	mov	r2,r3
    6844:	1d40042e 	bgeu	r3,r21,6858 <__multiply+0xa8>
    6848:	d8c00317 	ldw	r3,12(sp)
    684c:	10000015 	stw	zero,0(r2)
    6850:	10800104 	addi	r2,r2,4
    6854:	10fffc36 	bltu	r2,r3,6848 <__alt_data_end+0xfffe6848>
    6858:	8c63883a 	add	r17,r17,r17
    685c:	b5800504 	addi	r22,r22,20
    6860:	8c63883a 	add	r17,r17,r17
    6864:	94800504 	addi	r18,r18,20
    6868:	8421883a 	add	r16,r16,r16
    686c:	b463883a 	add	r17,r22,r17
    6870:	8421883a 	add	r16,r16,r16
    6874:	dd800015 	stw	r22,0(sp)
    6878:	dc800415 	stw	r18,16(sp)
    687c:	dc400515 	stw	r17,20(sp)
    6880:	9429883a 	add	r20,r18,r16
    6884:	b4404f2e 	bgeu	r22,r17,69c4 <__multiply+0x214>
    6888:	d8c00017 	ldw	r3,0(sp)
    688c:	1c800017 	ldw	r18,0(r3)
    6890:	947fffcc 	andi	r17,r18,65535
    6894:	88001e26 	beq	r17,zero,6910 <__multiply+0x160>
    6898:	dd800117 	ldw	r22,4(sp)
    689c:	dd400417 	ldw	r21,16(sp)
    68a0:	0027883a 	mov	r19,zero
    68a4:	ac800017 	ldw	r18,0(r21)
    68a8:	b4000017 	ldw	r16,0(r22)
    68ac:	880b883a 	mov	r5,r17
    68b0:	913fffcc 	andi	r4,r18,65535
    68b4:	000a9f40 	call	a9f4 <__mulsi3>
    68b8:	9008d43a 	srli	r4,r18,16
    68bc:	84bfffcc 	andi	r18,r16,65535
    68c0:	1485883a 	add	r2,r2,r18
    68c4:	14e5883a 	add	r18,r2,r19
    68c8:	8020d43a 	srli	r16,r16,16
    68cc:	9026d43a 	srli	r19,r18,16
    68d0:	880b883a 	mov	r5,r17
    68d4:	000a9f40 	call	a9f4 <__mulsi3>
    68d8:	1405883a 	add	r2,r2,r16
    68dc:	14e1883a 	add	r16,r2,r19
    68e0:	90ffffcc 	andi	r3,r18,65535
    68e4:	8024943a 	slli	r18,r16,16
    68e8:	ad400104 	addi	r21,r21,4
    68ec:	b005883a 	mov	r2,r22
    68f0:	90c6b03a 	or	r3,r18,r3
    68f4:	b0c00015 	stw	r3,0(r22)
    68f8:	8026d43a 	srli	r19,r16,16
    68fc:	b5800104 	addi	r22,r22,4
    6900:	ad3fe836 	bltu	r21,r20,68a4 <__alt_data_end+0xfffe68a4>
    6904:	d8c00017 	ldw	r3,0(sp)
    6908:	14c00115 	stw	r19,4(r2)
    690c:	1c800017 	ldw	r18,0(r3)
    6910:	9024d43a 	srli	r18,r18,16
    6914:	90002226 	beq	r18,zero,69a0 <__multiply+0x1f0>
    6918:	d8c00117 	ldw	r3,4(sp)
    691c:	dd800417 	ldw	r22,16(sp)
    6920:	002f883a 	mov	r23,zero
    6924:	1f000017 	ldw	fp,0(r3)
    6928:	1823883a 	mov	r17,r3
    692c:	182b883a 	mov	r21,r3
    6930:	e021883a 	mov	r16,fp
    6934:	00000106 	br	693c <__multiply+0x18c>
    6938:	982b883a 	mov	r21,r19
    693c:	b100000b 	ldhu	r4,0(r22)
    6940:	8020d43a 	srli	r16,r16,16
    6944:	900b883a 	mov	r5,r18
    6948:	000a9f40 	call	a9f4 <__mulsi3>
    694c:	1405883a 	add	r2,r2,r16
    6950:	15ef883a 	add	r23,r2,r23
    6954:	b804943a 	slli	r2,r23,16
    6958:	e0ffffcc 	andi	r3,fp,65535
    695c:	8c400104 	addi	r17,r17,4
    6960:	10c6b03a 	or	r3,r2,r3
    6964:	88ffff15 	stw	r3,-4(r17)
    6968:	b5800104 	addi	r22,r22,4
    696c:	b13fff17 	ldw	r4,-4(r22)
    6970:	acc00104 	addi	r19,r21,4
    6974:	900b883a 	mov	r5,r18
    6978:	2008d43a 	srli	r4,r4,16
    697c:	9c000017 	ldw	r16,0(r19)
    6980:	000a9f40 	call	a9f4 <__mulsi3>
    6984:	b806d43a 	srli	r3,r23,16
    6988:	813fffcc 	andi	r4,r16,65535
    698c:	1105883a 	add	r2,r2,r4
    6990:	10f9883a 	add	fp,r2,r3
    6994:	e02ed43a 	srli	r23,fp,16
    6998:	b53fe736 	bltu	r22,r20,6938 <__alt_data_end+0xfffe6938>
    699c:	af000115 	stw	fp,4(r21)
    69a0:	d8c00017 	ldw	r3,0(sp)
    69a4:	d9000517 	ldw	r4,20(sp)
    69a8:	18c00104 	addi	r3,r3,4
    69ac:	d8c00015 	stw	r3,0(sp)
    69b0:	d8c00117 	ldw	r3,4(sp)
    69b4:	18c00104 	addi	r3,r3,4
    69b8:	d8c00115 	stw	r3,4(sp)
    69bc:	d8c00017 	ldw	r3,0(sp)
    69c0:	193fb136 	bltu	r3,r4,6888 <__alt_data_end+0xfffe6888>
    69c4:	d8c00217 	ldw	r3,8(sp)
    69c8:	00c00c0e 	bge	zero,r3,69fc <__multiply+0x24c>
    69cc:	d8c00317 	ldw	r3,12(sp)
    69d0:	18bfff17 	ldw	r2,-4(r3)
    69d4:	1d7fff04 	addi	r21,r3,-4
    69d8:	10000326 	beq	r2,zero,69e8 <__multiply+0x238>
    69dc:	00000706 	br	69fc <__multiply+0x24c>
    69e0:	a8800017 	ldw	r2,0(r21)
    69e4:	1000051e 	bne	r2,zero,69fc <__multiply+0x24c>
    69e8:	d8c00217 	ldw	r3,8(sp)
    69ec:	ad7fff04 	addi	r21,r21,-4
    69f0:	18ffffc4 	addi	r3,r3,-1
    69f4:	d8c00215 	stw	r3,8(sp)
    69f8:	183ff91e 	bne	r3,zero,69e0 <__alt_data_end+0xfffe69e0>
    69fc:	d8c00617 	ldw	r3,24(sp)
    6a00:	d9000217 	ldw	r4,8(sp)
    6a04:	1805883a 	mov	r2,r3
    6a08:	19000415 	stw	r4,16(r3)
    6a0c:	dfc01017 	ldw	ra,64(sp)
    6a10:	df000f17 	ldw	fp,60(sp)
    6a14:	ddc00e17 	ldw	r23,56(sp)
    6a18:	dd800d17 	ldw	r22,52(sp)
    6a1c:	dd400c17 	ldw	r21,48(sp)
    6a20:	dd000b17 	ldw	r20,44(sp)
    6a24:	dcc00a17 	ldw	r19,40(sp)
    6a28:	dc800917 	ldw	r18,36(sp)
    6a2c:	dc400817 	ldw	r17,32(sp)
    6a30:	dc000717 	ldw	r16,28(sp)
    6a34:	dec01104 	addi	sp,sp,68
    6a38:	f800283a 	ret

00006a3c <__pow5mult>:
    6a3c:	defffa04 	addi	sp,sp,-24
    6a40:	dcc00315 	stw	r19,12(sp)
    6a44:	dc000015 	stw	r16,0(sp)
    6a48:	dfc00515 	stw	ra,20(sp)
    6a4c:	dd000415 	stw	r20,16(sp)
    6a50:	dc800215 	stw	r18,8(sp)
    6a54:	dc400115 	stw	r17,4(sp)
    6a58:	308000cc 	andi	r2,r6,3
    6a5c:	3021883a 	mov	r16,r6
    6a60:	2027883a 	mov	r19,r4
    6a64:	10002f1e 	bne	r2,zero,6b24 <__pow5mult+0xe8>
    6a68:	2825883a 	mov	r18,r5
    6a6c:	8021d0ba 	srai	r16,r16,2
    6a70:	80001a26 	beq	r16,zero,6adc <__pow5mult+0xa0>
    6a74:	9c401217 	ldw	r17,72(r19)
    6a78:	8800061e 	bne	r17,zero,6a94 <__pow5mult+0x58>
    6a7c:	00003406 	br	6b50 <__pow5mult+0x114>
    6a80:	8021d07a 	srai	r16,r16,1
    6a84:	80001526 	beq	r16,zero,6adc <__pow5mult+0xa0>
    6a88:	88800017 	ldw	r2,0(r17)
    6a8c:	10001c26 	beq	r2,zero,6b00 <__pow5mult+0xc4>
    6a90:	1023883a 	mov	r17,r2
    6a94:	8080004c 	andi	r2,r16,1
    6a98:	103ff926 	beq	r2,zero,6a80 <__alt_data_end+0xfffe6a80>
    6a9c:	880d883a 	mov	r6,r17
    6aa0:	900b883a 	mov	r5,r18
    6aa4:	9809883a 	mov	r4,r19
    6aa8:	00067b00 	call	67b0 <__multiply>
    6aac:	90001b26 	beq	r18,zero,6b1c <__pow5mult+0xe0>
    6ab0:	91000117 	ldw	r4,4(r18)
    6ab4:	98c01317 	ldw	r3,76(r19)
    6ab8:	8021d07a 	srai	r16,r16,1
    6abc:	2109883a 	add	r4,r4,r4
    6ac0:	2109883a 	add	r4,r4,r4
    6ac4:	1907883a 	add	r3,r3,r4
    6ac8:	19000017 	ldw	r4,0(r3)
    6acc:	91000015 	stw	r4,0(r18)
    6ad0:	1c800015 	stw	r18,0(r3)
    6ad4:	1025883a 	mov	r18,r2
    6ad8:	803feb1e 	bne	r16,zero,6a88 <__alt_data_end+0xfffe6a88>
    6adc:	9005883a 	mov	r2,r18
    6ae0:	dfc00517 	ldw	ra,20(sp)
    6ae4:	dd000417 	ldw	r20,16(sp)
    6ae8:	dcc00317 	ldw	r19,12(sp)
    6aec:	dc800217 	ldw	r18,8(sp)
    6af0:	dc400117 	ldw	r17,4(sp)
    6af4:	dc000017 	ldw	r16,0(sp)
    6af8:	dec00604 	addi	sp,sp,24
    6afc:	f800283a 	ret
    6b00:	880d883a 	mov	r6,r17
    6b04:	880b883a 	mov	r5,r17
    6b08:	9809883a 	mov	r4,r19
    6b0c:	00067b00 	call	67b0 <__multiply>
    6b10:	88800015 	stw	r2,0(r17)
    6b14:	10000015 	stw	zero,0(r2)
    6b18:	003fdd06 	br	6a90 <__alt_data_end+0xfffe6a90>
    6b1c:	1025883a 	mov	r18,r2
    6b20:	003fd706 	br	6a80 <__alt_data_end+0xfffe6a80>
    6b24:	10bfffc4 	addi	r2,r2,-1
    6b28:	1085883a 	add	r2,r2,r2
    6b2c:	00c00074 	movhi	r3,1
    6b30:	18fe5a04 	addi	r3,r3,-1688
    6b34:	1085883a 	add	r2,r2,r2
    6b38:	1885883a 	add	r2,r3,r2
    6b3c:	11800017 	ldw	r6,0(r2)
    6b40:	000f883a 	mov	r7,zero
    6b44:	00064100 	call	6410 <__multadd>
    6b48:	1025883a 	mov	r18,r2
    6b4c:	003fc706 	br	6a6c <__alt_data_end+0xfffe6a6c>
    6b50:	05000044 	movi	r20,1
    6b54:	a00b883a 	mov	r5,r20
    6b58:	9809883a 	mov	r4,r19
    6b5c:	00063400 	call	6340 <_Balloc>
    6b60:	1023883a 	mov	r17,r2
    6b64:	00809c44 	movi	r2,625
    6b68:	88800515 	stw	r2,20(r17)
    6b6c:	8d000415 	stw	r20,16(r17)
    6b70:	9c401215 	stw	r17,72(r19)
    6b74:	88000015 	stw	zero,0(r17)
    6b78:	003fc606 	br	6a94 <__alt_data_end+0xfffe6a94>

00006b7c <__lshift>:
    6b7c:	defff904 	addi	sp,sp,-28
    6b80:	dd400515 	stw	r21,20(sp)
    6b84:	dcc00315 	stw	r19,12(sp)
    6b88:	302bd17a 	srai	r21,r6,5
    6b8c:	2cc00417 	ldw	r19,16(r5)
    6b90:	28800217 	ldw	r2,8(r5)
    6b94:	dd000415 	stw	r20,16(sp)
    6b98:	ace7883a 	add	r19,r21,r19
    6b9c:	dc800215 	stw	r18,8(sp)
    6ba0:	dc400115 	stw	r17,4(sp)
    6ba4:	dc000015 	stw	r16,0(sp)
    6ba8:	dfc00615 	stw	ra,24(sp)
    6bac:	9c000044 	addi	r16,r19,1
    6bb0:	2823883a 	mov	r17,r5
    6bb4:	3029883a 	mov	r20,r6
    6bb8:	2025883a 	mov	r18,r4
    6bbc:	29400117 	ldw	r5,4(r5)
    6bc0:	1400030e 	bge	r2,r16,6bd0 <__lshift+0x54>
    6bc4:	1085883a 	add	r2,r2,r2
    6bc8:	29400044 	addi	r5,r5,1
    6bcc:	143ffd16 	blt	r2,r16,6bc4 <__alt_data_end+0xfffe6bc4>
    6bd0:	9009883a 	mov	r4,r18
    6bd4:	00063400 	call	6340 <_Balloc>
    6bd8:	10c00504 	addi	r3,r2,20
    6bdc:	0540070e 	bge	zero,r21,6bfc <__lshift+0x80>
    6be0:	ad6b883a 	add	r21,r21,r21
    6be4:	ad6b883a 	add	r21,r21,r21
    6be8:	1809883a 	mov	r4,r3
    6bec:	1d47883a 	add	r3,r3,r21
    6bf0:	20000015 	stw	zero,0(r4)
    6bf4:	21000104 	addi	r4,r4,4
    6bf8:	193ffd1e 	bne	r3,r4,6bf0 <__alt_data_end+0xfffe6bf0>
    6bfc:	8a000417 	ldw	r8,16(r17)
    6c00:	89000504 	addi	r4,r17,20
    6c04:	a18007cc 	andi	r6,r20,31
    6c08:	4211883a 	add	r8,r8,r8
    6c0c:	4211883a 	add	r8,r8,r8
    6c10:	2211883a 	add	r8,r4,r8
    6c14:	30002326 	beq	r6,zero,6ca4 <__lshift+0x128>
    6c18:	02400804 	movi	r9,32
    6c1c:	4993c83a 	sub	r9,r9,r6
    6c20:	000b883a 	mov	r5,zero
    6c24:	21c00017 	ldw	r7,0(r4)
    6c28:	1815883a 	mov	r10,r3
    6c2c:	18c00104 	addi	r3,r3,4
    6c30:	398e983a 	sll	r7,r7,r6
    6c34:	21000104 	addi	r4,r4,4
    6c38:	394ab03a 	or	r5,r7,r5
    6c3c:	197fff15 	stw	r5,-4(r3)
    6c40:	217fff17 	ldw	r5,-4(r4)
    6c44:	2a4ad83a 	srl	r5,r5,r9
    6c48:	223ff636 	bltu	r4,r8,6c24 <__alt_data_end+0xfffe6c24>
    6c4c:	51400115 	stw	r5,4(r10)
    6c50:	28001a1e 	bne	r5,zero,6cbc <__lshift+0x140>
    6c54:	843fffc4 	addi	r16,r16,-1
    6c58:	14000415 	stw	r16,16(r2)
    6c5c:	88000826 	beq	r17,zero,6c80 <__lshift+0x104>
    6c60:	89000117 	ldw	r4,4(r17)
    6c64:	90c01317 	ldw	r3,76(r18)
    6c68:	2109883a 	add	r4,r4,r4
    6c6c:	2109883a 	add	r4,r4,r4
    6c70:	1907883a 	add	r3,r3,r4
    6c74:	19000017 	ldw	r4,0(r3)
    6c78:	89000015 	stw	r4,0(r17)
    6c7c:	1c400015 	stw	r17,0(r3)
    6c80:	dfc00617 	ldw	ra,24(sp)
    6c84:	dd400517 	ldw	r21,20(sp)
    6c88:	dd000417 	ldw	r20,16(sp)
    6c8c:	dcc00317 	ldw	r19,12(sp)
    6c90:	dc800217 	ldw	r18,8(sp)
    6c94:	dc400117 	ldw	r17,4(sp)
    6c98:	dc000017 	ldw	r16,0(sp)
    6c9c:	dec00704 	addi	sp,sp,28
    6ca0:	f800283a 	ret
    6ca4:	21400017 	ldw	r5,0(r4)
    6ca8:	18c00104 	addi	r3,r3,4
    6cac:	21000104 	addi	r4,r4,4
    6cb0:	197fff15 	stw	r5,-4(r3)
    6cb4:	223ffb36 	bltu	r4,r8,6ca4 <__alt_data_end+0xfffe6ca4>
    6cb8:	003fe606 	br	6c54 <__alt_data_end+0xfffe6c54>
    6cbc:	9c000084 	addi	r16,r19,2
    6cc0:	003fe406 	br	6c54 <__alt_data_end+0xfffe6c54>

00006cc4 <__mcmp>:
    6cc4:	20800417 	ldw	r2,16(r4)
    6cc8:	28c00417 	ldw	r3,16(r5)
    6ccc:	10c5c83a 	sub	r2,r2,r3
    6cd0:	1000111e 	bne	r2,zero,6d18 <__mcmp+0x54>
    6cd4:	18c7883a 	add	r3,r3,r3
    6cd8:	18c7883a 	add	r3,r3,r3
    6cdc:	21000504 	addi	r4,r4,20
    6ce0:	29400504 	addi	r5,r5,20
    6ce4:	20c5883a 	add	r2,r4,r3
    6ce8:	28cb883a 	add	r5,r5,r3
    6cec:	00000106 	br	6cf4 <__mcmp+0x30>
    6cf0:	20800a2e 	bgeu	r4,r2,6d1c <__mcmp+0x58>
    6cf4:	10bfff04 	addi	r2,r2,-4
    6cf8:	297fff04 	addi	r5,r5,-4
    6cfc:	11800017 	ldw	r6,0(r2)
    6d00:	28c00017 	ldw	r3,0(r5)
    6d04:	30fffa26 	beq	r6,r3,6cf0 <__alt_data_end+0xfffe6cf0>
    6d08:	30c00236 	bltu	r6,r3,6d14 <__mcmp+0x50>
    6d0c:	00800044 	movi	r2,1
    6d10:	f800283a 	ret
    6d14:	00bfffc4 	movi	r2,-1
    6d18:	f800283a 	ret
    6d1c:	0005883a 	mov	r2,zero
    6d20:	f800283a 	ret

00006d24 <__mdiff>:
    6d24:	28c00417 	ldw	r3,16(r5)
    6d28:	30800417 	ldw	r2,16(r6)
    6d2c:	defffa04 	addi	sp,sp,-24
    6d30:	dcc00315 	stw	r19,12(sp)
    6d34:	dc800215 	stw	r18,8(sp)
    6d38:	dfc00515 	stw	ra,20(sp)
    6d3c:	dd000415 	stw	r20,16(sp)
    6d40:	dc400115 	stw	r17,4(sp)
    6d44:	dc000015 	stw	r16,0(sp)
    6d48:	1887c83a 	sub	r3,r3,r2
    6d4c:	2825883a 	mov	r18,r5
    6d50:	3027883a 	mov	r19,r6
    6d54:	1800141e 	bne	r3,zero,6da8 <__mdiff+0x84>
    6d58:	1085883a 	add	r2,r2,r2
    6d5c:	1085883a 	add	r2,r2,r2
    6d60:	2a000504 	addi	r8,r5,20
    6d64:	34000504 	addi	r16,r6,20
    6d68:	4087883a 	add	r3,r8,r2
    6d6c:	8085883a 	add	r2,r16,r2
    6d70:	00000106 	br	6d78 <__mdiff+0x54>
    6d74:	40c0592e 	bgeu	r8,r3,6edc <__mdiff+0x1b8>
    6d78:	18ffff04 	addi	r3,r3,-4
    6d7c:	10bfff04 	addi	r2,r2,-4
    6d80:	19c00017 	ldw	r7,0(r3)
    6d84:	11400017 	ldw	r5,0(r2)
    6d88:	397ffa26 	beq	r7,r5,6d74 <__alt_data_end+0xfffe6d74>
    6d8c:	3940592e 	bgeu	r7,r5,6ef4 <__mdiff+0x1d0>
    6d90:	9005883a 	mov	r2,r18
    6d94:	4023883a 	mov	r17,r8
    6d98:	9825883a 	mov	r18,r19
    6d9c:	05000044 	movi	r20,1
    6da0:	1027883a 	mov	r19,r2
    6da4:	00000406 	br	6db8 <__mdiff+0x94>
    6da8:	18005616 	blt	r3,zero,6f04 <__mdiff+0x1e0>
    6dac:	34400504 	addi	r17,r6,20
    6db0:	2c000504 	addi	r16,r5,20
    6db4:	0029883a 	mov	r20,zero
    6db8:	91400117 	ldw	r5,4(r18)
    6dbc:	00063400 	call	6340 <_Balloc>
    6dc0:	92400417 	ldw	r9,16(r18)
    6dc4:	9b000417 	ldw	r12,16(r19)
    6dc8:	12c00504 	addi	r11,r2,20
    6dcc:	4a51883a 	add	r8,r9,r9
    6dd0:	6319883a 	add	r12,r12,r12
    6dd4:	4211883a 	add	r8,r8,r8
    6dd8:	6319883a 	add	r12,r12,r12
    6ddc:	15000315 	stw	r20,12(r2)
    6de0:	8211883a 	add	r8,r16,r8
    6de4:	8b19883a 	add	r12,r17,r12
    6de8:	0007883a 	mov	r3,zero
    6dec:	81400017 	ldw	r5,0(r16)
    6df0:	89c00017 	ldw	r7,0(r17)
    6df4:	59800104 	addi	r6,r11,4
    6df8:	293fffcc 	andi	r4,r5,65535
    6dfc:	20c7883a 	add	r3,r4,r3
    6e00:	393fffcc 	andi	r4,r7,65535
    6e04:	1909c83a 	sub	r4,r3,r4
    6e08:	280ad43a 	srli	r5,r5,16
    6e0c:	380ed43a 	srli	r7,r7,16
    6e10:	2007d43a 	srai	r3,r4,16
    6e14:	213fffcc 	andi	r4,r4,65535
    6e18:	29cbc83a 	sub	r5,r5,r7
    6e1c:	28c7883a 	add	r3,r5,r3
    6e20:	180a943a 	slli	r5,r3,16
    6e24:	8c400104 	addi	r17,r17,4
    6e28:	84000104 	addi	r16,r16,4
    6e2c:	2908b03a 	or	r4,r5,r4
    6e30:	59000015 	stw	r4,0(r11)
    6e34:	1807d43a 	srai	r3,r3,16
    6e38:	3015883a 	mov	r10,r6
    6e3c:	3017883a 	mov	r11,r6
    6e40:	8b3fea36 	bltu	r17,r12,6dec <__alt_data_end+0xfffe6dec>
    6e44:	8200162e 	bgeu	r16,r8,6ea0 <__mdiff+0x17c>
    6e48:	8017883a 	mov	r11,r16
    6e4c:	59400017 	ldw	r5,0(r11)
    6e50:	31800104 	addi	r6,r6,4
    6e54:	5ac00104 	addi	r11,r11,4
    6e58:	293fffcc 	andi	r4,r5,65535
    6e5c:	20c7883a 	add	r3,r4,r3
    6e60:	280ed43a 	srli	r7,r5,16
    6e64:	180bd43a 	srai	r5,r3,16
    6e68:	193fffcc 	andi	r4,r3,65535
    6e6c:	3947883a 	add	r3,r7,r5
    6e70:	180a943a 	slli	r5,r3,16
    6e74:	1807d43a 	srai	r3,r3,16
    6e78:	2908b03a 	or	r4,r5,r4
    6e7c:	313fff15 	stw	r4,-4(r6)
    6e80:	5a3ff236 	bltu	r11,r8,6e4c <__alt_data_end+0xfffe6e4c>
    6e84:	0406303a 	nor	r3,zero,r16
    6e88:	1a07883a 	add	r3,r3,r8
    6e8c:	1806d0ba 	srli	r3,r3,2
    6e90:	18c00044 	addi	r3,r3,1
    6e94:	18c7883a 	add	r3,r3,r3
    6e98:	18c7883a 	add	r3,r3,r3
    6e9c:	50d5883a 	add	r10,r10,r3
    6ea0:	50ffff04 	addi	r3,r10,-4
    6ea4:	2000041e 	bne	r4,zero,6eb8 <__mdiff+0x194>
    6ea8:	18ffff04 	addi	r3,r3,-4
    6eac:	19000017 	ldw	r4,0(r3)
    6eb0:	4a7fffc4 	addi	r9,r9,-1
    6eb4:	203ffc26 	beq	r4,zero,6ea8 <__alt_data_end+0xfffe6ea8>
    6eb8:	12400415 	stw	r9,16(r2)
    6ebc:	dfc00517 	ldw	ra,20(sp)
    6ec0:	dd000417 	ldw	r20,16(sp)
    6ec4:	dcc00317 	ldw	r19,12(sp)
    6ec8:	dc800217 	ldw	r18,8(sp)
    6ecc:	dc400117 	ldw	r17,4(sp)
    6ed0:	dc000017 	ldw	r16,0(sp)
    6ed4:	dec00604 	addi	sp,sp,24
    6ed8:	f800283a 	ret
    6edc:	000b883a 	mov	r5,zero
    6ee0:	00063400 	call	6340 <_Balloc>
    6ee4:	00c00044 	movi	r3,1
    6ee8:	10c00415 	stw	r3,16(r2)
    6eec:	10000515 	stw	zero,20(r2)
    6ef0:	003ff206 	br	6ebc <__alt_data_end+0xfffe6ebc>
    6ef4:	8023883a 	mov	r17,r16
    6ef8:	0029883a 	mov	r20,zero
    6efc:	4021883a 	mov	r16,r8
    6f00:	003fad06 	br	6db8 <__alt_data_end+0xfffe6db8>
    6f04:	9005883a 	mov	r2,r18
    6f08:	94400504 	addi	r17,r18,20
    6f0c:	9c000504 	addi	r16,r19,20
    6f10:	9825883a 	mov	r18,r19
    6f14:	05000044 	movi	r20,1
    6f18:	1027883a 	mov	r19,r2
    6f1c:	003fa606 	br	6db8 <__alt_data_end+0xfffe6db8>

00006f20 <__ulp>:
    6f20:	295ffc2c 	andhi	r5,r5,32752
    6f24:	00bf3034 	movhi	r2,64704
    6f28:	2887883a 	add	r3,r5,r2
    6f2c:	00c0020e 	bge	zero,r3,6f38 <__ulp+0x18>
    6f30:	0005883a 	mov	r2,zero
    6f34:	f800283a 	ret
    6f38:	00c7c83a 	sub	r3,zero,r3
    6f3c:	1807d53a 	srai	r3,r3,20
    6f40:	008004c4 	movi	r2,19
    6f44:	10c00b0e 	bge	r2,r3,6f74 <__ulp+0x54>
    6f48:	18bffb04 	addi	r2,r3,-20
    6f4c:	01000784 	movi	r4,30
    6f50:	0007883a 	mov	r3,zero
    6f54:	20800516 	blt	r4,r2,6f6c <__ulp+0x4c>
    6f58:	010007c4 	movi	r4,31
    6f5c:	2089c83a 	sub	r4,r4,r2
    6f60:	00800044 	movi	r2,1
    6f64:	1104983a 	sll	r2,r2,r4
    6f68:	f800283a 	ret
    6f6c:	00800044 	movi	r2,1
    6f70:	f800283a 	ret
    6f74:	01400234 	movhi	r5,8
    6f78:	28c7d83a 	sra	r3,r5,r3
    6f7c:	0005883a 	mov	r2,zero
    6f80:	f800283a 	ret

00006f84 <__b2d>:
    6f84:	defffa04 	addi	sp,sp,-24
    6f88:	dc000015 	stw	r16,0(sp)
    6f8c:	24000417 	ldw	r16,16(r4)
    6f90:	dc400115 	stw	r17,4(sp)
    6f94:	24400504 	addi	r17,r4,20
    6f98:	8421883a 	add	r16,r16,r16
    6f9c:	8421883a 	add	r16,r16,r16
    6fa0:	8c21883a 	add	r16,r17,r16
    6fa4:	dc800215 	stw	r18,8(sp)
    6fa8:	84bfff17 	ldw	r18,-4(r16)
    6fac:	dd000415 	stw	r20,16(sp)
    6fb0:	dcc00315 	stw	r19,12(sp)
    6fb4:	9009883a 	mov	r4,r18
    6fb8:	2829883a 	mov	r20,r5
    6fbc:	dfc00515 	stw	ra,20(sp)
    6fc0:	000665c0 	call	665c <__hi0bits>
    6fc4:	00c00804 	movi	r3,32
    6fc8:	1889c83a 	sub	r4,r3,r2
    6fcc:	a1000015 	stw	r4,0(r20)
    6fd0:	01000284 	movi	r4,10
    6fd4:	84ffff04 	addi	r19,r16,-4
    6fd8:	20801216 	blt	r4,r2,7024 <__b2d+0xa0>
    6fdc:	018002c4 	movi	r6,11
    6fe0:	308dc83a 	sub	r6,r6,r2
    6fe4:	9186d83a 	srl	r3,r18,r6
    6fe8:	18cffc34 	orhi	r3,r3,16368
    6fec:	8cc0212e 	bgeu	r17,r19,7074 <__b2d+0xf0>
    6ff0:	813ffe17 	ldw	r4,-8(r16)
    6ff4:	218cd83a 	srl	r6,r4,r6
    6ff8:	10800544 	addi	r2,r2,21
    6ffc:	9084983a 	sll	r2,r18,r2
    7000:	1184b03a 	or	r2,r2,r6
    7004:	dfc00517 	ldw	ra,20(sp)
    7008:	dd000417 	ldw	r20,16(sp)
    700c:	dcc00317 	ldw	r19,12(sp)
    7010:	dc800217 	ldw	r18,8(sp)
    7014:	dc400117 	ldw	r17,4(sp)
    7018:	dc000017 	ldw	r16,0(sp)
    701c:	dec00604 	addi	sp,sp,24
    7020:	f800283a 	ret
    7024:	8cc00f2e 	bgeu	r17,r19,7064 <__b2d+0xe0>
    7028:	117ffd44 	addi	r5,r2,-11
    702c:	80bffe17 	ldw	r2,-8(r16)
    7030:	28000e26 	beq	r5,zero,706c <__b2d+0xe8>
    7034:	1949c83a 	sub	r4,r3,r5
    7038:	9164983a 	sll	r18,r18,r5
    703c:	1106d83a 	srl	r3,r2,r4
    7040:	81bffe04 	addi	r6,r16,-8
    7044:	948ffc34 	orhi	r18,r18,16368
    7048:	90c6b03a 	or	r3,r18,r3
    704c:	89800e2e 	bgeu	r17,r6,7088 <__b2d+0x104>
    7050:	81bffd17 	ldw	r6,-12(r16)
    7054:	1144983a 	sll	r2,r2,r5
    7058:	310ad83a 	srl	r5,r6,r4
    705c:	2884b03a 	or	r2,r5,r2
    7060:	003fe806 	br	7004 <__alt_data_end+0xfffe7004>
    7064:	10bffd44 	addi	r2,r2,-11
    7068:	1000041e 	bne	r2,zero,707c <__b2d+0xf8>
    706c:	90cffc34 	orhi	r3,r18,16368
    7070:	003fe406 	br	7004 <__alt_data_end+0xfffe7004>
    7074:	000d883a 	mov	r6,zero
    7078:	003fdf06 	br	6ff8 <__alt_data_end+0xfffe6ff8>
    707c:	90a4983a 	sll	r18,r18,r2
    7080:	0005883a 	mov	r2,zero
    7084:	003ff906 	br	706c <__alt_data_end+0xfffe706c>
    7088:	1144983a 	sll	r2,r2,r5
    708c:	003fdd06 	br	7004 <__alt_data_end+0xfffe7004>

00007090 <__d2b>:
    7090:	defff804 	addi	sp,sp,-32
    7094:	dc000215 	stw	r16,8(sp)
    7098:	3021883a 	mov	r16,r6
    709c:	dc400315 	stw	r17,12(sp)
    70a0:	8022907a 	slli	r17,r16,1
    70a4:	dd000615 	stw	r20,24(sp)
    70a8:	2829883a 	mov	r20,r5
    70ac:	01400044 	movi	r5,1
    70b0:	dcc00515 	stw	r19,20(sp)
    70b4:	dc800415 	stw	r18,16(sp)
    70b8:	dfc00715 	stw	ra,28(sp)
    70bc:	3825883a 	mov	r18,r7
    70c0:	8822d57a 	srli	r17,r17,21
    70c4:	00063400 	call	6340 <_Balloc>
    70c8:	1027883a 	mov	r19,r2
    70cc:	00800434 	movhi	r2,16
    70d0:	10bfffc4 	addi	r2,r2,-1
    70d4:	808c703a 	and	r6,r16,r2
    70d8:	88000126 	beq	r17,zero,70e0 <__d2b+0x50>
    70dc:	31800434 	orhi	r6,r6,16
    70e0:	d9800015 	stw	r6,0(sp)
    70e4:	a0002426 	beq	r20,zero,7178 <__d2b+0xe8>
    70e8:	d9000104 	addi	r4,sp,4
    70ec:	dd000115 	stw	r20,4(sp)
    70f0:	00066c40 	call	66c4 <__lo0bits>
    70f4:	d8c00017 	ldw	r3,0(sp)
    70f8:	10002f1e 	bne	r2,zero,71b8 <__d2b+0x128>
    70fc:	d9000117 	ldw	r4,4(sp)
    7100:	99000515 	stw	r4,20(r19)
    7104:	1821003a 	cmpeq	r16,r3,zero
    7108:	01000084 	movi	r4,2
    710c:	2421c83a 	sub	r16,r4,r16
    7110:	98c00615 	stw	r3,24(r19)
    7114:	9c000415 	stw	r16,16(r19)
    7118:	88001f1e 	bne	r17,zero,7198 <__d2b+0x108>
    711c:	10bef384 	addi	r2,r2,-1074
    7120:	90800015 	stw	r2,0(r18)
    7124:	00900034 	movhi	r2,16384
    7128:	10bfffc4 	addi	r2,r2,-1
    712c:	8085883a 	add	r2,r16,r2
    7130:	1085883a 	add	r2,r2,r2
    7134:	1085883a 	add	r2,r2,r2
    7138:	9885883a 	add	r2,r19,r2
    713c:	11000517 	ldw	r4,20(r2)
    7140:	8020917a 	slli	r16,r16,5
    7144:	000665c0 	call	665c <__hi0bits>
    7148:	d8c00817 	ldw	r3,32(sp)
    714c:	8085c83a 	sub	r2,r16,r2
    7150:	18800015 	stw	r2,0(r3)
    7154:	9805883a 	mov	r2,r19
    7158:	dfc00717 	ldw	ra,28(sp)
    715c:	dd000617 	ldw	r20,24(sp)
    7160:	dcc00517 	ldw	r19,20(sp)
    7164:	dc800417 	ldw	r18,16(sp)
    7168:	dc400317 	ldw	r17,12(sp)
    716c:	dc000217 	ldw	r16,8(sp)
    7170:	dec00804 	addi	sp,sp,32
    7174:	f800283a 	ret
    7178:	d809883a 	mov	r4,sp
    717c:	00066c40 	call	66c4 <__lo0bits>
    7180:	d8c00017 	ldw	r3,0(sp)
    7184:	04000044 	movi	r16,1
    7188:	9c000415 	stw	r16,16(r19)
    718c:	98c00515 	stw	r3,20(r19)
    7190:	10800804 	addi	r2,r2,32
    7194:	883fe126 	beq	r17,zero,711c <__alt_data_end+0xfffe711c>
    7198:	00c00d44 	movi	r3,53
    719c:	8c7ef344 	addi	r17,r17,-1075
    71a0:	88a3883a 	add	r17,r17,r2
    71a4:	1885c83a 	sub	r2,r3,r2
    71a8:	d8c00817 	ldw	r3,32(sp)
    71ac:	94400015 	stw	r17,0(r18)
    71b0:	18800015 	stw	r2,0(r3)
    71b4:	003fe706 	br	7154 <__alt_data_end+0xfffe7154>
    71b8:	01000804 	movi	r4,32
    71bc:	2089c83a 	sub	r4,r4,r2
    71c0:	1908983a 	sll	r4,r3,r4
    71c4:	d9400117 	ldw	r5,4(sp)
    71c8:	1886d83a 	srl	r3,r3,r2
    71cc:	2148b03a 	or	r4,r4,r5
    71d0:	99000515 	stw	r4,20(r19)
    71d4:	d8c00015 	stw	r3,0(sp)
    71d8:	003fca06 	br	7104 <__alt_data_end+0xfffe7104>

000071dc <__ratio>:
    71dc:	defff904 	addi	sp,sp,-28
    71e0:	dc400315 	stw	r17,12(sp)
    71e4:	2823883a 	mov	r17,r5
    71e8:	d9400104 	addi	r5,sp,4
    71ec:	dfc00615 	stw	ra,24(sp)
    71f0:	dcc00515 	stw	r19,20(sp)
    71f4:	dc800415 	stw	r18,16(sp)
    71f8:	2027883a 	mov	r19,r4
    71fc:	dc000215 	stw	r16,8(sp)
    7200:	0006f840 	call	6f84 <__b2d>
    7204:	d80b883a 	mov	r5,sp
    7208:	8809883a 	mov	r4,r17
    720c:	1025883a 	mov	r18,r2
    7210:	1821883a 	mov	r16,r3
    7214:	0006f840 	call	6f84 <__b2d>
    7218:	8a000417 	ldw	r8,16(r17)
    721c:	99000417 	ldw	r4,16(r19)
    7220:	d9400117 	ldw	r5,4(sp)
    7224:	2209c83a 	sub	r4,r4,r8
    7228:	2010917a 	slli	r8,r4,5
    722c:	d9000017 	ldw	r4,0(sp)
    7230:	2909c83a 	sub	r4,r5,r4
    7234:	4109883a 	add	r4,r8,r4
    7238:	01000e0e 	bge	zero,r4,7274 <__ratio+0x98>
    723c:	2008953a 	slli	r4,r4,20
    7240:	2421883a 	add	r16,r4,r16
    7244:	100d883a 	mov	r6,r2
    7248:	180f883a 	mov	r7,r3
    724c:	9009883a 	mov	r4,r18
    7250:	800b883a 	mov	r5,r16
    7254:	000b2c80 	call	b2c8 <__divdf3>
    7258:	dfc00617 	ldw	ra,24(sp)
    725c:	dcc00517 	ldw	r19,20(sp)
    7260:	dc800417 	ldw	r18,16(sp)
    7264:	dc400317 	ldw	r17,12(sp)
    7268:	dc000217 	ldw	r16,8(sp)
    726c:	dec00704 	addi	sp,sp,28
    7270:	f800283a 	ret
    7274:	2008953a 	slli	r4,r4,20
    7278:	1907c83a 	sub	r3,r3,r4
    727c:	003ff106 	br	7244 <__alt_data_end+0xfffe7244>

00007280 <_mprec_log10>:
    7280:	defffe04 	addi	sp,sp,-8
    7284:	dc000015 	stw	r16,0(sp)
    7288:	dfc00115 	stw	ra,4(sp)
    728c:	008005c4 	movi	r2,23
    7290:	2021883a 	mov	r16,r4
    7294:	11000d0e 	bge	r2,r4,72cc <_mprec_log10+0x4c>
    7298:	0005883a 	mov	r2,zero
    729c:	00cffc34 	movhi	r3,16368
    72a0:	843fffc4 	addi	r16,r16,-1
    72a4:	000d883a 	mov	r6,zero
    72a8:	01d00934 	movhi	r7,16420
    72ac:	1009883a 	mov	r4,r2
    72b0:	180b883a 	mov	r5,r3
    72b4:	000bef00 	call	bef0 <__muldf3>
    72b8:	803ff91e 	bne	r16,zero,72a0 <__alt_data_end+0xfffe72a0>
    72bc:	dfc00117 	ldw	ra,4(sp)
    72c0:	dc000017 	ldw	r16,0(sp)
    72c4:	dec00204 	addi	sp,sp,8
    72c8:	f800283a 	ret
    72cc:	202090fa 	slli	r16,r4,3
    72d0:	00800074 	movhi	r2,1
    72d4:	10be7104 	addi	r2,r2,-1596
    72d8:	1421883a 	add	r16,r2,r16
    72dc:	80800017 	ldw	r2,0(r16)
    72e0:	80c00117 	ldw	r3,4(r16)
    72e4:	dfc00117 	ldw	ra,4(sp)
    72e8:	dc000017 	ldw	r16,0(sp)
    72ec:	dec00204 	addi	sp,sp,8
    72f0:	f800283a 	ret

000072f4 <__copybits>:
    72f4:	297fffc4 	addi	r5,r5,-1
    72f8:	280fd17a 	srai	r7,r5,5
    72fc:	30c00417 	ldw	r3,16(r6)
    7300:	30800504 	addi	r2,r6,20
    7304:	39c00044 	addi	r7,r7,1
    7308:	18c7883a 	add	r3,r3,r3
    730c:	39cf883a 	add	r7,r7,r7
    7310:	18c7883a 	add	r3,r3,r3
    7314:	39cf883a 	add	r7,r7,r7
    7318:	10c7883a 	add	r3,r2,r3
    731c:	21cf883a 	add	r7,r4,r7
    7320:	10c00d2e 	bgeu	r2,r3,7358 <__copybits+0x64>
    7324:	200b883a 	mov	r5,r4
    7328:	12000017 	ldw	r8,0(r2)
    732c:	29400104 	addi	r5,r5,4
    7330:	10800104 	addi	r2,r2,4
    7334:	2a3fff15 	stw	r8,-4(r5)
    7338:	10fffb36 	bltu	r2,r3,7328 <__alt_data_end+0xfffe7328>
    733c:	1985c83a 	sub	r2,r3,r6
    7340:	10bffac4 	addi	r2,r2,-21
    7344:	1004d0ba 	srli	r2,r2,2
    7348:	10800044 	addi	r2,r2,1
    734c:	1085883a 	add	r2,r2,r2
    7350:	1085883a 	add	r2,r2,r2
    7354:	2089883a 	add	r4,r4,r2
    7358:	21c0032e 	bgeu	r4,r7,7368 <__copybits+0x74>
    735c:	20000015 	stw	zero,0(r4)
    7360:	21000104 	addi	r4,r4,4
    7364:	21fffd36 	bltu	r4,r7,735c <__alt_data_end+0xfffe735c>
    7368:	f800283a 	ret

0000736c <__any_on>:
    736c:	20c00417 	ldw	r3,16(r4)
    7370:	2805d17a 	srai	r2,r5,5
    7374:	21000504 	addi	r4,r4,20
    7378:	18800d0e 	bge	r3,r2,73b0 <__any_on+0x44>
    737c:	18c7883a 	add	r3,r3,r3
    7380:	18c7883a 	add	r3,r3,r3
    7384:	20c7883a 	add	r3,r4,r3
    7388:	20c0192e 	bgeu	r4,r3,73f0 <__any_on+0x84>
    738c:	18bfff17 	ldw	r2,-4(r3)
    7390:	18ffff04 	addi	r3,r3,-4
    7394:	1000041e 	bne	r2,zero,73a8 <__any_on+0x3c>
    7398:	20c0142e 	bgeu	r4,r3,73ec <__any_on+0x80>
    739c:	18ffff04 	addi	r3,r3,-4
    73a0:	19400017 	ldw	r5,0(r3)
    73a4:	283ffc26 	beq	r5,zero,7398 <__alt_data_end+0xfffe7398>
    73a8:	00800044 	movi	r2,1
    73ac:	f800283a 	ret
    73b0:	10c00a0e 	bge	r2,r3,73dc <__any_on+0x70>
    73b4:	1085883a 	add	r2,r2,r2
    73b8:	1085883a 	add	r2,r2,r2
    73bc:	294007cc 	andi	r5,r5,31
    73c0:	2087883a 	add	r3,r4,r2
    73c4:	283ff026 	beq	r5,zero,7388 <__alt_data_end+0xfffe7388>
    73c8:	19800017 	ldw	r6,0(r3)
    73cc:	3144d83a 	srl	r2,r6,r5
    73d0:	114a983a 	sll	r5,r2,r5
    73d4:	317ff41e 	bne	r6,r5,73a8 <__alt_data_end+0xfffe73a8>
    73d8:	003feb06 	br	7388 <__alt_data_end+0xfffe7388>
    73dc:	1085883a 	add	r2,r2,r2
    73e0:	1085883a 	add	r2,r2,r2
    73e4:	2087883a 	add	r3,r4,r2
    73e8:	003fe706 	br	7388 <__alt_data_end+0xfffe7388>
    73ec:	f800283a 	ret
    73f0:	0005883a 	mov	r2,zero
    73f4:	f800283a 	ret

000073f8 <_realloc_r>:
    73f8:	defff604 	addi	sp,sp,-40
    73fc:	dc800215 	stw	r18,8(sp)
    7400:	dfc00915 	stw	ra,36(sp)
    7404:	df000815 	stw	fp,32(sp)
    7408:	ddc00715 	stw	r23,28(sp)
    740c:	dd800615 	stw	r22,24(sp)
    7410:	dd400515 	stw	r21,20(sp)
    7414:	dd000415 	stw	r20,16(sp)
    7418:	dcc00315 	stw	r19,12(sp)
    741c:	dc400115 	stw	r17,4(sp)
    7420:	dc000015 	stw	r16,0(sp)
    7424:	3025883a 	mov	r18,r6
    7428:	2800b726 	beq	r5,zero,7708 <_realloc_r+0x310>
    742c:	282b883a 	mov	r21,r5
    7430:	2029883a 	mov	r20,r4
    7434:	000d85c0 	call	d85c <__malloc_lock>
    7438:	a8bfff17 	ldw	r2,-4(r21)
    743c:	043fff04 	movi	r16,-4
    7440:	90c002c4 	addi	r3,r18,11
    7444:	01000584 	movi	r4,22
    7448:	acfffe04 	addi	r19,r21,-8
    744c:	1420703a 	and	r16,r2,r16
    7450:	20c0332e 	bgeu	r4,r3,7520 <_realloc_r+0x128>
    7454:	047ffe04 	movi	r17,-8
    7458:	1c62703a 	and	r17,r3,r17
    745c:	8807883a 	mov	r3,r17
    7460:	88005816 	blt	r17,zero,75c4 <_realloc_r+0x1cc>
    7464:	8c805736 	bltu	r17,r18,75c4 <_realloc_r+0x1cc>
    7468:	80c0300e 	bge	r16,r3,752c <_realloc_r+0x134>
    746c:	07000074 	movhi	fp,1
    7470:	e7001f04 	addi	fp,fp,124
    7474:	e1c00217 	ldw	r7,8(fp)
    7478:	9c09883a 	add	r4,r19,r16
    747c:	22000117 	ldw	r8,4(r4)
    7480:	21c06326 	beq	r4,r7,7610 <_realloc_r+0x218>
    7484:	017fff84 	movi	r5,-2
    7488:	414a703a 	and	r5,r8,r5
    748c:	214b883a 	add	r5,r4,r5
    7490:	29800117 	ldw	r6,4(r5)
    7494:	3180004c 	andi	r6,r6,1
    7498:	30003f26 	beq	r6,zero,7598 <_realloc_r+0x1a0>
    749c:	1080004c 	andi	r2,r2,1
    74a0:	10008326 	beq	r2,zero,76b0 <_realloc_r+0x2b8>
    74a4:	900b883a 	mov	r5,r18
    74a8:	a009883a 	mov	r4,r20
    74ac:	00056840 	call	5684 <_malloc_r>
    74b0:	1025883a 	mov	r18,r2
    74b4:	10011e26 	beq	r2,zero,7930 <_realloc_r+0x538>
    74b8:	a93fff17 	ldw	r4,-4(r21)
    74bc:	10fffe04 	addi	r3,r2,-8
    74c0:	00bfff84 	movi	r2,-2
    74c4:	2084703a 	and	r2,r4,r2
    74c8:	9885883a 	add	r2,r19,r2
    74cc:	1880ee26 	beq	r3,r2,7888 <_realloc_r+0x490>
    74d0:	81bfff04 	addi	r6,r16,-4
    74d4:	00800904 	movi	r2,36
    74d8:	1180b836 	bltu	r2,r6,77bc <_realloc_r+0x3c4>
    74dc:	00c004c4 	movi	r3,19
    74e0:	19809636 	bltu	r3,r6,773c <_realloc_r+0x344>
    74e4:	9005883a 	mov	r2,r18
    74e8:	a807883a 	mov	r3,r21
    74ec:	19000017 	ldw	r4,0(r3)
    74f0:	11000015 	stw	r4,0(r2)
    74f4:	19000117 	ldw	r4,4(r3)
    74f8:	11000115 	stw	r4,4(r2)
    74fc:	18c00217 	ldw	r3,8(r3)
    7500:	10c00215 	stw	r3,8(r2)
    7504:	a80b883a 	mov	r5,r21
    7508:	a009883a 	mov	r4,r20
    750c:	0004a8c0 	call	4a8c <_free_r>
    7510:	a009883a 	mov	r4,r20
    7514:	000d8800 	call	d880 <__malloc_unlock>
    7518:	9005883a 	mov	r2,r18
    751c:	00001206 	br	7568 <_realloc_r+0x170>
    7520:	00c00404 	movi	r3,16
    7524:	1823883a 	mov	r17,r3
    7528:	003fce06 	br	7464 <__alt_data_end+0xfffe7464>
    752c:	a825883a 	mov	r18,r21
    7530:	8445c83a 	sub	r2,r16,r17
    7534:	00c003c4 	movi	r3,15
    7538:	18802636 	bltu	r3,r2,75d4 <_realloc_r+0x1dc>
    753c:	99800117 	ldw	r6,4(r19)
    7540:	9c07883a 	add	r3,r19,r16
    7544:	3180004c 	andi	r6,r6,1
    7548:	3420b03a 	or	r16,r6,r16
    754c:	9c000115 	stw	r16,4(r19)
    7550:	18800117 	ldw	r2,4(r3)
    7554:	10800054 	ori	r2,r2,1
    7558:	18800115 	stw	r2,4(r3)
    755c:	a009883a 	mov	r4,r20
    7560:	000d8800 	call	d880 <__malloc_unlock>
    7564:	9005883a 	mov	r2,r18
    7568:	dfc00917 	ldw	ra,36(sp)
    756c:	df000817 	ldw	fp,32(sp)
    7570:	ddc00717 	ldw	r23,28(sp)
    7574:	dd800617 	ldw	r22,24(sp)
    7578:	dd400517 	ldw	r21,20(sp)
    757c:	dd000417 	ldw	r20,16(sp)
    7580:	dcc00317 	ldw	r19,12(sp)
    7584:	dc800217 	ldw	r18,8(sp)
    7588:	dc400117 	ldw	r17,4(sp)
    758c:	dc000017 	ldw	r16,0(sp)
    7590:	dec00a04 	addi	sp,sp,40
    7594:	f800283a 	ret
    7598:	017fff04 	movi	r5,-4
    759c:	414a703a 	and	r5,r8,r5
    75a0:	814d883a 	add	r6,r16,r5
    75a4:	30c01f16 	blt	r6,r3,7624 <_realloc_r+0x22c>
    75a8:	20800317 	ldw	r2,12(r4)
    75ac:	20c00217 	ldw	r3,8(r4)
    75b0:	a825883a 	mov	r18,r21
    75b4:	3021883a 	mov	r16,r6
    75b8:	18800315 	stw	r2,12(r3)
    75bc:	10c00215 	stw	r3,8(r2)
    75c0:	003fdb06 	br	7530 <__alt_data_end+0xfffe7530>
    75c4:	00800304 	movi	r2,12
    75c8:	a0800015 	stw	r2,0(r20)
    75cc:	0005883a 	mov	r2,zero
    75d0:	003fe506 	br	7568 <__alt_data_end+0xfffe7568>
    75d4:	98c00117 	ldw	r3,4(r19)
    75d8:	9c4b883a 	add	r5,r19,r17
    75dc:	11000054 	ori	r4,r2,1
    75e0:	18c0004c 	andi	r3,r3,1
    75e4:	1c62b03a 	or	r17,r3,r17
    75e8:	9c400115 	stw	r17,4(r19)
    75ec:	29000115 	stw	r4,4(r5)
    75f0:	2885883a 	add	r2,r5,r2
    75f4:	10c00117 	ldw	r3,4(r2)
    75f8:	29400204 	addi	r5,r5,8
    75fc:	a009883a 	mov	r4,r20
    7600:	18c00054 	ori	r3,r3,1
    7604:	10c00115 	stw	r3,4(r2)
    7608:	0004a8c0 	call	4a8c <_free_r>
    760c:	003fd306 	br	755c <__alt_data_end+0xfffe755c>
    7610:	017fff04 	movi	r5,-4
    7614:	414a703a 	and	r5,r8,r5
    7618:	89800404 	addi	r6,r17,16
    761c:	8151883a 	add	r8,r16,r5
    7620:	4180590e 	bge	r8,r6,7788 <_realloc_r+0x390>
    7624:	1080004c 	andi	r2,r2,1
    7628:	103f9e1e 	bne	r2,zero,74a4 <__alt_data_end+0xfffe74a4>
    762c:	adbffe17 	ldw	r22,-8(r21)
    7630:	00bfff04 	movi	r2,-4
    7634:	9dadc83a 	sub	r22,r19,r22
    7638:	b1800117 	ldw	r6,4(r22)
    763c:	3084703a 	and	r2,r6,r2
    7640:	20002026 	beq	r4,zero,76c4 <_realloc_r+0x2cc>
    7644:	80af883a 	add	r23,r16,r2
    7648:	b96f883a 	add	r23,r23,r5
    764c:	21c05f26 	beq	r4,r7,77cc <_realloc_r+0x3d4>
    7650:	b8c01c16 	blt	r23,r3,76c4 <_realloc_r+0x2cc>
    7654:	20800317 	ldw	r2,12(r4)
    7658:	20c00217 	ldw	r3,8(r4)
    765c:	81bfff04 	addi	r6,r16,-4
    7660:	01000904 	movi	r4,36
    7664:	18800315 	stw	r2,12(r3)
    7668:	10c00215 	stw	r3,8(r2)
    766c:	b0c00217 	ldw	r3,8(r22)
    7670:	b0800317 	ldw	r2,12(r22)
    7674:	b4800204 	addi	r18,r22,8
    7678:	18800315 	stw	r2,12(r3)
    767c:	10c00215 	stw	r3,8(r2)
    7680:	21801b36 	bltu	r4,r6,76f0 <_realloc_r+0x2f8>
    7684:	008004c4 	movi	r2,19
    7688:	1180352e 	bgeu	r2,r6,7760 <_realloc_r+0x368>
    768c:	a8800017 	ldw	r2,0(r21)
    7690:	b0800215 	stw	r2,8(r22)
    7694:	a8800117 	ldw	r2,4(r21)
    7698:	b0800315 	stw	r2,12(r22)
    769c:	008006c4 	movi	r2,27
    76a0:	11807f36 	bltu	r2,r6,78a0 <_realloc_r+0x4a8>
    76a4:	b0800404 	addi	r2,r22,16
    76a8:	ad400204 	addi	r21,r21,8
    76ac:	00002d06 	br	7764 <_realloc_r+0x36c>
    76b0:	adbffe17 	ldw	r22,-8(r21)
    76b4:	00bfff04 	movi	r2,-4
    76b8:	9dadc83a 	sub	r22,r19,r22
    76bc:	b1000117 	ldw	r4,4(r22)
    76c0:	2084703a 	and	r2,r4,r2
    76c4:	b03f7726 	beq	r22,zero,74a4 <__alt_data_end+0xfffe74a4>
    76c8:	80af883a 	add	r23,r16,r2
    76cc:	b8ff7516 	blt	r23,r3,74a4 <__alt_data_end+0xfffe74a4>
    76d0:	b0800317 	ldw	r2,12(r22)
    76d4:	b0c00217 	ldw	r3,8(r22)
    76d8:	81bfff04 	addi	r6,r16,-4
    76dc:	01000904 	movi	r4,36
    76e0:	18800315 	stw	r2,12(r3)
    76e4:	10c00215 	stw	r3,8(r2)
    76e8:	b4800204 	addi	r18,r22,8
    76ec:	21bfe52e 	bgeu	r4,r6,7684 <__alt_data_end+0xfffe7684>
    76f0:	a80b883a 	mov	r5,r21
    76f4:	9009883a 	mov	r4,r18
    76f8:	00060bc0 	call	60bc <memmove>
    76fc:	b821883a 	mov	r16,r23
    7700:	b027883a 	mov	r19,r22
    7704:	003f8a06 	br	7530 <__alt_data_end+0xfffe7530>
    7708:	300b883a 	mov	r5,r6
    770c:	dfc00917 	ldw	ra,36(sp)
    7710:	df000817 	ldw	fp,32(sp)
    7714:	ddc00717 	ldw	r23,28(sp)
    7718:	dd800617 	ldw	r22,24(sp)
    771c:	dd400517 	ldw	r21,20(sp)
    7720:	dd000417 	ldw	r20,16(sp)
    7724:	dcc00317 	ldw	r19,12(sp)
    7728:	dc800217 	ldw	r18,8(sp)
    772c:	dc400117 	ldw	r17,4(sp)
    7730:	dc000017 	ldw	r16,0(sp)
    7734:	dec00a04 	addi	sp,sp,40
    7738:	00056841 	jmpi	5684 <_malloc_r>
    773c:	a8c00017 	ldw	r3,0(r21)
    7740:	90c00015 	stw	r3,0(r18)
    7744:	a8c00117 	ldw	r3,4(r21)
    7748:	90c00115 	stw	r3,4(r18)
    774c:	00c006c4 	movi	r3,27
    7750:	19804536 	bltu	r3,r6,7868 <_realloc_r+0x470>
    7754:	90800204 	addi	r2,r18,8
    7758:	a8c00204 	addi	r3,r21,8
    775c:	003f6306 	br	74ec <__alt_data_end+0xfffe74ec>
    7760:	9005883a 	mov	r2,r18
    7764:	a8c00017 	ldw	r3,0(r21)
    7768:	b821883a 	mov	r16,r23
    776c:	b027883a 	mov	r19,r22
    7770:	10c00015 	stw	r3,0(r2)
    7774:	a8c00117 	ldw	r3,4(r21)
    7778:	10c00115 	stw	r3,4(r2)
    777c:	a8c00217 	ldw	r3,8(r21)
    7780:	10c00215 	stw	r3,8(r2)
    7784:	003f6a06 	br	7530 <__alt_data_end+0xfffe7530>
    7788:	9c67883a 	add	r19,r19,r17
    778c:	4445c83a 	sub	r2,r8,r17
    7790:	e4c00215 	stw	r19,8(fp)
    7794:	10800054 	ori	r2,r2,1
    7798:	98800115 	stw	r2,4(r19)
    779c:	a8bfff17 	ldw	r2,-4(r21)
    77a0:	a009883a 	mov	r4,r20
    77a4:	1080004c 	andi	r2,r2,1
    77a8:	1462b03a 	or	r17,r2,r17
    77ac:	ac7fff15 	stw	r17,-4(r21)
    77b0:	000d8800 	call	d880 <__malloc_unlock>
    77b4:	a805883a 	mov	r2,r21
    77b8:	003f6b06 	br	7568 <__alt_data_end+0xfffe7568>
    77bc:	a80b883a 	mov	r5,r21
    77c0:	9009883a 	mov	r4,r18
    77c4:	00060bc0 	call	60bc <memmove>
    77c8:	003f4e06 	br	7504 <__alt_data_end+0xfffe7504>
    77cc:	89000404 	addi	r4,r17,16
    77d0:	b93fbc16 	blt	r23,r4,76c4 <__alt_data_end+0xfffe76c4>
    77d4:	b0800317 	ldw	r2,12(r22)
    77d8:	b0c00217 	ldw	r3,8(r22)
    77dc:	81bfff04 	addi	r6,r16,-4
    77e0:	01000904 	movi	r4,36
    77e4:	18800315 	stw	r2,12(r3)
    77e8:	10c00215 	stw	r3,8(r2)
    77ec:	b4800204 	addi	r18,r22,8
    77f0:	21804336 	bltu	r4,r6,7900 <_realloc_r+0x508>
    77f4:	008004c4 	movi	r2,19
    77f8:	11803f2e 	bgeu	r2,r6,78f8 <_realloc_r+0x500>
    77fc:	a8800017 	ldw	r2,0(r21)
    7800:	b0800215 	stw	r2,8(r22)
    7804:	a8800117 	ldw	r2,4(r21)
    7808:	b0800315 	stw	r2,12(r22)
    780c:	008006c4 	movi	r2,27
    7810:	11803f36 	bltu	r2,r6,7910 <_realloc_r+0x518>
    7814:	b0800404 	addi	r2,r22,16
    7818:	ad400204 	addi	r21,r21,8
    781c:	a8c00017 	ldw	r3,0(r21)
    7820:	10c00015 	stw	r3,0(r2)
    7824:	a8c00117 	ldw	r3,4(r21)
    7828:	10c00115 	stw	r3,4(r2)
    782c:	a8c00217 	ldw	r3,8(r21)
    7830:	10c00215 	stw	r3,8(r2)
    7834:	b447883a 	add	r3,r22,r17
    7838:	bc45c83a 	sub	r2,r23,r17
    783c:	e0c00215 	stw	r3,8(fp)
    7840:	10800054 	ori	r2,r2,1
    7844:	18800115 	stw	r2,4(r3)
    7848:	b0800117 	ldw	r2,4(r22)
    784c:	a009883a 	mov	r4,r20
    7850:	1080004c 	andi	r2,r2,1
    7854:	1462b03a 	or	r17,r2,r17
    7858:	b4400115 	stw	r17,4(r22)
    785c:	000d8800 	call	d880 <__malloc_unlock>
    7860:	9005883a 	mov	r2,r18
    7864:	003f4006 	br	7568 <__alt_data_end+0xfffe7568>
    7868:	a8c00217 	ldw	r3,8(r21)
    786c:	90c00215 	stw	r3,8(r18)
    7870:	a8c00317 	ldw	r3,12(r21)
    7874:	90c00315 	stw	r3,12(r18)
    7878:	30801126 	beq	r6,r2,78c0 <_realloc_r+0x4c8>
    787c:	90800404 	addi	r2,r18,16
    7880:	a8c00404 	addi	r3,r21,16
    7884:	003f1906 	br	74ec <__alt_data_end+0xfffe74ec>
    7888:	90ffff17 	ldw	r3,-4(r18)
    788c:	00bfff04 	movi	r2,-4
    7890:	a825883a 	mov	r18,r21
    7894:	1884703a 	and	r2,r3,r2
    7898:	80a1883a 	add	r16,r16,r2
    789c:	003f2406 	br	7530 <__alt_data_end+0xfffe7530>
    78a0:	a8800217 	ldw	r2,8(r21)
    78a4:	b0800415 	stw	r2,16(r22)
    78a8:	a8800317 	ldw	r2,12(r21)
    78ac:	b0800515 	stw	r2,20(r22)
    78b0:	31000a26 	beq	r6,r4,78dc <_realloc_r+0x4e4>
    78b4:	b0800604 	addi	r2,r22,24
    78b8:	ad400404 	addi	r21,r21,16
    78bc:	003fa906 	br	7764 <__alt_data_end+0xfffe7764>
    78c0:	a9000417 	ldw	r4,16(r21)
    78c4:	90800604 	addi	r2,r18,24
    78c8:	a8c00604 	addi	r3,r21,24
    78cc:	91000415 	stw	r4,16(r18)
    78d0:	a9000517 	ldw	r4,20(r21)
    78d4:	91000515 	stw	r4,20(r18)
    78d8:	003f0406 	br	74ec <__alt_data_end+0xfffe74ec>
    78dc:	a8c00417 	ldw	r3,16(r21)
    78e0:	ad400604 	addi	r21,r21,24
    78e4:	b0800804 	addi	r2,r22,32
    78e8:	b0c00615 	stw	r3,24(r22)
    78ec:	a8ffff17 	ldw	r3,-4(r21)
    78f0:	b0c00715 	stw	r3,28(r22)
    78f4:	003f9b06 	br	7764 <__alt_data_end+0xfffe7764>
    78f8:	9005883a 	mov	r2,r18
    78fc:	003fc706 	br	781c <__alt_data_end+0xfffe781c>
    7900:	a80b883a 	mov	r5,r21
    7904:	9009883a 	mov	r4,r18
    7908:	00060bc0 	call	60bc <memmove>
    790c:	003fc906 	br	7834 <__alt_data_end+0xfffe7834>
    7910:	a8800217 	ldw	r2,8(r21)
    7914:	b0800415 	stw	r2,16(r22)
    7918:	a8800317 	ldw	r2,12(r21)
    791c:	b0800515 	stw	r2,20(r22)
    7920:	31000726 	beq	r6,r4,7940 <_realloc_r+0x548>
    7924:	b0800604 	addi	r2,r22,24
    7928:	ad400404 	addi	r21,r21,16
    792c:	003fbb06 	br	781c <__alt_data_end+0xfffe781c>
    7930:	a009883a 	mov	r4,r20
    7934:	000d8800 	call	d880 <__malloc_unlock>
    7938:	0005883a 	mov	r2,zero
    793c:	003f0a06 	br	7568 <__alt_data_end+0xfffe7568>
    7940:	a8c00417 	ldw	r3,16(r21)
    7944:	ad400604 	addi	r21,r21,24
    7948:	b0800804 	addi	r2,r22,32
    794c:	b0c00615 	stw	r3,24(r22)
    7950:	a8ffff17 	ldw	r3,-4(r21)
    7954:	b0c00715 	stw	r3,28(r22)
    7958:	003fb006 	br	781c <__alt_data_end+0xfffe781c>

0000795c <__fpclassifyd>:
    795c:	00a00034 	movhi	r2,32768
    7960:	10bfffc4 	addi	r2,r2,-1
    7964:	2884703a 	and	r2,r5,r2
    7968:	10000726 	beq	r2,zero,7988 <__fpclassifyd+0x2c>
    796c:	00fffc34 	movhi	r3,65520
    7970:	019ff834 	movhi	r6,32736
    7974:	28c7883a 	add	r3,r5,r3
    7978:	31bfffc4 	addi	r6,r6,-1
    797c:	30c00536 	bltu	r6,r3,7994 <__fpclassifyd+0x38>
    7980:	00800104 	movi	r2,4
    7984:	f800283a 	ret
    7988:	2000021e 	bne	r4,zero,7994 <__fpclassifyd+0x38>
    798c:	00800084 	movi	r2,2
    7990:	f800283a 	ret
    7994:	00dffc34 	movhi	r3,32752
    7998:	019ff834 	movhi	r6,32736
    799c:	28cb883a 	add	r5,r5,r3
    79a0:	31bfffc4 	addi	r6,r6,-1
    79a4:	317ff62e 	bgeu	r6,r5,7980 <__alt_data_end+0xfffe7980>
    79a8:	01400434 	movhi	r5,16
    79ac:	297fffc4 	addi	r5,r5,-1
    79b0:	28800236 	bltu	r5,r2,79bc <__fpclassifyd+0x60>
    79b4:	008000c4 	movi	r2,3
    79b8:	f800283a 	ret
    79bc:	10c00226 	beq	r2,r3,79c8 <__fpclassifyd+0x6c>
    79c0:	0005883a 	mov	r2,zero
    79c4:	f800283a 	ret
    79c8:	2005003a 	cmpeq	r2,r4,zero
    79cc:	f800283a 	ret

000079d0 <_sbrk_r>:
    79d0:	defffd04 	addi	sp,sp,-12
    79d4:	dc000015 	stw	r16,0(sp)
    79d8:	04000074 	movhi	r16,1
    79dc:	dc400115 	stw	r17,4(sp)
    79e0:	840c7404 	addi	r16,r16,12752
    79e4:	2023883a 	mov	r17,r4
    79e8:	2809883a 	mov	r4,r5
    79ec:	dfc00215 	stw	ra,8(sp)
    79f0:	80000015 	stw	zero,0(r16)
    79f4:	000da680 	call	da68 <sbrk>
    79f8:	00ffffc4 	movi	r3,-1
    79fc:	10c00526 	beq	r2,r3,7a14 <_sbrk_r+0x44>
    7a00:	dfc00217 	ldw	ra,8(sp)
    7a04:	dc400117 	ldw	r17,4(sp)
    7a08:	dc000017 	ldw	r16,0(sp)
    7a0c:	dec00304 	addi	sp,sp,12
    7a10:	f800283a 	ret
    7a14:	80c00017 	ldw	r3,0(r16)
    7a18:	183ff926 	beq	r3,zero,7a00 <__alt_data_end+0xfffe7a00>
    7a1c:	88c00015 	stw	r3,0(r17)
    7a20:	003ff706 	br	7a00 <__alt_data_end+0xfffe7a00>

00007a24 <__sread>:
    7a24:	defffe04 	addi	sp,sp,-8
    7a28:	dc000015 	stw	r16,0(sp)
    7a2c:	2821883a 	mov	r16,r5
    7a30:	2940038f 	ldh	r5,14(r5)
    7a34:	dfc00115 	stw	ra,4(sp)
    7a38:	00098e00 	call	98e0 <_read_r>
    7a3c:	10000716 	blt	r2,zero,7a5c <__sread+0x38>
    7a40:	80c01417 	ldw	r3,80(r16)
    7a44:	1887883a 	add	r3,r3,r2
    7a48:	80c01415 	stw	r3,80(r16)
    7a4c:	dfc00117 	ldw	ra,4(sp)
    7a50:	dc000017 	ldw	r16,0(sp)
    7a54:	dec00204 	addi	sp,sp,8
    7a58:	f800283a 	ret
    7a5c:	80c0030b 	ldhu	r3,12(r16)
    7a60:	18fbffcc 	andi	r3,r3,61439
    7a64:	80c0030d 	sth	r3,12(r16)
    7a68:	dfc00117 	ldw	ra,4(sp)
    7a6c:	dc000017 	ldw	r16,0(sp)
    7a70:	dec00204 	addi	sp,sp,8
    7a74:	f800283a 	ret

00007a78 <__seofread>:
    7a78:	0005883a 	mov	r2,zero
    7a7c:	f800283a 	ret

00007a80 <__swrite>:
    7a80:	2880030b 	ldhu	r2,12(r5)
    7a84:	defffb04 	addi	sp,sp,-20
    7a88:	dcc00315 	stw	r19,12(sp)
    7a8c:	dc800215 	stw	r18,8(sp)
    7a90:	dc400115 	stw	r17,4(sp)
    7a94:	dc000015 	stw	r16,0(sp)
    7a98:	dfc00415 	stw	ra,16(sp)
    7a9c:	10c0400c 	andi	r3,r2,256
    7aa0:	2821883a 	mov	r16,r5
    7aa4:	2023883a 	mov	r17,r4
    7aa8:	3025883a 	mov	r18,r6
    7aac:	3827883a 	mov	r19,r7
    7ab0:	18000526 	beq	r3,zero,7ac8 <__swrite+0x48>
    7ab4:	2940038f 	ldh	r5,14(r5)
    7ab8:	01c00084 	movi	r7,2
    7abc:	000d883a 	mov	r6,zero
    7ac0:	00098800 	call	9880 <_lseek_r>
    7ac4:	8080030b 	ldhu	r2,12(r16)
    7ac8:	8140038f 	ldh	r5,14(r16)
    7acc:	10bbffcc 	andi	r2,r2,61439
    7ad0:	980f883a 	mov	r7,r19
    7ad4:	900d883a 	mov	r6,r18
    7ad8:	8809883a 	mov	r4,r17
    7adc:	8080030d 	sth	r2,12(r16)
    7ae0:	dfc00417 	ldw	ra,16(sp)
    7ae4:	dcc00317 	ldw	r19,12(sp)
    7ae8:	dc800217 	ldw	r18,8(sp)
    7aec:	dc400117 	ldw	r17,4(sp)
    7af0:	dc000017 	ldw	r16,0(sp)
    7af4:	dec00504 	addi	sp,sp,20
    7af8:	00093341 	jmpi	9334 <_write_r>

00007afc <__sseek>:
    7afc:	defffe04 	addi	sp,sp,-8
    7b00:	dc000015 	stw	r16,0(sp)
    7b04:	2821883a 	mov	r16,r5
    7b08:	2940038f 	ldh	r5,14(r5)
    7b0c:	dfc00115 	stw	ra,4(sp)
    7b10:	00098800 	call	9880 <_lseek_r>
    7b14:	00ffffc4 	movi	r3,-1
    7b18:	10c00826 	beq	r2,r3,7b3c <__sseek+0x40>
    7b1c:	80c0030b 	ldhu	r3,12(r16)
    7b20:	80801415 	stw	r2,80(r16)
    7b24:	18c40014 	ori	r3,r3,4096
    7b28:	80c0030d 	sth	r3,12(r16)
    7b2c:	dfc00117 	ldw	ra,4(sp)
    7b30:	dc000017 	ldw	r16,0(sp)
    7b34:	dec00204 	addi	sp,sp,8
    7b38:	f800283a 	ret
    7b3c:	80c0030b 	ldhu	r3,12(r16)
    7b40:	18fbffcc 	andi	r3,r3,61439
    7b44:	80c0030d 	sth	r3,12(r16)
    7b48:	dfc00117 	ldw	ra,4(sp)
    7b4c:	dc000017 	ldw	r16,0(sp)
    7b50:	dec00204 	addi	sp,sp,8
    7b54:	f800283a 	ret

00007b58 <__sclose>:
    7b58:	2940038f 	ldh	r5,14(r5)
    7b5c:	00093941 	jmpi	9394 <_close_r>

00007b60 <strcmp>:
    7b60:	2144b03a 	or	r2,r4,r5
    7b64:	108000cc 	andi	r2,r2,3
    7b68:	1000171e 	bne	r2,zero,7bc8 <strcmp+0x68>
    7b6c:	20800017 	ldw	r2,0(r4)
    7b70:	28c00017 	ldw	r3,0(r5)
    7b74:	10c0141e 	bne	r2,r3,7bc8 <strcmp+0x68>
    7b78:	027fbff4 	movhi	r9,65279
    7b7c:	4a7fbfc4 	addi	r9,r9,-257
    7b80:	0086303a 	nor	r3,zero,r2
    7b84:	02202074 	movhi	r8,32897
    7b88:	1245883a 	add	r2,r2,r9
    7b8c:	42202004 	addi	r8,r8,-32640
    7b90:	10c4703a 	and	r2,r2,r3
    7b94:	1204703a 	and	r2,r2,r8
    7b98:	10000226 	beq	r2,zero,7ba4 <strcmp+0x44>
    7b9c:	00002306 	br	7c2c <strcmp+0xcc>
    7ba0:	1000221e 	bne	r2,zero,7c2c <strcmp+0xcc>
    7ba4:	21000104 	addi	r4,r4,4
    7ba8:	20c00017 	ldw	r3,0(r4)
    7bac:	29400104 	addi	r5,r5,4
    7bb0:	29800017 	ldw	r6,0(r5)
    7bb4:	1a4f883a 	add	r7,r3,r9
    7bb8:	00c4303a 	nor	r2,zero,r3
    7bbc:	3884703a 	and	r2,r7,r2
    7bc0:	1204703a 	and	r2,r2,r8
    7bc4:	19bff626 	beq	r3,r6,7ba0 <__alt_data_end+0xfffe7ba0>
    7bc8:	20800003 	ldbu	r2,0(r4)
    7bcc:	10c03fcc 	andi	r3,r2,255
    7bd0:	18c0201c 	xori	r3,r3,128
    7bd4:	18ffe004 	addi	r3,r3,-128
    7bd8:	18000c26 	beq	r3,zero,7c0c <strcmp+0xac>
    7bdc:	29800007 	ldb	r6,0(r5)
    7be0:	19800326 	beq	r3,r6,7bf0 <strcmp+0x90>
    7be4:	00001306 	br	7c34 <strcmp+0xd4>
    7be8:	29800007 	ldb	r6,0(r5)
    7bec:	11800b1e 	bne	r2,r6,7c1c <strcmp+0xbc>
    7bf0:	21000044 	addi	r4,r4,1
    7bf4:	20c00003 	ldbu	r3,0(r4)
    7bf8:	29400044 	addi	r5,r5,1
    7bfc:	18803fcc 	andi	r2,r3,255
    7c00:	1080201c 	xori	r2,r2,128
    7c04:	10bfe004 	addi	r2,r2,-128
    7c08:	103ff71e 	bne	r2,zero,7be8 <__alt_data_end+0xfffe7be8>
    7c0c:	0007883a 	mov	r3,zero
    7c10:	28800003 	ldbu	r2,0(r5)
    7c14:	1885c83a 	sub	r2,r3,r2
    7c18:	f800283a 	ret
    7c1c:	28800003 	ldbu	r2,0(r5)
    7c20:	18c03fcc 	andi	r3,r3,255
    7c24:	1885c83a 	sub	r2,r3,r2
    7c28:	f800283a 	ret
    7c2c:	0005883a 	mov	r2,zero
    7c30:	f800283a 	ret
    7c34:	10c03fcc 	andi	r3,r2,255
    7c38:	003ff506 	br	7c10 <__alt_data_end+0xfffe7c10>

00007c3c <__sprint_r.part.0>:
    7c3c:	28801917 	ldw	r2,100(r5)
    7c40:	defff604 	addi	sp,sp,-40
    7c44:	dd400515 	stw	r21,20(sp)
    7c48:	dfc00915 	stw	ra,36(sp)
    7c4c:	df000815 	stw	fp,32(sp)
    7c50:	ddc00715 	stw	r23,28(sp)
    7c54:	dd800615 	stw	r22,24(sp)
    7c58:	dd000415 	stw	r20,16(sp)
    7c5c:	dcc00315 	stw	r19,12(sp)
    7c60:	dc800215 	stw	r18,8(sp)
    7c64:	dc400115 	stw	r17,4(sp)
    7c68:	dc000015 	stw	r16,0(sp)
    7c6c:	1088000c 	andi	r2,r2,8192
    7c70:	302b883a 	mov	r21,r6
    7c74:	10002e26 	beq	r2,zero,7d30 <__sprint_r.part.0+0xf4>
    7c78:	30800217 	ldw	r2,8(r6)
    7c7c:	35800017 	ldw	r22,0(r6)
    7c80:	10002926 	beq	r2,zero,7d28 <__sprint_r.part.0+0xec>
    7c84:	2827883a 	mov	r19,r5
    7c88:	2029883a 	mov	r20,r4
    7c8c:	b5c00104 	addi	r23,r22,4
    7c90:	04bfffc4 	movi	r18,-1
    7c94:	bc400017 	ldw	r17,0(r23)
    7c98:	b4000017 	ldw	r16,0(r22)
    7c9c:	0039883a 	mov	fp,zero
    7ca0:	8822d0ba 	srli	r17,r17,2
    7ca4:	8800031e 	bne	r17,zero,7cb4 <__sprint_r.part.0+0x78>
    7ca8:	00001806 	br	7d0c <__sprint_r.part.0+0xd0>
    7cac:	84000104 	addi	r16,r16,4
    7cb0:	8f001526 	beq	r17,fp,7d08 <__sprint_r.part.0+0xcc>
    7cb4:	81400017 	ldw	r5,0(r16)
    7cb8:	980d883a 	mov	r6,r19
    7cbc:	a009883a 	mov	r4,r20
    7cc0:	000972c0 	call	972c <_fputwc_r>
    7cc4:	e7000044 	addi	fp,fp,1
    7cc8:	14bff81e 	bne	r2,r18,7cac <__alt_data_end+0xfffe7cac>
    7ccc:	9005883a 	mov	r2,r18
    7cd0:	a8000215 	stw	zero,8(r21)
    7cd4:	a8000115 	stw	zero,4(r21)
    7cd8:	dfc00917 	ldw	ra,36(sp)
    7cdc:	df000817 	ldw	fp,32(sp)
    7ce0:	ddc00717 	ldw	r23,28(sp)
    7ce4:	dd800617 	ldw	r22,24(sp)
    7ce8:	dd400517 	ldw	r21,20(sp)
    7cec:	dd000417 	ldw	r20,16(sp)
    7cf0:	dcc00317 	ldw	r19,12(sp)
    7cf4:	dc800217 	ldw	r18,8(sp)
    7cf8:	dc400117 	ldw	r17,4(sp)
    7cfc:	dc000017 	ldw	r16,0(sp)
    7d00:	dec00a04 	addi	sp,sp,40
    7d04:	f800283a 	ret
    7d08:	a8800217 	ldw	r2,8(r21)
    7d0c:	8c63883a 	add	r17,r17,r17
    7d10:	8c63883a 	add	r17,r17,r17
    7d14:	1445c83a 	sub	r2,r2,r17
    7d18:	a8800215 	stw	r2,8(r21)
    7d1c:	b5800204 	addi	r22,r22,8
    7d20:	bdc00204 	addi	r23,r23,8
    7d24:	103fdb1e 	bne	r2,zero,7c94 <__alt_data_end+0xfffe7c94>
    7d28:	0005883a 	mov	r2,zero
    7d2c:	003fe806 	br	7cd0 <__alt_data_end+0xfffe7cd0>
    7d30:	0004d9c0 	call	4d9c <__sfvwrite_r>
    7d34:	003fe606 	br	7cd0 <__alt_data_end+0xfffe7cd0>

00007d38 <__sprint_r>:
    7d38:	30c00217 	ldw	r3,8(r6)
    7d3c:	18000126 	beq	r3,zero,7d44 <__sprint_r+0xc>
    7d40:	0007c3c1 	jmpi	7c3c <__sprint_r.part.0>
    7d44:	30000115 	stw	zero,4(r6)
    7d48:	0005883a 	mov	r2,zero
    7d4c:	f800283a 	ret

00007d50 <___vfiprintf_internal_r>:
    7d50:	deffca04 	addi	sp,sp,-216
    7d54:	dd403115 	stw	r21,196(sp)
    7d58:	dfc03515 	stw	ra,212(sp)
    7d5c:	df003415 	stw	fp,208(sp)
    7d60:	ddc03315 	stw	r23,204(sp)
    7d64:	dd803215 	stw	r22,200(sp)
    7d68:	dd003015 	stw	r20,192(sp)
    7d6c:	dcc02f15 	stw	r19,188(sp)
    7d70:	dc802e15 	stw	r18,184(sp)
    7d74:	dc402d15 	stw	r17,180(sp)
    7d78:	dc002c15 	stw	r16,176(sp)
    7d7c:	d9002115 	stw	r4,132(sp)
    7d80:	d9402015 	stw	r5,128(sp)
    7d84:	d9c02215 	stw	r7,136(sp)
    7d88:	302b883a 	mov	r21,r6
    7d8c:	20000226 	beq	r4,zero,7d98 <___vfiprintf_internal_r+0x48>
    7d90:	20800e17 	ldw	r2,56(r4)
    7d94:	1000cf26 	beq	r2,zero,80d4 <___vfiprintf_internal_r+0x384>
    7d98:	d8c02017 	ldw	r3,128(sp)
    7d9c:	1880030b 	ldhu	r2,12(r3)
    7da0:	10c8000c 	andi	r3,r2,8192
    7da4:	1800071e 	bne	r3,zero,7dc4 <___vfiprintf_internal_r+0x74>
    7da8:	d9402017 	ldw	r5,128(sp)
    7dac:	00f7ffc4 	movi	r3,-8193
    7db0:	10880014 	ori	r2,r2,8192
    7db4:	29001917 	ldw	r4,100(r5)
    7db8:	2880030d 	sth	r2,12(r5)
    7dbc:	20c6703a 	and	r3,r4,r3
    7dc0:	28c01915 	stw	r3,100(r5)
    7dc4:	10c0020c 	andi	r3,r2,8
    7dc8:	1800a526 	beq	r3,zero,8060 <___vfiprintf_internal_r+0x310>
    7dcc:	d9002017 	ldw	r4,128(sp)
    7dd0:	20c00417 	ldw	r3,16(r4)
    7dd4:	1800a226 	beq	r3,zero,8060 <___vfiprintf_internal_r+0x310>
    7dd8:	1080068c 	andi	r2,r2,26
    7ddc:	00c00284 	movi	r3,10
    7de0:	10c0a826 	beq	r2,r3,8084 <___vfiprintf_internal_r+0x334>
    7de4:	d9001a04 	addi	r4,sp,104
    7de8:	d94019c4 	addi	r5,sp,103
    7dec:	04800074 	movhi	r18,1
    7df0:	2145c83a 	sub	r2,r4,r5
    7df4:	94bea304 	addi	r18,r18,-1396
    7df8:	d9001e15 	stw	r4,120(sp)
    7dfc:	d9401f15 	stw	r5,124(sp)
    7e00:	dec01a15 	stw	sp,104(sp)
    7e04:	d8001c15 	stw	zero,112(sp)
    7e08:	d8001b15 	stw	zero,108(sp)
    7e0c:	d811883a 	mov	r8,sp
    7e10:	d8002615 	stw	zero,152(sp)
    7e14:	d8002415 	stw	zero,144(sp)
    7e18:	d8802815 	stw	r2,160(sp)
    7e1c:	a82d883a 	mov	r22,r21
    7e20:	b0800007 	ldb	r2,0(r22)
    7e24:	10040d26 	beq	r2,zero,8e5c <___vfiprintf_internal_r+0x110c>
    7e28:	00c00944 	movi	r3,37
    7e2c:	b029883a 	mov	r20,r22
    7e30:	10c0021e 	bne	r2,r3,7e3c <___vfiprintf_internal_r+0xec>
    7e34:	00001606 	br	7e90 <___vfiprintf_internal_r+0x140>
    7e38:	10c00326 	beq	r2,r3,7e48 <___vfiprintf_internal_r+0xf8>
    7e3c:	a5000044 	addi	r20,r20,1
    7e40:	a0800007 	ldb	r2,0(r20)
    7e44:	103ffc1e 	bne	r2,zero,7e38 <__alt_data_end+0xfffe7e38>
    7e48:	a5a1c83a 	sub	r16,r20,r22
    7e4c:	80001026 	beq	r16,zero,7e90 <___vfiprintf_internal_r+0x140>
    7e50:	d8c01c17 	ldw	r3,112(sp)
    7e54:	d8801b17 	ldw	r2,108(sp)
    7e58:	45800015 	stw	r22,0(r8)
    7e5c:	80c7883a 	add	r3,r16,r3
    7e60:	10800044 	addi	r2,r2,1
    7e64:	44000115 	stw	r16,4(r8)
    7e68:	d8c01c15 	stw	r3,112(sp)
    7e6c:	d8801b15 	stw	r2,108(sp)
    7e70:	010001c4 	movi	r4,7
    7e74:	2080750e 	bge	r4,r2,804c <___vfiprintf_internal_r+0x2fc>
    7e78:	1803951e 	bne	r3,zero,8cd0 <___vfiprintf_internal_r+0xf80>
    7e7c:	d8c02417 	ldw	r3,144(sp)
    7e80:	d8001b15 	stw	zero,108(sp)
    7e84:	d811883a 	mov	r8,sp
    7e88:	1c07883a 	add	r3,r3,r16
    7e8c:	d8c02415 	stw	r3,144(sp)
    7e90:	a0800007 	ldb	r2,0(r20)
    7e94:	1002e026 	beq	r2,zero,8a18 <___vfiprintf_internal_r+0xcc8>
    7e98:	a5800044 	addi	r22,r20,1
    7e9c:	a0c00047 	ldb	r3,1(r20)
    7ea0:	d8001d85 	stb	zero,118(sp)
    7ea4:	0027883a 	mov	r19,zero
    7ea8:	d8002305 	stb	zero,140(sp)
    7eac:	043fffc4 	movi	r16,-1
    7eb0:	d8002515 	stw	zero,148(sp)
    7eb4:	0023883a 	mov	r17,zero
    7eb8:	05001604 	movi	r20,88
    7ebc:	05400244 	movi	r21,9
    7ec0:	402f883a 	mov	r23,r8
    7ec4:	b5800044 	addi	r22,r22,1
    7ec8:	18bff804 	addi	r2,r3,-32
    7ecc:	a0827736 	bltu	r20,r2,88ac <___vfiprintf_internal_r+0xb5c>
    7ed0:	100490ba 	slli	r2,r2,2
    7ed4:	01000034 	movhi	r4,0
    7ed8:	211fba04 	addi	r4,r4,32488
    7edc:	1105883a 	add	r2,r2,r4
    7ee0:	10800017 	ldw	r2,0(r2)
    7ee4:	1000683a 	jmp	r2
    7ee8:	000085ac 	andhi	zero,zero,534
    7eec:	000088ac 	andhi	zero,zero,546
    7ef0:	000088ac 	andhi	zero,zero,546
    7ef4:	000085c8 	cmpgei	zero,zero,535
    7ef8:	000088ac 	andhi	zero,zero,546
    7efc:	000088ac 	andhi	zero,zero,546
    7f00:	000088ac 	andhi	zero,zero,546
    7f04:	000088ac 	andhi	zero,zero,546
    7f08:	000088ac 	andhi	zero,zero,546
    7f0c:	000088ac 	andhi	zero,zero,546
    7f10:	000087d0 	cmplti	zero,zero,543
    7f14:	000087f4 	movhi	zero,543
    7f18:	000088ac 	andhi	zero,zero,546
    7f1c:	000080ec 	andhi	zero,zero,515
    7f20:	00008808 	cmpgei	zero,zero,544
    7f24:	000088ac 	andhi	zero,zero,546
    7f28:	000085d4 	movui	zero,535
    7f2c:	000085e0 	cmpeqi	zero,zero,535
    7f30:	000085e0 	cmpeqi	zero,zero,535
    7f34:	000085e0 	cmpeqi	zero,zero,535
    7f38:	000085e0 	cmpeqi	zero,zero,535
    7f3c:	000085e0 	cmpeqi	zero,zero,535
    7f40:	000085e0 	cmpeqi	zero,zero,535
    7f44:	000085e0 	cmpeqi	zero,zero,535
    7f48:	000085e0 	cmpeqi	zero,zero,535
    7f4c:	000085e0 	cmpeqi	zero,zero,535
    7f50:	000088ac 	andhi	zero,zero,546
    7f54:	000088ac 	andhi	zero,zero,546
    7f58:	000088ac 	andhi	zero,zero,546
    7f5c:	000088ac 	andhi	zero,zero,546
    7f60:	000088ac 	andhi	zero,zero,546
    7f64:	000088ac 	andhi	zero,zero,546
    7f68:	000088ac 	andhi	zero,zero,546
    7f6c:	000088ac 	andhi	zero,zero,546
    7f70:	000088ac 	andhi	zero,zero,546
    7f74:	000088ac 	andhi	zero,zero,546
    7f78:	00008620 	cmpeqi	zero,zero,536
    7f7c:	000088ac 	andhi	zero,zero,546
    7f80:	000088ac 	andhi	zero,zero,546
    7f84:	000088ac 	andhi	zero,zero,546
    7f88:	000088ac 	andhi	zero,zero,546
    7f8c:	000088ac 	andhi	zero,zero,546
    7f90:	000088ac 	andhi	zero,zero,546
    7f94:	000088ac 	andhi	zero,zero,546
    7f98:	000088ac 	andhi	zero,zero,546
    7f9c:	000088ac 	andhi	zero,zero,546
    7fa0:	000088ac 	andhi	zero,zero,546
    7fa4:	0000865c 	xori	zero,zero,537
    7fa8:	000088ac 	andhi	zero,zero,546
    7fac:	000088ac 	andhi	zero,zero,546
    7fb0:	000088ac 	andhi	zero,zero,546
    7fb4:	000088ac 	andhi	zero,zero,546
    7fb8:	000088ac 	andhi	zero,zero,546
    7fbc:	000086b8 	rdprs	zero,zero,538
    7fc0:	000088ac 	andhi	zero,zero,546
    7fc4:	000088ac 	andhi	zero,zero,546
    7fc8:	0000872c 	andhi	zero,zero,540
    7fcc:	000088ac 	andhi	zero,zero,546
    7fd0:	000088ac 	andhi	zero,zero,546
    7fd4:	000088ac 	andhi	zero,zero,546
    7fd8:	000088ac 	andhi	zero,zero,546
    7fdc:	000088ac 	andhi	zero,zero,546
    7fe0:	000088ac 	andhi	zero,zero,546
    7fe4:	000088ac 	andhi	zero,zero,546
    7fe8:	000088ac 	andhi	zero,zero,546
    7fec:	000088ac 	andhi	zero,zero,546
    7ff0:	000088ac 	andhi	zero,zero,546
    7ff4:	000084d4 	movui	zero,531
    7ff8:	00008504 	movi	zero,532
    7ffc:	000088ac 	andhi	zero,zero,546
    8000:	000088ac 	andhi	zero,zero,546
    8004:	000088ac 	andhi	zero,zero,546
    8008:	00008854 	movui	zero,545
    800c:	00008504 	movi	zero,532
    8010:	000088ac 	andhi	zero,zero,546
    8014:	000088ac 	andhi	zero,zero,546
    8018:	000083ac 	andhi	zero,zero,526
    801c:	000088ac 	andhi	zero,zero,546
    8020:	000083c0 	call	83c <___vfprintf_internal_r+0x2e4>
    8024:	000083f8 	rdprs	zero,zero,527
    8028:	000080f8 	rdprs	zero,zero,515
    802c:	000083a0 	cmpeqi	zero,zero,526
    8030:	000088ac 	andhi	zero,zero,546
    8034:	0000876c 	andhi	zero,zero,541
    8038:	000088ac 	andhi	zero,zero,546
    803c:	000087b8 	rdprs	zero,zero,542
    8040:	000088ac 	andhi	zero,zero,546
    8044:	000088ac 	andhi	zero,zero,546
    8048:	0000847c 	xorhi	zero,zero,529
    804c:	42000204 	addi	r8,r8,8
    8050:	d8c02417 	ldw	r3,144(sp)
    8054:	1c07883a 	add	r3,r3,r16
    8058:	d8c02415 	stw	r3,144(sp)
    805c:	003f8c06 	br	7e90 <__alt_data_end+0xfffe7e90>
    8060:	d9402017 	ldw	r5,128(sp)
    8064:	d9002117 	ldw	r4,132(sp)
    8068:	000290c0 	call	290c <__swsetup_r>
    806c:	1003c11e 	bne	r2,zero,8f74 <___vfiprintf_internal_r+0x1224>
    8070:	d9402017 	ldw	r5,128(sp)
    8074:	00c00284 	movi	r3,10
    8078:	2880030b 	ldhu	r2,12(r5)
    807c:	1080068c 	andi	r2,r2,26
    8080:	10ff581e 	bne	r2,r3,7de4 <__alt_data_end+0xfffe7de4>
    8084:	d8c02017 	ldw	r3,128(sp)
    8088:	1880038f 	ldh	r2,14(r3)
    808c:	103f5516 	blt	r2,zero,7de4 <__alt_data_end+0xfffe7de4>
    8090:	d9c02217 	ldw	r7,136(sp)
    8094:	d9002117 	ldw	r4,132(sp)
    8098:	a80d883a 	mov	r6,r21
    809c:	180b883a 	mov	r5,r3
    80a0:	00092780 	call	9278 <__sbprintf>
    80a4:	dfc03517 	ldw	ra,212(sp)
    80a8:	df003417 	ldw	fp,208(sp)
    80ac:	ddc03317 	ldw	r23,204(sp)
    80b0:	dd803217 	ldw	r22,200(sp)
    80b4:	dd403117 	ldw	r21,196(sp)
    80b8:	dd003017 	ldw	r20,192(sp)
    80bc:	dcc02f17 	ldw	r19,188(sp)
    80c0:	dc802e17 	ldw	r18,184(sp)
    80c4:	dc402d17 	ldw	r17,180(sp)
    80c8:	dc002c17 	ldw	r16,176(sp)
    80cc:	dec03604 	addi	sp,sp,216
    80d0:	f800283a 	ret
    80d4:	00049180 	call	4918 <__sinit>
    80d8:	003f2f06 	br	7d98 <__alt_data_end+0xfffe7d98>
    80dc:	d8c02517 	ldw	r3,148(sp)
    80e0:	d8802215 	stw	r2,136(sp)
    80e4:	00c7c83a 	sub	r3,zero,r3
    80e8:	d8c02515 	stw	r3,148(sp)
    80ec:	8c400114 	ori	r17,r17,4
    80f0:	b0c00007 	ldb	r3,0(r22)
    80f4:	003f7306 	br	7ec4 <__alt_data_end+0xfffe7ec4>
    80f8:	00800c04 	movi	r2,48
    80fc:	d9402217 	ldw	r5,136(sp)
    8100:	d8801d05 	stb	r2,116(sp)
    8104:	00801e04 	movi	r2,120
    8108:	d8801d45 	stb	r2,117(sp)
    810c:	d8001d85 	stb	zero,118(sp)
    8110:	b811883a 	mov	r8,r23
    8114:	28c00104 	addi	r3,r5,4
    8118:	2cc00017 	ldw	r19,0(r5)
    811c:	0029883a 	mov	r20,zero
    8120:	88800094 	ori	r2,r17,2
    8124:	80032516 	blt	r16,zero,8dbc <___vfiprintf_internal_r+0x106c>
    8128:	00bfdfc4 	movi	r2,-129
    812c:	88a2703a 	and	r17,r17,r2
    8130:	d8c02215 	stw	r3,136(sp)
    8134:	8c400094 	ori	r17,r17,2
    8138:	98032a1e 	bne	r19,zero,8de4 <___vfiprintf_internal_r+0x1094>
    813c:	00800074 	movhi	r2,1
    8140:	10be4204 	addi	r2,r2,-1784
    8144:	d8802615 	stw	r2,152(sp)
    8148:	002b883a 	mov	r21,zero
    814c:	8001741e 	bne	r16,zero,8720 <___vfiprintf_internal_r+0x9d0>
    8150:	0021883a 	mov	r16,zero
    8154:	0029883a 	mov	r20,zero
    8158:	ddc01a04 	addi	r23,sp,104
    815c:	8027883a 	mov	r19,r16
    8160:	8500010e 	bge	r16,r20,8168 <___vfiprintf_internal_r+0x418>
    8164:	a027883a 	mov	r19,r20
    8168:	ad403fcc 	andi	r21,r21,255
    816c:	ad40201c 	xori	r21,r21,128
    8170:	ad7fe004 	addi	r21,r21,-128
    8174:	a8000126 	beq	r21,zero,817c <___vfiprintf_internal_r+0x42c>
    8178:	9cc00044 	addi	r19,r19,1
    817c:	89c0008c 	andi	r7,r17,2
    8180:	38000126 	beq	r7,zero,8188 <___vfiprintf_internal_r+0x438>
    8184:	9cc00084 	addi	r19,r19,2
    8188:	88c0210c 	andi	r3,r17,132
    818c:	1801dd1e 	bne	r3,zero,8904 <___vfiprintf_internal_r+0xbb4>
    8190:	d9402517 	ldw	r5,148(sp)
    8194:	2cebc83a 	sub	r21,r5,r19
    8198:	0541da0e 	bge	zero,r21,8904 <___vfiprintf_internal_r+0xbb4>
    819c:	07000404 	movi	fp,16
    81a0:	d8801c17 	ldw	r2,112(sp)
    81a4:	e543be0e 	bge	fp,r21,90a0 <___vfiprintf_internal_r+0x1350>
    81a8:	01400074 	movhi	r5,1
    81ac:	297ea704 	addi	r5,r5,-1380
    81b0:	dc002715 	stw	r16,156(sp)
    81b4:	d9801b17 	ldw	r6,108(sp)
    81b8:	a821883a 	mov	r16,r21
    81bc:	d9402315 	stw	r5,140(sp)
    81c0:	028001c4 	movi	r10,7
    81c4:	d9c02915 	stw	r7,164(sp)
    81c8:	182b883a 	mov	r21,r3
    81cc:	00000506 	br	81e4 <___vfiprintf_internal_r+0x494>
    81d0:	31000084 	addi	r4,r6,2
    81d4:	42000204 	addi	r8,r8,8
    81d8:	180d883a 	mov	r6,r3
    81dc:	843ffc04 	addi	r16,r16,-16
    81e0:	e4000f0e 	bge	fp,r16,8220 <___vfiprintf_internal_r+0x4d0>
    81e4:	01000074 	movhi	r4,1
    81e8:	10800404 	addi	r2,r2,16
    81ec:	30c00044 	addi	r3,r6,1
    81f0:	213ea704 	addi	r4,r4,-1380
    81f4:	41000015 	stw	r4,0(r8)
    81f8:	47000115 	stw	fp,4(r8)
    81fc:	d8801c15 	stw	r2,112(sp)
    8200:	d8c01b15 	stw	r3,108(sp)
    8204:	50fff20e 	bge	r10,r3,81d0 <__alt_data_end+0xfffe81d0>
    8208:	1001b21e 	bne	r2,zero,88d4 <___vfiprintf_internal_r+0xb84>
    820c:	843ffc04 	addi	r16,r16,-16
    8210:	000d883a 	mov	r6,zero
    8214:	01000044 	movi	r4,1
    8218:	d811883a 	mov	r8,sp
    821c:	e43ff116 	blt	fp,r16,81e4 <__alt_data_end+0xfffe81e4>
    8220:	a807883a 	mov	r3,r21
    8224:	d9c02917 	ldw	r7,164(sp)
    8228:	802b883a 	mov	r21,r16
    822c:	dc002717 	ldw	r16,156(sp)
    8230:	d9402317 	ldw	r5,140(sp)
    8234:	a885883a 	add	r2,r21,r2
    8238:	45400115 	stw	r21,4(r8)
    823c:	41400015 	stw	r5,0(r8)
    8240:	d8801c15 	stw	r2,112(sp)
    8244:	d9001b15 	stw	r4,108(sp)
    8248:	014001c4 	movi	r5,7
    824c:	29026216 	blt	r5,r4,8bd8 <___vfiprintf_internal_r+0xe88>
    8250:	d9801d87 	ldb	r6,118(sp)
    8254:	42000204 	addi	r8,r8,8
    8258:	21400044 	addi	r5,r4,1
    825c:	3001ae1e 	bne	r6,zero,8918 <___vfiprintf_internal_r+0xbc8>
    8260:	3801bb26 	beq	r7,zero,8950 <___vfiprintf_internal_r+0xc00>
    8264:	d9001d04 	addi	r4,sp,116
    8268:	10800084 	addi	r2,r2,2
    826c:	41000015 	stw	r4,0(r8)
    8270:	01000084 	movi	r4,2
    8274:	41000115 	stw	r4,4(r8)
    8278:	d8801c15 	stw	r2,112(sp)
    827c:	d9401b15 	stw	r5,108(sp)
    8280:	010001c4 	movi	r4,7
    8284:	2142680e 	bge	r4,r5,8c28 <___vfiprintf_internal_r+0xed8>
    8288:	1002b11e 	bne	r2,zero,8d50 <___vfiprintf_internal_r+0x1000>
    828c:	01802004 	movi	r6,128
    8290:	01400044 	movi	r5,1
    8294:	0009883a 	mov	r4,zero
    8298:	d811883a 	mov	r8,sp
    829c:	1981ae1e 	bne	r3,r6,8958 <___vfiprintf_internal_r+0xc08>
    82a0:	d8c02517 	ldw	r3,148(sp)
    82a4:	1cf9c83a 	sub	fp,r3,r19
    82a8:	0701ab0e 	bge	zero,fp,8958 <___vfiprintf_internal_r+0xc08>
    82ac:	05400404 	movi	r21,16
    82b0:	af03a90e 	bge	r21,fp,9158 <___vfiprintf_internal_r+0x1408>
    82b4:	01400074 	movhi	r5,1
    82b8:	297ea304 	addi	r5,r5,-1396
    82bc:	d9402315 	stw	r5,140(sp)
    82c0:	01c001c4 	movi	r7,7
    82c4:	00000506 	br	82dc <___vfiprintf_internal_r+0x58c>
    82c8:	21800084 	addi	r6,r4,2
    82cc:	42000204 	addi	r8,r8,8
    82d0:	1809883a 	mov	r4,r3
    82d4:	e73ffc04 	addi	fp,fp,-16
    82d8:	af000d0e 	bge	r21,fp,8310 <___vfiprintf_internal_r+0x5c0>
    82dc:	10800404 	addi	r2,r2,16
    82e0:	20c00044 	addi	r3,r4,1
    82e4:	44800015 	stw	r18,0(r8)
    82e8:	45400115 	stw	r21,4(r8)
    82ec:	d8801c15 	stw	r2,112(sp)
    82f0:	d8c01b15 	stw	r3,108(sp)
    82f4:	38fff40e 	bge	r7,r3,82c8 <__alt_data_end+0xfffe82c8>
    82f8:	10022b1e 	bne	r2,zero,8ba8 <___vfiprintf_internal_r+0xe58>
    82fc:	e73ffc04 	addi	fp,fp,-16
    8300:	01800044 	movi	r6,1
    8304:	0009883a 	mov	r4,zero
    8308:	d811883a 	mov	r8,sp
    830c:	af3ff316 	blt	r21,fp,82dc <__alt_data_end+0xfffe82dc>
    8310:	d8c02317 	ldw	r3,140(sp)
    8314:	1705883a 	add	r2,r2,fp
    8318:	47000115 	stw	fp,4(r8)
    831c:	40c00015 	stw	r3,0(r8)
    8320:	d8801c15 	stw	r2,112(sp)
    8324:	d9801b15 	stw	r6,108(sp)
    8328:	00c001c4 	movi	r3,7
    832c:	19829416 	blt	r3,r6,8d80 <___vfiprintf_internal_r+0x1030>
    8330:	8521c83a 	sub	r16,r16,r20
    8334:	42000204 	addi	r8,r8,8
    8338:	31400044 	addi	r5,r6,1
    833c:	3009883a 	mov	r4,r6
    8340:	04018716 	blt	zero,r16,8960 <___vfiprintf_internal_r+0xc10>
    8344:	a085883a 	add	r2,r20,r2
    8348:	45c00015 	stw	r23,0(r8)
    834c:	45000115 	stw	r20,4(r8)
    8350:	d8801c15 	stw	r2,112(sp)
    8354:	d9401b15 	stw	r5,108(sp)
    8358:	00c001c4 	movi	r3,7
    835c:	1941c20e 	bge	r3,r5,8a68 <___vfiprintf_internal_r+0xd18>
    8360:	1002531e 	bne	r2,zero,8cb0 <___vfiprintf_internal_r+0xf60>
    8364:	d8001b15 	stw	zero,108(sp)
    8368:	8c40010c 	andi	r17,r17,4
    836c:	88023226 	beq	r17,zero,8c38 <___vfiprintf_internal_r+0xee8>
    8370:	d9002517 	ldw	r4,148(sp)
    8374:	24e3c83a 	sub	r17,r4,r19
    8378:	04432916 	blt	zero,r17,9020 <___vfiprintf_internal_r+0x12d0>
    837c:	d8802517 	ldw	r2,148(sp)
    8380:	14c0010e 	bge	r2,r19,8388 <___vfiprintf_internal_r+0x638>
    8384:	9805883a 	mov	r2,r19
    8388:	d8c02417 	ldw	r3,144(sp)
    838c:	1887883a 	add	r3,r3,r2
    8390:	d8c02415 	stw	r3,144(sp)
    8394:	d8001b15 	stw	zero,108(sp)
    8398:	d811883a 	mov	r8,sp
    839c:	003ea006 	br	7e20 <__alt_data_end+0xfffe7e20>
    83a0:	8c400814 	ori	r17,r17,32
    83a4:	b0c00007 	ldb	r3,0(r22)
    83a8:	003ec606 	br	7ec4 <__alt_data_end+0xfffe7ec4>
    83ac:	b0c00007 	ldb	r3,0(r22)
    83b0:	00801b04 	movi	r2,108
    83b4:	18832026 	beq	r3,r2,9038 <___vfiprintf_internal_r+0x12e8>
    83b8:	8c400414 	ori	r17,r17,16
    83bc:	003ec106 	br	7ec4 <__alt_data_end+0xfffe7ec4>
    83c0:	9cc03fcc 	andi	r19,r19,255
    83c4:	b811883a 	mov	r8,r23
    83c8:	9803981e 	bne	r19,zero,922c <___vfiprintf_internal_r+0x14dc>
    83cc:	8880080c 	andi	r2,r17,32
    83d0:	1002be26 	beq	r2,zero,8ecc <___vfiprintf_internal_r+0x117c>
    83d4:	d9002217 	ldw	r4,136(sp)
    83d8:	d9402417 	ldw	r5,144(sp)
    83dc:	20800017 	ldw	r2,0(r4)
    83e0:	2807d7fa 	srai	r3,r5,31
    83e4:	21000104 	addi	r4,r4,4
    83e8:	d9002215 	stw	r4,136(sp)
    83ec:	11400015 	stw	r5,0(r2)
    83f0:	10c00115 	stw	r3,4(r2)
    83f4:	003e8a06 	br	7e20 <__alt_data_end+0xfffe7e20>
    83f8:	9cc03fcc 	andi	r19,r19,255
    83fc:	b811883a 	mov	r8,r23
    8400:	9803871e 	bne	r19,zero,9220 <___vfiprintf_internal_r+0x14d0>
    8404:	8880080c 	andi	r2,r17,32
    8408:	10009a26 	beq	r2,zero,8674 <___vfiprintf_internal_r+0x924>
    840c:	d9002217 	ldw	r4,136(sp)
    8410:	d8001d85 	stb	zero,118(sp)
    8414:	20800204 	addi	r2,r4,8
    8418:	24c00017 	ldw	r19,0(r4)
    841c:	25000117 	ldw	r20,4(r4)
    8420:	8002a416 	blt	r16,zero,8eb4 <___vfiprintf_internal_r+0x1164>
    8424:	013fdfc4 	movi	r4,-129
    8428:	9d06b03a 	or	r3,r19,r20
    842c:	d8802215 	stw	r2,136(sp)
    8430:	8922703a 	and	r17,r17,r4
    8434:	18009b26 	beq	r3,zero,86a4 <___vfiprintf_internal_r+0x954>
    8438:	002b883a 	mov	r21,zero
    843c:	ddc01a04 	addi	r23,sp,104
    8440:	9806d0fa 	srli	r3,r19,3
    8444:	a008977a 	slli	r4,r20,29
    8448:	a028d0fa 	srli	r20,r20,3
    844c:	9cc001cc 	andi	r19,r19,7
    8450:	98800c04 	addi	r2,r19,48
    8454:	bdffffc4 	addi	r23,r23,-1
    8458:	20e6b03a 	or	r19,r4,r3
    845c:	b8800005 	stb	r2,0(r23)
    8460:	9d06b03a 	or	r3,r19,r20
    8464:	183ff61e 	bne	r3,zero,8440 <__alt_data_end+0xfffe8440>
    8468:	88c0004c 	andi	r3,r17,1
    846c:	18021f1e 	bne	r3,zero,8cec <___vfiprintf_internal_r+0xf9c>
    8470:	d9401e17 	ldw	r5,120(sp)
    8474:	2de9c83a 	sub	r20,r5,r23
    8478:	003f3806 	br	815c <__alt_data_end+0xfffe815c>
    847c:	9cc03fcc 	andi	r19,r19,255
    8480:	b811883a 	mov	r8,r23
    8484:	98034f1e 	bne	r19,zero,91c4 <___vfiprintf_internal_r+0x1474>
    8488:	00800074 	movhi	r2,1
    848c:	10be4204 	addi	r2,r2,-1784
    8490:	d8802615 	stw	r2,152(sp)
    8494:	8880080c 	andi	r2,r17,32
    8498:	1000ac26 	beq	r2,zero,874c <___vfiprintf_internal_r+0x9fc>
    849c:	d9002217 	ldw	r4,136(sp)
    84a0:	24c00017 	ldw	r19,0(r4)
    84a4:	25000117 	ldw	r20,4(r4)
    84a8:	21000204 	addi	r4,r4,8
    84ac:	d9002215 	stw	r4,136(sp)
    84b0:	8880004c 	andi	r2,r17,1
    84b4:	1001e726 	beq	r2,zero,8c54 <___vfiprintf_internal_r+0xf04>
    84b8:	9d04b03a 	or	r2,r19,r20
    84bc:	10025c1e 	bne	r2,zero,8e30 <___vfiprintf_internal_r+0x10e0>
    84c0:	d8001d85 	stb	zero,118(sp)
    84c4:	80024416 	blt	r16,zero,8dd8 <___vfiprintf_internal_r+0x1088>
    84c8:	00bfdfc4 	movi	r2,-129
    84cc:	88a2703a 	and	r17,r17,r2
    84d0:	003f1d06 	br	8148 <__alt_data_end+0xfffe8148>
    84d4:	d8c02217 	ldw	r3,136(sp)
    84d8:	04c00044 	movi	r19,1
    84dc:	b811883a 	mov	r8,r23
    84e0:	18800017 	ldw	r2,0(r3)
    84e4:	18c00104 	addi	r3,r3,4
    84e8:	d8001d85 	stb	zero,118(sp)
    84ec:	d8801005 	stb	r2,64(sp)
    84f0:	d8c02215 	stw	r3,136(sp)
    84f4:	9829883a 	mov	r20,r19
    84f8:	ddc01004 	addi	r23,sp,64
    84fc:	0021883a 	mov	r16,zero
    8500:	003f1e06 	br	817c <__alt_data_end+0xfffe817c>
    8504:	9cc03fcc 	andi	r19,r19,255
    8508:	b811883a 	mov	r8,r23
    850c:	9803331e 	bne	r19,zero,91dc <___vfiprintf_internal_r+0x148c>
    8510:	8880080c 	andi	r2,r17,32
    8514:	10004826 	beq	r2,zero,8638 <___vfiprintf_internal_r+0x8e8>
    8518:	d9002217 	ldw	r4,136(sp)
    851c:	20800117 	ldw	r2,4(r4)
    8520:	24c00017 	ldw	r19,0(r4)
    8524:	21000204 	addi	r4,r4,8
    8528:	d9002215 	stw	r4,136(sp)
    852c:	1029883a 	mov	r20,r2
    8530:	10024c16 	blt	r2,zero,8e64 <___vfiprintf_internal_r+0x1114>
    8534:	dd401d83 	ldbu	r21,118(sp)
    8538:	80007116 	blt	r16,zero,8700 <___vfiprintf_internal_r+0x9b0>
    853c:	00ffdfc4 	movi	r3,-129
    8540:	9d04b03a 	or	r2,r19,r20
    8544:	88e2703a 	and	r17,r17,r3
    8548:	1000d126 	beq	r2,zero,8890 <___vfiprintf_internal_r+0xb40>
    854c:	a0023526 	beq	r20,zero,8e24 <___vfiprintf_internal_r+0x10d4>
    8550:	ddc01a04 	addi	r23,sp,104
    8554:	4039883a 	mov	fp,r8
    8558:	9809883a 	mov	r4,r19
    855c:	a00b883a 	mov	r5,r20
    8560:	01800284 	movi	r6,10
    8564:	000f883a 	mov	r7,zero
    8568:	000a27c0 	call	a27c <__umoddi3>
    856c:	10800c04 	addi	r2,r2,48
    8570:	bdffffc4 	addi	r23,r23,-1
    8574:	9809883a 	mov	r4,r19
    8578:	a00b883a 	mov	r5,r20
    857c:	b8800005 	stb	r2,0(r23)
    8580:	01800284 	movi	r6,10
    8584:	000f883a 	mov	r7,zero
    8588:	0009c800 	call	9c80 <__udivdi3>
    858c:	1027883a 	mov	r19,r2
    8590:	10c4b03a 	or	r2,r2,r3
    8594:	1829883a 	mov	r20,r3
    8598:	103fef1e 	bne	r2,zero,8558 <__alt_data_end+0xfffe8558>
    859c:	d9001e17 	ldw	r4,120(sp)
    85a0:	e011883a 	mov	r8,fp
    85a4:	25e9c83a 	sub	r20,r4,r23
    85a8:	003eec06 	br	815c <__alt_data_end+0xfffe815c>
    85ac:	d8802307 	ldb	r2,140(sp)
    85b0:	1002361e 	bne	r2,zero,8e8c <___vfiprintf_internal_r+0x113c>
    85b4:	00c00804 	movi	r3,32
    85b8:	d8c02305 	stb	r3,140(sp)
    85bc:	04c00044 	movi	r19,1
    85c0:	b0c00007 	ldb	r3,0(r22)
    85c4:	003e3f06 	br	7ec4 <__alt_data_end+0xfffe7ec4>
    85c8:	8c400054 	ori	r17,r17,1
    85cc:	b0c00007 	ldb	r3,0(r22)
    85d0:	003e3c06 	br	7ec4 <__alt_data_end+0xfffe7ec4>
    85d4:	8c402014 	ori	r17,r17,128
    85d8:	b0c00007 	ldb	r3,0(r22)
    85dc:	003e3906 	br	7ec4 <__alt_data_end+0xfffe7ec4>
    85e0:	dc002715 	stw	r16,156(sp)
    85e4:	d8002515 	stw	zero,148(sp)
    85e8:	1f3ff404 	addi	fp,r3,-48
    85ec:	0009883a 	mov	r4,zero
    85f0:	b021883a 	mov	r16,r22
    85f4:	01400284 	movi	r5,10
    85f8:	000a9f40 	call	a9f4 <__mulsi3>
    85fc:	80c00007 	ldb	r3,0(r16)
    8600:	e089883a 	add	r4,fp,r2
    8604:	b5800044 	addi	r22,r22,1
    8608:	1f3ff404 	addi	fp,r3,-48
    860c:	b021883a 	mov	r16,r22
    8610:	af3ff82e 	bgeu	r21,fp,85f4 <__alt_data_end+0xfffe85f4>
    8614:	d9002515 	stw	r4,148(sp)
    8618:	dc002717 	ldw	r16,156(sp)
    861c:	003e2a06 	br	7ec8 <__alt_data_end+0xfffe7ec8>
    8620:	9cc03fcc 	andi	r19,r19,255
    8624:	b811883a 	mov	r8,r23
    8628:	9802e91e 	bne	r19,zero,91d0 <___vfiprintf_internal_r+0x1480>
    862c:	8c400414 	ori	r17,r17,16
    8630:	8880080c 	andi	r2,r17,32
    8634:	103fb81e 	bne	r2,zero,8518 <__alt_data_end+0xfffe8518>
    8638:	8880040c 	andi	r2,r17,16
    863c:	10022e26 	beq	r2,zero,8ef8 <___vfiprintf_internal_r+0x11a8>
    8640:	d9402217 	ldw	r5,136(sp)
    8644:	2cc00017 	ldw	r19,0(r5)
    8648:	29400104 	addi	r5,r5,4
    864c:	d9402215 	stw	r5,136(sp)
    8650:	9829d7fa 	srai	r20,r19,31
    8654:	a005883a 	mov	r2,r20
    8658:	003fb506 	br	8530 <__alt_data_end+0xfffe8530>
    865c:	9cc03fcc 	andi	r19,r19,255
    8660:	b811883a 	mov	r8,r23
    8664:	9802fa1e 	bne	r19,zero,9250 <___vfiprintf_internal_r+0x1500>
    8668:	8c400414 	ori	r17,r17,16
    866c:	8880080c 	andi	r2,r17,32
    8670:	103f661e 	bne	r2,zero,840c <__alt_data_end+0xfffe840c>
    8674:	8880040c 	andi	r2,r17,16
    8678:	10020626 	beq	r2,zero,8e94 <___vfiprintf_internal_r+0x1144>
    867c:	d9402217 	ldw	r5,136(sp)
    8680:	d8001d85 	stb	zero,118(sp)
    8684:	0029883a 	mov	r20,zero
    8688:	28800104 	addi	r2,r5,4
    868c:	2cc00017 	ldw	r19,0(r5)
    8690:	80020816 	blt	r16,zero,8eb4 <___vfiprintf_internal_r+0x1164>
    8694:	00ffdfc4 	movi	r3,-129
    8698:	d8802215 	stw	r2,136(sp)
    869c:	88e2703a 	and	r17,r17,r3
    86a0:	983f651e 	bne	r19,zero,8438 <__alt_data_end+0xfffe8438>
    86a4:	002b883a 	mov	r21,zero
    86a8:	8002cf26 	beq	r16,zero,91e8 <___vfiprintf_internal_r+0x1498>
    86ac:	0027883a 	mov	r19,zero
    86b0:	0029883a 	mov	r20,zero
    86b4:	003f6106 	br	843c <__alt_data_end+0xfffe843c>
    86b8:	9cc03fcc 	andi	r19,r19,255
    86bc:	b811883a 	mov	r8,r23
    86c0:	9802e01e 	bne	r19,zero,9244 <___vfiprintf_internal_r+0x14f4>
    86c4:	8c400414 	ori	r17,r17,16
    86c8:	8880080c 	andi	r2,r17,32
    86cc:	1000641e 	bne	r2,zero,8860 <___vfiprintf_internal_r+0xb10>
    86d0:	8880040c 	andi	r2,r17,16
    86d4:	1001c81e 	bne	r2,zero,8df8 <___vfiprintf_internal_r+0x10a8>
    86d8:	8880100c 	andi	r2,r17,64
    86dc:	d8001d85 	stb	zero,118(sp)
    86e0:	1002281e 	bne	r2,zero,8f84 <___vfiprintf_internal_r+0x1234>
    86e4:	d9002217 	ldw	r4,136(sp)
    86e8:	0029883a 	mov	r20,zero
    86ec:	20800104 	addi	r2,r4,4
    86f0:	24c00017 	ldw	r19,0(r4)
    86f4:	8001c60e 	bge	r16,zero,8e10 <___vfiprintf_internal_r+0x10c0>
    86f8:	d8802215 	stw	r2,136(sp)
    86fc:	002b883a 	mov	r21,zero
    8700:	9d04b03a 	or	r2,r19,r20
    8704:	103f911e 	bne	r2,zero,854c <__alt_data_end+0xfffe854c>
    8708:	00800044 	movi	r2,1
    870c:	10803fcc 	andi	r2,r2,255
    8710:	00c00044 	movi	r3,1
    8714:	10c05f26 	beq	r2,r3,8894 <___vfiprintf_internal_r+0xb44>
    8718:	00c00084 	movi	r3,2
    871c:	10ffe31e 	bne	r2,r3,86ac <__alt_data_end+0xfffe86ac>
    8720:	0027883a 	mov	r19,zero
    8724:	0029883a 	mov	r20,zero
    8728:	00015106 	br	8c70 <___vfiprintf_internal_r+0xf20>
    872c:	9cc03fcc 	andi	r19,r19,255
    8730:	b811883a 	mov	r8,r23
    8734:	9802c01e 	bne	r19,zero,9238 <___vfiprintf_internal_r+0x14e8>
    8738:	01400074 	movhi	r5,1
    873c:	297e3d04 	addi	r5,r5,-1804
    8740:	d9402615 	stw	r5,152(sp)
    8744:	8880080c 	andi	r2,r17,32
    8748:	103f541e 	bne	r2,zero,849c <__alt_data_end+0xfffe849c>
    874c:	8880040c 	andi	r2,r17,16
    8750:	1001f226 	beq	r2,zero,8f1c <___vfiprintf_internal_r+0x11cc>
    8754:	d9402217 	ldw	r5,136(sp)
    8758:	0029883a 	mov	r20,zero
    875c:	2cc00017 	ldw	r19,0(r5)
    8760:	29400104 	addi	r5,r5,4
    8764:	d9402215 	stw	r5,136(sp)
    8768:	003f5106 	br	84b0 <__alt_data_end+0xfffe84b0>
    876c:	d8c02217 	ldw	r3,136(sp)
    8770:	b811883a 	mov	r8,r23
    8774:	d8001d85 	stb	zero,118(sp)
    8778:	1dc00017 	ldw	r23,0(r3)
    877c:	1f000104 	addi	fp,r3,4
    8780:	b8025926 	beq	r23,zero,90e8 <___vfiprintf_internal_r+0x1398>
    8784:	80023316 	blt	r16,zero,9054 <___vfiprintf_internal_r+0x1304>
    8788:	800d883a 	mov	r6,r16
    878c:	000b883a 	mov	r5,zero
    8790:	b809883a 	mov	r4,r23
    8794:	da002a15 	stw	r8,168(sp)
    8798:	0005e900 	call	5e90 <memchr>
    879c:	da002a17 	ldw	r8,168(sp)
    87a0:	10026826 	beq	r2,zero,9144 <___vfiprintf_internal_r+0x13f4>
    87a4:	15e9c83a 	sub	r20,r2,r23
    87a8:	dd401d83 	ldbu	r21,118(sp)
    87ac:	df002215 	stw	fp,136(sp)
    87b0:	0021883a 	mov	r16,zero
    87b4:	003e6906 	br	815c <__alt_data_end+0xfffe815c>
    87b8:	9cc03fcc 	andi	r19,r19,255
    87bc:	b811883a 	mov	r8,r23
    87c0:	983fc126 	beq	r19,zero,86c8 <__alt_data_end+0xfffe86c8>
    87c4:	d8c02303 	ldbu	r3,140(sp)
    87c8:	d8c01d85 	stb	r3,118(sp)
    87cc:	003fbe06 	br	86c8 <__alt_data_end+0xfffe86c8>
    87d0:	d9002217 	ldw	r4,136(sp)
    87d4:	d9402217 	ldw	r5,136(sp)
    87d8:	21000017 	ldw	r4,0(r4)
    87dc:	28800104 	addi	r2,r5,4
    87e0:	d9002515 	stw	r4,148(sp)
    87e4:	203e3d16 	blt	r4,zero,80dc <__alt_data_end+0xfffe80dc>
    87e8:	d8802215 	stw	r2,136(sp)
    87ec:	b0c00007 	ldb	r3,0(r22)
    87f0:	003db406 	br	7ec4 <__alt_data_end+0xfffe7ec4>
    87f4:	00c00ac4 	movi	r3,43
    87f8:	d8c02305 	stb	r3,140(sp)
    87fc:	04c00044 	movi	r19,1
    8800:	b0c00007 	ldb	r3,0(r22)
    8804:	003daf06 	br	7ec4 <__alt_data_end+0xfffe7ec4>
    8808:	b0c00007 	ldb	r3,0(r22)
    880c:	01000a84 	movi	r4,42
    8810:	b4000044 	addi	r16,r22,1
    8814:	19025e26 	beq	r3,r4,9190 <___vfiprintf_internal_r+0x1440>
    8818:	1f3ff404 	addi	fp,r3,-48
    881c:	0009883a 	mov	r4,zero
    8820:	af025236 	bltu	r21,fp,916c <___vfiprintf_internal_r+0x141c>
    8824:	01400284 	movi	r5,10
    8828:	000a9f40 	call	a9f4 <__mulsi3>
    882c:	80c00007 	ldb	r3,0(r16)
    8830:	1709883a 	add	r4,r2,fp
    8834:	85800044 	addi	r22,r16,1
    8838:	1f3ff404 	addi	fp,r3,-48
    883c:	b021883a 	mov	r16,r22
    8840:	af3ff82e 	bgeu	r21,fp,8824 <__alt_data_end+0xfffe8824>
    8844:	2021883a 	mov	r16,r4
    8848:	203d9f0e 	bge	r4,zero,7ec8 <__alt_data_end+0xfffe7ec8>
    884c:	043fffc4 	movi	r16,-1
    8850:	003d9d06 	br	7ec8 <__alt_data_end+0xfffe7ec8>
    8854:	8c401014 	ori	r17,r17,64
    8858:	b0c00007 	ldb	r3,0(r22)
    885c:	003d9906 	br	7ec4 <__alt_data_end+0xfffe7ec4>
    8860:	d9002217 	ldw	r4,136(sp)
    8864:	d8001d85 	stb	zero,118(sp)
    8868:	20c00204 	addi	r3,r4,8
    886c:	24c00017 	ldw	r19,0(r4)
    8870:	25000117 	ldw	r20,4(r4)
    8874:	8001e716 	blt	r16,zero,9014 <___vfiprintf_internal_r+0x12c4>
    8878:	013fdfc4 	movi	r4,-129
    887c:	9d04b03a 	or	r2,r19,r20
    8880:	d8c02215 	stw	r3,136(sp)
    8884:	8922703a 	and	r17,r17,r4
    8888:	002b883a 	mov	r21,zero
    888c:	103f2f1e 	bne	r2,zero,854c <__alt_data_end+0xfffe854c>
    8890:	803e2f26 	beq	r16,zero,8150 <__alt_data_end+0xfffe8150>
    8894:	0027883a 	mov	r19,zero
    8898:	9cc00c04 	addi	r19,r19,48
    889c:	dcc019c5 	stb	r19,103(sp)
    88a0:	dd002817 	ldw	r20,160(sp)
    88a4:	ddc019c4 	addi	r23,sp,103
    88a8:	003e2c06 	br	815c <__alt_data_end+0xfffe815c>
    88ac:	9cc03fcc 	andi	r19,r19,255
    88b0:	b811883a 	mov	r8,r23
    88b4:	9802571e 	bne	r19,zero,9214 <___vfiprintf_internal_r+0x14c4>
    88b8:	18005726 	beq	r3,zero,8a18 <___vfiprintf_internal_r+0xcc8>
    88bc:	04c00044 	movi	r19,1
    88c0:	d8c01005 	stb	r3,64(sp)
    88c4:	d8001d85 	stb	zero,118(sp)
    88c8:	9829883a 	mov	r20,r19
    88cc:	ddc01004 	addi	r23,sp,64
    88d0:	003f0a06 	br	84fc <__alt_data_end+0xfffe84fc>
    88d4:	d9402017 	ldw	r5,128(sp)
    88d8:	d9002117 	ldw	r4,132(sp)
    88dc:	d9801a04 	addi	r6,sp,104
    88e0:	da802a15 	stw	r10,168(sp)
    88e4:	0007c3c0 	call	7c3c <__sprint_r.part.0>
    88e8:	da802a17 	ldw	r10,168(sp)
    88ec:	1000501e 	bne	r2,zero,8a30 <___vfiprintf_internal_r+0xce0>
    88f0:	d9801b17 	ldw	r6,108(sp)
    88f4:	d8801c17 	ldw	r2,112(sp)
    88f8:	d811883a 	mov	r8,sp
    88fc:	31000044 	addi	r4,r6,1
    8900:	003e3606 	br	81dc <__alt_data_end+0xfffe81dc>
    8904:	d9001b17 	ldw	r4,108(sp)
    8908:	d8801c17 	ldw	r2,112(sp)
    890c:	21400044 	addi	r5,r4,1
    8910:	d9801d87 	ldb	r6,118(sp)
    8914:	303e5226 	beq	r6,zero,8260 <__alt_data_end+0xfffe8260>
    8918:	01800044 	movi	r6,1
    891c:	d9001d84 	addi	r4,sp,118
    8920:	1185883a 	add	r2,r2,r6
    8924:	41000015 	stw	r4,0(r8)
    8928:	41800115 	stw	r6,4(r8)
    892c:	d8801c15 	stw	r2,112(sp)
    8930:	d9401b15 	stw	r5,108(sp)
    8934:	010001c4 	movi	r4,7
    8938:	2140b00e 	bge	r4,r5,8bfc <___vfiprintf_internal_r+0xeac>
    893c:	1000f61e 	bne	r2,zero,8d18 <___vfiprintf_internal_r+0xfc8>
    8940:	3800b31e 	bne	r7,zero,8c10 <___vfiprintf_internal_r+0xec0>
    8944:	0009883a 	mov	r4,zero
    8948:	300b883a 	mov	r5,r6
    894c:	d811883a 	mov	r8,sp
    8950:	01802004 	movi	r6,128
    8954:	19be5226 	beq	r3,r6,82a0 <__alt_data_end+0xfffe82a0>
    8958:	8521c83a 	sub	r16,r16,r20
    895c:	043e790e 	bge	zero,r16,8344 <__alt_data_end+0xfffe8344>
    8960:	05400404 	movi	r21,16
    8964:	ac01b00e 	bge	r21,r16,9028 <___vfiprintf_internal_r+0x12d8>
    8968:	01400074 	movhi	r5,1
    896c:	297ea304 	addi	r5,r5,-1396
    8970:	d9402315 	stw	r5,140(sp)
    8974:	070001c4 	movi	fp,7
    8978:	00000506 	br	8990 <___vfiprintf_internal_r+0xc40>
    897c:	21400084 	addi	r5,r4,2
    8980:	42000204 	addi	r8,r8,8
    8984:	1809883a 	mov	r4,r3
    8988:	843ffc04 	addi	r16,r16,-16
    898c:	ac000d0e 	bge	r21,r16,89c4 <___vfiprintf_internal_r+0xc74>
    8990:	10800404 	addi	r2,r2,16
    8994:	20c00044 	addi	r3,r4,1
    8998:	44800015 	stw	r18,0(r8)
    899c:	45400115 	stw	r21,4(r8)
    89a0:	d8801c15 	stw	r2,112(sp)
    89a4:	d8c01b15 	stw	r3,108(sp)
    89a8:	e0fff40e 	bge	fp,r3,897c <__alt_data_end+0xfffe897c>
    89ac:	1000101e 	bne	r2,zero,89f0 <___vfiprintf_internal_r+0xca0>
    89b0:	843ffc04 	addi	r16,r16,-16
    89b4:	01400044 	movi	r5,1
    89b8:	0009883a 	mov	r4,zero
    89bc:	d811883a 	mov	r8,sp
    89c0:	ac3ff316 	blt	r21,r16,8990 <__alt_data_end+0xfffe8990>
    89c4:	d8c02317 	ldw	r3,140(sp)
    89c8:	1405883a 	add	r2,r2,r16
    89cc:	44000115 	stw	r16,4(r8)
    89d0:	40c00015 	stw	r3,0(r8)
    89d4:	d8801c15 	stw	r2,112(sp)
    89d8:	d9401b15 	stw	r5,108(sp)
    89dc:	00c001c4 	movi	r3,7
    89e0:	19401916 	blt	r3,r5,8a48 <___vfiprintf_internal_r+0xcf8>
    89e4:	42000204 	addi	r8,r8,8
    89e8:	29400044 	addi	r5,r5,1
    89ec:	003e5506 	br	8344 <__alt_data_end+0xfffe8344>
    89f0:	d9402017 	ldw	r5,128(sp)
    89f4:	d9002117 	ldw	r4,132(sp)
    89f8:	d9801a04 	addi	r6,sp,104
    89fc:	0007c3c0 	call	7c3c <__sprint_r.part.0>
    8a00:	10000b1e 	bne	r2,zero,8a30 <___vfiprintf_internal_r+0xce0>
    8a04:	d9001b17 	ldw	r4,108(sp)
    8a08:	d8801c17 	ldw	r2,112(sp)
    8a0c:	d811883a 	mov	r8,sp
    8a10:	21400044 	addi	r5,r4,1
    8a14:	003fdc06 	br	8988 <__alt_data_end+0xfffe8988>
    8a18:	d8801c17 	ldw	r2,112(sp)
    8a1c:	10000426 	beq	r2,zero,8a30 <___vfiprintf_internal_r+0xce0>
    8a20:	d9402017 	ldw	r5,128(sp)
    8a24:	d9002117 	ldw	r4,132(sp)
    8a28:	d9801a04 	addi	r6,sp,104
    8a2c:	0007c3c0 	call	7c3c <__sprint_r.part.0>
    8a30:	d9402017 	ldw	r5,128(sp)
    8a34:	2880030b 	ldhu	r2,12(r5)
    8a38:	1080100c 	andi	r2,r2,64
    8a3c:	10014d1e 	bne	r2,zero,8f74 <___vfiprintf_internal_r+0x1224>
    8a40:	d8802417 	ldw	r2,144(sp)
    8a44:	003d9706 	br	80a4 <__alt_data_end+0xfffe80a4>
    8a48:	1000d21e 	bne	r2,zero,8d94 <___vfiprintf_internal_r+0x1044>
    8a4c:	00c00044 	movi	r3,1
    8a50:	a005883a 	mov	r2,r20
    8a54:	ddc00015 	stw	r23,0(sp)
    8a58:	dd000115 	stw	r20,4(sp)
    8a5c:	dd001c15 	stw	r20,112(sp)
    8a60:	d8c01b15 	stw	r3,108(sp)
    8a64:	d811883a 	mov	r8,sp
    8a68:	42000204 	addi	r8,r8,8
    8a6c:	8c40010c 	andi	r17,r17,4
    8a70:	88004026 	beq	r17,zero,8b74 <___vfiprintf_internal_r+0xe24>
    8a74:	d9002517 	ldw	r4,148(sp)
    8a78:	24e3c83a 	sub	r17,r4,r19
    8a7c:	04403d0e 	bge	zero,r17,8b74 <___vfiprintf_internal_r+0xe24>
    8a80:	04000404 	movi	r16,16
    8a84:	8441a90e 	bge	r16,r17,912c <___vfiprintf_internal_r+0x13dc>
    8a88:	00c00074 	movhi	r3,1
    8a8c:	18fea704 	addi	r3,r3,-1380
    8a90:	d9001b17 	ldw	r4,108(sp)
    8a94:	d8c02315 	stw	r3,140(sp)
    8a98:	050001c4 	movi	r20,7
    8a9c:	dd402117 	ldw	r21,132(sp)
    8aa0:	ddc02017 	ldw	r23,128(sp)
    8aa4:	00000506 	br	8abc <___vfiprintf_internal_r+0xd6c>
    8aa8:	21400084 	addi	r5,r4,2
    8aac:	42000204 	addi	r8,r8,8
    8ab0:	1809883a 	mov	r4,r3
    8ab4:	8c7ffc04 	addi	r17,r17,-16
    8ab8:	84400f0e 	bge	r16,r17,8af8 <___vfiprintf_internal_r+0xda8>
    8abc:	01400074 	movhi	r5,1
    8ac0:	10800404 	addi	r2,r2,16
    8ac4:	20c00044 	addi	r3,r4,1
    8ac8:	297ea704 	addi	r5,r5,-1380
    8acc:	41400015 	stw	r5,0(r8)
    8ad0:	44000115 	stw	r16,4(r8)
    8ad4:	d8801c15 	stw	r2,112(sp)
    8ad8:	d8c01b15 	stw	r3,108(sp)
    8adc:	a0fff20e 	bge	r20,r3,8aa8 <__alt_data_end+0xfffe8aa8>
    8ae0:	1000141e 	bne	r2,zero,8b34 <___vfiprintf_internal_r+0xde4>
    8ae4:	8c7ffc04 	addi	r17,r17,-16
    8ae8:	01400044 	movi	r5,1
    8aec:	0009883a 	mov	r4,zero
    8af0:	d811883a 	mov	r8,sp
    8af4:	847ff116 	blt	r16,r17,8abc <__alt_data_end+0xfffe8abc>
    8af8:	d8c02317 	ldw	r3,140(sp)
    8afc:	1445883a 	add	r2,r2,r17
    8b00:	44400115 	stw	r17,4(r8)
    8b04:	40c00015 	stw	r3,0(r8)
    8b08:	d8801c15 	stw	r2,112(sp)
    8b0c:	d9401b15 	stw	r5,108(sp)
    8b10:	00c001c4 	movi	r3,7
    8b14:	1940170e 	bge	r3,r5,8b74 <___vfiprintf_internal_r+0xe24>
    8b18:	1000101e 	bne	r2,zero,8b5c <___vfiprintf_internal_r+0xe0c>
    8b1c:	d8802517 	ldw	r2,148(sp)
    8b20:	14c11616 	blt	r2,r19,8f7c <___vfiprintf_internal_r+0x122c>
    8b24:	d9002417 	ldw	r4,144(sp)
    8b28:	2089883a 	add	r4,r4,r2
    8b2c:	d9002415 	stw	r4,144(sp)
    8b30:	003e1806 	br	8394 <__alt_data_end+0xfffe8394>
    8b34:	d9801a04 	addi	r6,sp,104
    8b38:	b80b883a 	mov	r5,r23
    8b3c:	a809883a 	mov	r4,r21
    8b40:	0007c3c0 	call	7c3c <__sprint_r.part.0>
    8b44:	103fba1e 	bne	r2,zero,8a30 <__alt_data_end+0xfffe8a30>
    8b48:	d9001b17 	ldw	r4,108(sp)
    8b4c:	d8801c17 	ldw	r2,112(sp)
    8b50:	d811883a 	mov	r8,sp
    8b54:	21400044 	addi	r5,r4,1
    8b58:	003fd606 	br	8ab4 <__alt_data_end+0xfffe8ab4>
    8b5c:	d9402017 	ldw	r5,128(sp)
    8b60:	d9002117 	ldw	r4,132(sp)
    8b64:	d9801a04 	addi	r6,sp,104
    8b68:	0007c3c0 	call	7c3c <__sprint_r.part.0>
    8b6c:	103fb01e 	bne	r2,zero,8a30 <__alt_data_end+0xfffe8a30>
    8b70:	d8801c17 	ldw	r2,112(sp)
    8b74:	d8c02517 	ldw	r3,148(sp)
    8b78:	1cc0010e 	bge	r3,r19,8b80 <___vfiprintf_internal_r+0xe30>
    8b7c:	9807883a 	mov	r3,r19
    8b80:	d9002417 	ldw	r4,144(sp)
    8b84:	20c9883a 	add	r4,r4,r3
    8b88:	d9002415 	stw	r4,144(sp)
    8b8c:	103e0126 	beq	r2,zero,8394 <__alt_data_end+0xfffe8394>
    8b90:	d9402017 	ldw	r5,128(sp)
    8b94:	d9002117 	ldw	r4,132(sp)
    8b98:	d9801a04 	addi	r6,sp,104
    8b9c:	0007c3c0 	call	7c3c <__sprint_r.part.0>
    8ba0:	103dfc26 	beq	r2,zero,8394 <__alt_data_end+0xfffe8394>
    8ba4:	003fa206 	br	8a30 <__alt_data_end+0xfffe8a30>
    8ba8:	d9402017 	ldw	r5,128(sp)
    8bac:	d9002117 	ldw	r4,132(sp)
    8bb0:	d9801a04 	addi	r6,sp,104
    8bb4:	d9c02b15 	stw	r7,172(sp)
    8bb8:	0007c3c0 	call	7c3c <__sprint_r.part.0>
    8bbc:	d9c02b17 	ldw	r7,172(sp)
    8bc0:	103f9b1e 	bne	r2,zero,8a30 <__alt_data_end+0xfffe8a30>
    8bc4:	d9001b17 	ldw	r4,108(sp)
    8bc8:	d8801c17 	ldw	r2,112(sp)
    8bcc:	d811883a 	mov	r8,sp
    8bd0:	21800044 	addi	r6,r4,1
    8bd4:	003dbf06 	br	82d4 <__alt_data_end+0xfffe82d4>
    8bd8:	1000d81e 	bne	r2,zero,8f3c <___vfiprintf_internal_r+0x11ec>
    8bdc:	d9001d87 	ldb	r4,118(sp)
    8be0:	20000a26 	beq	r4,zero,8c0c <___vfiprintf_internal_r+0xebc>
    8be4:	00800044 	movi	r2,1
    8be8:	d9001d84 	addi	r4,sp,118
    8bec:	100b883a 	mov	r5,r2
    8bf0:	d9000015 	stw	r4,0(sp)
    8bf4:	d8800115 	stw	r2,4(sp)
    8bf8:	d811883a 	mov	r8,sp
    8bfc:	2809883a 	mov	r4,r5
    8c00:	42000204 	addi	r8,r8,8
    8c04:	29400044 	addi	r5,r5,1
    8c08:	003d9506 	br	8260 <__alt_data_end+0xfffe8260>
    8c0c:	3800fd26 	beq	r7,zero,9004 <___vfiprintf_internal_r+0x12b4>
    8c10:	00800084 	movi	r2,2
    8c14:	d9001d04 	addi	r4,sp,116
    8c18:	d9000015 	stw	r4,0(sp)
    8c1c:	d8800115 	stw	r2,4(sp)
    8c20:	01400044 	movi	r5,1
    8c24:	d811883a 	mov	r8,sp
    8c28:	2809883a 	mov	r4,r5
    8c2c:	42000204 	addi	r8,r8,8
    8c30:	29400044 	addi	r5,r5,1
    8c34:	003f4606 	br	8950 <__alt_data_end+0xfffe8950>
    8c38:	d8802517 	ldw	r2,148(sp)
    8c3c:	14c0010e 	bge	r2,r19,8c44 <___vfiprintf_internal_r+0xef4>
    8c40:	9805883a 	mov	r2,r19
    8c44:	d9402417 	ldw	r5,144(sp)
    8c48:	288b883a 	add	r5,r5,r2
    8c4c:	d9402415 	stw	r5,144(sp)
    8c50:	003dd006 	br	8394 <__alt_data_end+0xfffe8394>
    8c54:	d8001d85 	stb	zero,118(sp)
    8c58:	80005d16 	blt	r16,zero,8dd0 <___vfiprintf_internal_r+0x1080>
    8c5c:	00ffdfc4 	movi	r3,-129
    8c60:	9d04b03a 	or	r2,r19,r20
    8c64:	88e2703a 	and	r17,r17,r3
    8c68:	103d3726 	beq	r2,zero,8148 <__alt_data_end+0xfffe8148>
    8c6c:	002b883a 	mov	r21,zero
    8c70:	d9002617 	ldw	r4,152(sp)
    8c74:	ddc01a04 	addi	r23,sp,104
    8c78:	988003cc 	andi	r2,r19,15
    8c7c:	a006973a 	slli	r3,r20,28
    8c80:	2085883a 	add	r2,r4,r2
    8c84:	9826d13a 	srli	r19,r19,4
    8c88:	10800003 	ldbu	r2,0(r2)
    8c8c:	a028d13a 	srli	r20,r20,4
    8c90:	bdffffc4 	addi	r23,r23,-1
    8c94:	1ce6b03a 	or	r19,r3,r19
    8c98:	b8800005 	stb	r2,0(r23)
    8c9c:	9d04b03a 	or	r2,r19,r20
    8ca0:	103ff51e 	bne	r2,zero,8c78 <__alt_data_end+0xfffe8c78>
    8ca4:	d8801e17 	ldw	r2,120(sp)
    8ca8:	15e9c83a 	sub	r20,r2,r23
    8cac:	003d2b06 	br	815c <__alt_data_end+0xfffe815c>
    8cb0:	d9402017 	ldw	r5,128(sp)
    8cb4:	d9002117 	ldw	r4,132(sp)
    8cb8:	d9801a04 	addi	r6,sp,104
    8cbc:	0007c3c0 	call	7c3c <__sprint_r.part.0>
    8cc0:	103f5b1e 	bne	r2,zero,8a30 <__alt_data_end+0xfffe8a30>
    8cc4:	d8801c17 	ldw	r2,112(sp)
    8cc8:	d811883a 	mov	r8,sp
    8ccc:	003f6706 	br	8a6c <__alt_data_end+0xfffe8a6c>
    8cd0:	d9402017 	ldw	r5,128(sp)
    8cd4:	d9002117 	ldw	r4,132(sp)
    8cd8:	d9801a04 	addi	r6,sp,104
    8cdc:	0007c3c0 	call	7c3c <__sprint_r.part.0>
    8ce0:	103f531e 	bne	r2,zero,8a30 <__alt_data_end+0xfffe8a30>
    8ce4:	d811883a 	mov	r8,sp
    8ce8:	003cd906 	br	8050 <__alt_data_end+0xfffe8050>
    8cec:	10803fcc 	andi	r2,r2,255
    8cf0:	1080201c 	xori	r2,r2,128
    8cf4:	10bfe004 	addi	r2,r2,-128
    8cf8:	00c00c04 	movi	r3,48
    8cfc:	10ffe926 	beq	r2,r3,8ca4 <__alt_data_end+0xfffe8ca4>
    8d00:	b8ffffc5 	stb	r3,-1(r23)
    8d04:	d8c01e17 	ldw	r3,120(sp)
    8d08:	b8bfffc4 	addi	r2,r23,-1
    8d0c:	102f883a 	mov	r23,r2
    8d10:	18a9c83a 	sub	r20,r3,r2
    8d14:	003d1106 	br	815c <__alt_data_end+0xfffe815c>
    8d18:	d9402017 	ldw	r5,128(sp)
    8d1c:	d9002117 	ldw	r4,132(sp)
    8d20:	d9801a04 	addi	r6,sp,104
    8d24:	d8c02a15 	stw	r3,168(sp)
    8d28:	d9c02b15 	stw	r7,172(sp)
    8d2c:	0007c3c0 	call	7c3c <__sprint_r.part.0>
    8d30:	d8c02a17 	ldw	r3,168(sp)
    8d34:	d9c02b17 	ldw	r7,172(sp)
    8d38:	103f3d1e 	bne	r2,zero,8a30 <__alt_data_end+0xfffe8a30>
    8d3c:	d9001b17 	ldw	r4,108(sp)
    8d40:	d8801c17 	ldw	r2,112(sp)
    8d44:	d811883a 	mov	r8,sp
    8d48:	21400044 	addi	r5,r4,1
    8d4c:	003d4406 	br	8260 <__alt_data_end+0xfffe8260>
    8d50:	d9402017 	ldw	r5,128(sp)
    8d54:	d9002117 	ldw	r4,132(sp)
    8d58:	d9801a04 	addi	r6,sp,104
    8d5c:	d8c02a15 	stw	r3,168(sp)
    8d60:	0007c3c0 	call	7c3c <__sprint_r.part.0>
    8d64:	d8c02a17 	ldw	r3,168(sp)
    8d68:	103f311e 	bne	r2,zero,8a30 <__alt_data_end+0xfffe8a30>
    8d6c:	d9001b17 	ldw	r4,108(sp)
    8d70:	d8801c17 	ldw	r2,112(sp)
    8d74:	d811883a 	mov	r8,sp
    8d78:	21400044 	addi	r5,r4,1
    8d7c:	003ef406 	br	8950 <__alt_data_end+0xfffe8950>
    8d80:	1000bd1e 	bne	r2,zero,9078 <___vfiprintf_internal_r+0x1328>
    8d84:	01400044 	movi	r5,1
    8d88:	0009883a 	mov	r4,zero
    8d8c:	d811883a 	mov	r8,sp
    8d90:	003ef106 	br	8958 <__alt_data_end+0xfffe8958>
    8d94:	d9402017 	ldw	r5,128(sp)
    8d98:	d9002117 	ldw	r4,132(sp)
    8d9c:	d9801a04 	addi	r6,sp,104
    8da0:	0007c3c0 	call	7c3c <__sprint_r.part.0>
    8da4:	103f221e 	bne	r2,zero,8a30 <__alt_data_end+0xfffe8a30>
    8da8:	d9401b17 	ldw	r5,108(sp)
    8dac:	d8801c17 	ldw	r2,112(sp)
    8db0:	d811883a 	mov	r8,sp
    8db4:	29400044 	addi	r5,r5,1
    8db8:	003d6206 	br	8344 <__alt_data_end+0xfffe8344>
    8dbc:	01400074 	movhi	r5,1
    8dc0:	297e4204 	addi	r5,r5,-1784
    8dc4:	d9402615 	stw	r5,152(sp)
    8dc8:	d8c02215 	stw	r3,136(sp)
    8dcc:	1023883a 	mov	r17,r2
    8dd0:	9d04b03a 	or	r2,r19,r20
    8dd4:	103fa51e 	bne	r2,zero,8c6c <__alt_data_end+0xfffe8c6c>
    8dd8:	002b883a 	mov	r21,zero
    8ddc:	00800084 	movi	r2,2
    8de0:	003e4a06 	br	870c <__alt_data_end+0xfffe870c>
    8de4:	01400074 	movhi	r5,1
    8de8:	297e4204 	addi	r5,r5,-1784
    8dec:	002b883a 	mov	r21,zero
    8df0:	d9402615 	stw	r5,152(sp)
    8df4:	003f9e06 	br	8c70 <__alt_data_end+0xfffe8c70>
    8df8:	d9402217 	ldw	r5,136(sp)
    8dfc:	d8001d85 	stb	zero,118(sp)
    8e00:	0029883a 	mov	r20,zero
    8e04:	28800104 	addi	r2,r5,4
    8e08:	2cc00017 	ldw	r19,0(r5)
    8e0c:	803e3a16 	blt	r16,zero,86f8 <__alt_data_end+0xfffe86f8>
    8e10:	00ffdfc4 	movi	r3,-129
    8e14:	d8802215 	stw	r2,136(sp)
    8e18:	88e2703a 	and	r17,r17,r3
    8e1c:	002b883a 	mov	r21,zero
    8e20:	983e9b26 	beq	r19,zero,8890 <__alt_data_end+0xfffe8890>
    8e24:	00800244 	movi	r2,9
    8e28:	14fdc936 	bltu	r2,r19,8550 <__alt_data_end+0xfffe8550>
    8e2c:	003e9a06 	br	8898 <__alt_data_end+0xfffe8898>
    8e30:	00800c04 	movi	r2,48
    8e34:	d8c01d45 	stb	r3,117(sp)
    8e38:	d8801d05 	stb	r2,116(sp)
    8e3c:	d8001d85 	stb	zero,118(sp)
    8e40:	88c00094 	ori	r3,r17,2
    8e44:	80009c16 	blt	r16,zero,90b8 <___vfiprintf_internal_r+0x1368>
    8e48:	00bfdfc4 	movi	r2,-129
    8e4c:	88a2703a 	and	r17,r17,r2
    8e50:	8c400094 	ori	r17,r17,2
    8e54:	002b883a 	mov	r21,zero
    8e58:	003f8506 	br	8c70 <__alt_data_end+0xfffe8c70>
    8e5c:	b029883a 	mov	r20,r22
    8e60:	003c0b06 	br	7e90 <__alt_data_end+0xfffe7e90>
    8e64:	04e7c83a 	sub	r19,zero,r19
    8e68:	05400b44 	movi	r21,45
    8e6c:	9804c03a 	cmpne	r2,r19,zero
    8e70:	0529c83a 	sub	r20,zero,r20
    8e74:	dd401d85 	stb	r21,118(sp)
    8e78:	a0a9c83a 	sub	r20,r20,r2
    8e7c:	80009716 	blt	r16,zero,90dc <___vfiprintf_internal_r+0x138c>
    8e80:	00bfdfc4 	movi	r2,-129
    8e84:	88a2703a 	and	r17,r17,r2
    8e88:	003db006 	br	854c <__alt_data_end+0xfffe854c>
    8e8c:	b0c00007 	ldb	r3,0(r22)
    8e90:	003c0c06 	br	7ec4 <__alt_data_end+0xfffe7ec4>
    8e94:	8880100c 	andi	r2,r17,64
    8e98:	d8001d85 	stb	zero,118(sp)
    8e9c:	1000461e 	bne	r2,zero,8fb8 <___vfiprintf_internal_r+0x1268>
    8ea0:	d9002217 	ldw	r4,136(sp)
    8ea4:	0029883a 	mov	r20,zero
    8ea8:	20800104 	addi	r2,r4,4
    8eac:	24c00017 	ldw	r19,0(r4)
    8eb0:	803df80e 	bge	r16,zero,8694 <__alt_data_end+0xfffe8694>
    8eb4:	9d06b03a 	or	r3,r19,r20
    8eb8:	d8802215 	stw	r2,136(sp)
    8ebc:	183d5e1e 	bne	r3,zero,8438 <__alt_data_end+0xfffe8438>
    8ec0:	002b883a 	mov	r21,zero
    8ec4:	0005883a 	mov	r2,zero
    8ec8:	003e1006 	br	870c <__alt_data_end+0xfffe870c>
    8ecc:	8880040c 	andi	r2,r17,16
    8ed0:	1000321e 	bne	r2,zero,8f9c <___vfiprintf_internal_r+0x124c>
    8ed4:	8c40100c 	andi	r17,r17,64
    8ed8:	88008d26 	beq	r17,zero,9110 <___vfiprintf_internal_r+0x13c0>
    8edc:	d9402217 	ldw	r5,136(sp)
    8ee0:	d8c02417 	ldw	r3,144(sp)
    8ee4:	28800017 	ldw	r2,0(r5)
    8ee8:	29400104 	addi	r5,r5,4
    8eec:	d9402215 	stw	r5,136(sp)
    8ef0:	10c0000d 	sth	r3,0(r2)
    8ef4:	003bca06 	br	7e20 <__alt_data_end+0xfffe7e20>
    8ef8:	8880100c 	andi	r2,r17,64
    8efc:	10003a26 	beq	r2,zero,8fe8 <___vfiprintf_internal_r+0x1298>
    8f00:	d8802217 	ldw	r2,136(sp)
    8f04:	14c0000f 	ldh	r19,0(r2)
    8f08:	10800104 	addi	r2,r2,4
    8f0c:	d8802215 	stw	r2,136(sp)
    8f10:	9829d7fa 	srai	r20,r19,31
    8f14:	a005883a 	mov	r2,r20
    8f18:	003d8506 	br	8530 <__alt_data_end+0xfffe8530>
    8f1c:	8880100c 	andi	r2,r17,64
    8f20:	10002b26 	beq	r2,zero,8fd0 <___vfiprintf_internal_r+0x1280>
    8f24:	d8802217 	ldw	r2,136(sp)
    8f28:	0029883a 	mov	r20,zero
    8f2c:	14c0000b 	ldhu	r19,0(r2)
    8f30:	10800104 	addi	r2,r2,4
    8f34:	d8802215 	stw	r2,136(sp)
    8f38:	003d5d06 	br	84b0 <__alt_data_end+0xfffe84b0>
    8f3c:	d9402017 	ldw	r5,128(sp)
    8f40:	d9002117 	ldw	r4,132(sp)
    8f44:	d9801a04 	addi	r6,sp,104
    8f48:	d8c02a15 	stw	r3,168(sp)
    8f4c:	d9c02b15 	stw	r7,172(sp)
    8f50:	0007c3c0 	call	7c3c <__sprint_r.part.0>
    8f54:	d8c02a17 	ldw	r3,168(sp)
    8f58:	d9c02b17 	ldw	r7,172(sp)
    8f5c:	103eb41e 	bne	r2,zero,8a30 <__alt_data_end+0xfffe8a30>
    8f60:	d9001b17 	ldw	r4,108(sp)
    8f64:	d8801c17 	ldw	r2,112(sp)
    8f68:	d811883a 	mov	r8,sp
    8f6c:	21400044 	addi	r5,r4,1
    8f70:	003e6706 	br	8910 <__alt_data_end+0xfffe8910>
    8f74:	00bfffc4 	movi	r2,-1
    8f78:	003c4a06 	br	80a4 <__alt_data_end+0xfffe80a4>
    8f7c:	9805883a 	mov	r2,r19
    8f80:	003ee806 	br	8b24 <__alt_data_end+0xfffe8b24>
    8f84:	d8c02217 	ldw	r3,136(sp)
    8f88:	0029883a 	mov	r20,zero
    8f8c:	18800104 	addi	r2,r3,4
    8f90:	1cc0000b 	ldhu	r19,0(r3)
    8f94:	803f9e0e 	bge	r16,zero,8e10 <__alt_data_end+0xfffe8e10>
    8f98:	003dd706 	br	86f8 <__alt_data_end+0xfffe86f8>
    8f9c:	d8c02217 	ldw	r3,136(sp)
    8fa0:	d9002417 	ldw	r4,144(sp)
    8fa4:	18800017 	ldw	r2,0(r3)
    8fa8:	18c00104 	addi	r3,r3,4
    8fac:	d8c02215 	stw	r3,136(sp)
    8fb0:	11000015 	stw	r4,0(r2)
    8fb4:	003b9a06 	br	7e20 <__alt_data_end+0xfffe7e20>
    8fb8:	d8c02217 	ldw	r3,136(sp)
    8fbc:	0029883a 	mov	r20,zero
    8fc0:	18800104 	addi	r2,r3,4
    8fc4:	1cc0000b 	ldhu	r19,0(r3)
    8fc8:	803db20e 	bge	r16,zero,8694 <__alt_data_end+0xfffe8694>
    8fcc:	003fb906 	br	8eb4 <__alt_data_end+0xfffe8eb4>
    8fd0:	d9002217 	ldw	r4,136(sp)
    8fd4:	0029883a 	mov	r20,zero
    8fd8:	24c00017 	ldw	r19,0(r4)
    8fdc:	21000104 	addi	r4,r4,4
    8fe0:	d9002215 	stw	r4,136(sp)
    8fe4:	003d3206 	br	84b0 <__alt_data_end+0xfffe84b0>
    8fe8:	d8c02217 	ldw	r3,136(sp)
    8fec:	1cc00017 	ldw	r19,0(r3)
    8ff0:	18c00104 	addi	r3,r3,4
    8ff4:	d8c02215 	stw	r3,136(sp)
    8ff8:	9829d7fa 	srai	r20,r19,31
    8ffc:	a005883a 	mov	r2,r20
    9000:	003d4b06 	br	8530 <__alt_data_end+0xfffe8530>
    9004:	0009883a 	mov	r4,zero
    9008:	01400044 	movi	r5,1
    900c:	d811883a 	mov	r8,sp
    9010:	003e4f06 	br	8950 <__alt_data_end+0xfffe8950>
    9014:	d8c02215 	stw	r3,136(sp)
    9018:	002b883a 	mov	r21,zero
    901c:	003db806 	br	8700 <__alt_data_end+0xfffe8700>
    9020:	d811883a 	mov	r8,sp
    9024:	003e9606 	br	8a80 <__alt_data_end+0xfffe8a80>
    9028:	01000074 	movhi	r4,1
    902c:	213ea304 	addi	r4,r4,-1396
    9030:	d9002315 	stw	r4,140(sp)
    9034:	003e6306 	br	89c4 <__alt_data_end+0xfffe89c4>
    9038:	b0c00043 	ldbu	r3,1(r22)
    903c:	8c400814 	ori	r17,r17,32
    9040:	b5800044 	addi	r22,r22,1
    9044:	18c03fcc 	andi	r3,r3,255
    9048:	18c0201c 	xori	r3,r3,128
    904c:	18ffe004 	addi	r3,r3,-128
    9050:	003b9c06 	br	7ec4 <__alt_data_end+0xfffe7ec4>
    9054:	b809883a 	mov	r4,r23
    9058:	da002a15 	stw	r8,168(sp)
    905c:	00004c00 	call	4c0 <strlen>
    9060:	1029883a 	mov	r20,r2
    9064:	dd401d83 	ldbu	r21,118(sp)
    9068:	df002215 	stw	fp,136(sp)
    906c:	0021883a 	mov	r16,zero
    9070:	da002a17 	ldw	r8,168(sp)
    9074:	003c3906 	br	815c <__alt_data_end+0xfffe815c>
    9078:	d9402017 	ldw	r5,128(sp)
    907c:	d9002117 	ldw	r4,132(sp)
    9080:	d9801a04 	addi	r6,sp,104
    9084:	0007c3c0 	call	7c3c <__sprint_r.part.0>
    9088:	103e691e 	bne	r2,zero,8a30 <__alt_data_end+0xfffe8a30>
    908c:	d9001b17 	ldw	r4,108(sp)
    9090:	d8801c17 	ldw	r2,112(sp)
    9094:	d811883a 	mov	r8,sp
    9098:	21400044 	addi	r5,r4,1
    909c:	003e2e06 	br	8958 <__alt_data_end+0xfffe8958>
    90a0:	01000074 	movhi	r4,1
    90a4:	213ea704 	addi	r4,r4,-1380
    90a8:	d9002315 	stw	r4,140(sp)
    90ac:	d9001b17 	ldw	r4,108(sp)
    90b0:	21000044 	addi	r4,r4,1
    90b4:	003c5e06 	br	8230 <__alt_data_end+0xfffe8230>
    90b8:	002b883a 	mov	r21,zero
    90bc:	00800084 	movi	r2,2
    90c0:	10803fcc 	andi	r2,r2,255
    90c4:	01000044 	movi	r4,1
    90c8:	11002b26 	beq	r2,r4,9178 <___vfiprintf_internal_r+0x1428>
    90cc:	01000084 	movi	r4,2
    90d0:	11002b1e 	bne	r2,r4,9180 <___vfiprintf_internal_r+0x1430>
    90d4:	1823883a 	mov	r17,r3
    90d8:	003ee506 	br	8c70 <__alt_data_end+0xfffe8c70>
    90dc:	8807883a 	mov	r3,r17
    90e0:	00800044 	movi	r2,1
    90e4:	003ff606 	br	90c0 <__alt_data_end+0xfffe90c0>
    90e8:	00800184 	movi	r2,6
    90ec:	1400012e 	bgeu	r2,r16,90f4 <___vfiprintf_internal_r+0x13a4>
    90f0:	1021883a 	mov	r16,r2
    90f4:	8029883a 	mov	r20,r16
    90f8:	8027883a 	mov	r19,r16
    90fc:	80002216 	blt	r16,zero,9188 <___vfiprintf_internal_r+0x1438>
    9100:	05c00074 	movhi	r23,1
    9104:	df002215 	stw	fp,136(sp)
    9108:	bdfe4704 	addi	r23,r23,-1764
    910c:	003cfb06 	br	84fc <__alt_data_end+0xfffe84fc>
    9110:	d9002217 	ldw	r4,136(sp)
    9114:	d9402417 	ldw	r5,144(sp)
    9118:	20800017 	ldw	r2,0(r4)
    911c:	21000104 	addi	r4,r4,4
    9120:	d9002215 	stw	r4,136(sp)
    9124:	11400015 	stw	r5,0(r2)
    9128:	003b3d06 	br	7e20 <__alt_data_end+0xfffe7e20>
    912c:	01400074 	movhi	r5,1
    9130:	297ea704 	addi	r5,r5,-1380
    9134:	d9402315 	stw	r5,140(sp)
    9138:	d9401b17 	ldw	r5,108(sp)
    913c:	29400044 	addi	r5,r5,1
    9140:	003e6d06 	br	8af8 <__alt_data_end+0xfffe8af8>
    9144:	8029883a 	mov	r20,r16
    9148:	dd401d83 	ldbu	r21,118(sp)
    914c:	df002215 	stw	fp,136(sp)
    9150:	0021883a 	mov	r16,zero
    9154:	003c0106 	br	815c <__alt_data_end+0xfffe815c>
    9158:	00c00074 	movhi	r3,1
    915c:	18fea304 	addi	r3,r3,-1396
    9160:	d8c02315 	stw	r3,140(sp)
    9164:	280d883a 	mov	r6,r5
    9168:	003c6906 	br	8310 <__alt_data_end+0xfffe8310>
    916c:	802d883a 	mov	r22,r16
    9170:	0021883a 	mov	r16,zero
    9174:	003b5406 	br	7ec8 <__alt_data_end+0xfffe7ec8>
    9178:	1823883a 	mov	r17,r3
    917c:	003cf306 	br	854c <__alt_data_end+0xfffe854c>
    9180:	1823883a 	mov	r17,r3
    9184:	003cad06 	br	843c <__alt_data_end+0xfffe843c>
    9188:	0027883a 	mov	r19,zero
    918c:	003fdc06 	br	9100 <__alt_data_end+0xfffe9100>
    9190:	d9402217 	ldw	r5,136(sp)
    9194:	8005883a 	mov	r2,r16
    9198:	b0c00043 	ldbu	r3,1(r22)
    919c:	2c000017 	ldw	r16,0(r5)
    91a0:	29000104 	addi	r4,r5,4
    91a4:	d9002215 	stw	r4,136(sp)
    91a8:	102d883a 	mov	r22,r2
    91ac:	803fa50e 	bge	r16,zero,9044 <__alt_data_end+0xfffe9044>
    91b0:	18c03fcc 	andi	r3,r3,255
    91b4:	18c0201c 	xori	r3,r3,128
    91b8:	043fffc4 	movi	r16,-1
    91bc:	18ffe004 	addi	r3,r3,-128
    91c0:	003b4006 	br	7ec4 <__alt_data_end+0xfffe7ec4>
    91c4:	d9402303 	ldbu	r5,140(sp)
    91c8:	d9401d85 	stb	r5,118(sp)
    91cc:	003cae06 	br	8488 <__alt_data_end+0xfffe8488>
    91d0:	d8c02303 	ldbu	r3,140(sp)
    91d4:	d8c01d85 	stb	r3,118(sp)
    91d8:	003d1406 	br	862c <__alt_data_end+0xfffe862c>
    91dc:	d8c02303 	ldbu	r3,140(sp)
    91e0:	d8c01d85 	stb	r3,118(sp)
    91e4:	003cca06 	br	8510 <__alt_data_end+0xfffe8510>
    91e8:	8880004c 	andi	r2,r17,1
    91ec:	002b883a 	mov	r21,zero
    91f0:	10000526 	beq	r2,zero,9208 <___vfiprintf_internal_r+0x14b8>
    91f4:	00800c04 	movi	r2,48
    91f8:	d88019c5 	stb	r2,103(sp)
    91fc:	dd002817 	ldw	r20,160(sp)
    9200:	ddc019c4 	addi	r23,sp,103
    9204:	003bd506 	br	815c <__alt_data_end+0xfffe815c>
    9208:	0029883a 	mov	r20,zero
    920c:	ddc01a04 	addi	r23,sp,104
    9210:	003bd206 	br	815c <__alt_data_end+0xfffe815c>
    9214:	d9002303 	ldbu	r4,140(sp)
    9218:	d9001d85 	stb	r4,118(sp)
    921c:	003da606 	br	88b8 <__alt_data_end+0xfffe88b8>
    9220:	d8c02303 	ldbu	r3,140(sp)
    9224:	d8c01d85 	stb	r3,118(sp)
    9228:	003c7606 	br	8404 <__alt_data_end+0xfffe8404>
    922c:	d8c02303 	ldbu	r3,140(sp)
    9230:	d8c01d85 	stb	r3,118(sp)
    9234:	003c6506 	br	83cc <__alt_data_end+0xfffe83cc>
    9238:	d9002303 	ldbu	r4,140(sp)
    923c:	d9001d85 	stb	r4,118(sp)
    9240:	003d3d06 	br	8738 <__alt_data_end+0xfffe8738>
    9244:	d8c02303 	ldbu	r3,140(sp)
    9248:	d8c01d85 	stb	r3,118(sp)
    924c:	003d1d06 	br	86c4 <__alt_data_end+0xfffe86c4>
    9250:	d8c02303 	ldbu	r3,140(sp)
    9254:	d8c01d85 	stb	r3,118(sp)
    9258:	003d0306 	br	8668 <__alt_data_end+0xfffe8668>

0000925c <__vfiprintf_internal>:
    925c:	00800074 	movhi	r2,1
    9260:	1085a404 	addi	r2,r2,5776
    9264:	300f883a 	mov	r7,r6
    9268:	280d883a 	mov	r6,r5
    926c:	200b883a 	mov	r5,r4
    9270:	11000017 	ldw	r4,0(r2)
    9274:	0007d501 	jmpi	7d50 <___vfiprintf_internal_r>

00009278 <__sbprintf>:
    9278:	2880030b 	ldhu	r2,12(r5)
    927c:	2ac01917 	ldw	r11,100(r5)
    9280:	2a80038b 	ldhu	r10,14(r5)
    9284:	2a400717 	ldw	r9,28(r5)
    9288:	2a000917 	ldw	r8,36(r5)
    928c:	defee204 	addi	sp,sp,-1144
    9290:	00c10004 	movi	r3,1024
    9294:	dc011a15 	stw	r16,1128(sp)
    9298:	10bfff4c 	andi	r2,r2,65533
    929c:	2821883a 	mov	r16,r5
    92a0:	d8cb883a 	add	r5,sp,r3
    92a4:	dc811c15 	stw	r18,1136(sp)
    92a8:	dc411b15 	stw	r17,1132(sp)
    92ac:	dfc11d15 	stw	ra,1140(sp)
    92b0:	2025883a 	mov	r18,r4
    92b4:	d881030d 	sth	r2,1036(sp)
    92b8:	dac11915 	stw	r11,1124(sp)
    92bc:	da81038d 	sth	r10,1038(sp)
    92c0:	da410715 	stw	r9,1052(sp)
    92c4:	da010915 	stw	r8,1060(sp)
    92c8:	dec10015 	stw	sp,1024(sp)
    92cc:	dec10415 	stw	sp,1040(sp)
    92d0:	d8c10215 	stw	r3,1032(sp)
    92d4:	d8c10515 	stw	r3,1044(sp)
    92d8:	d8010615 	stw	zero,1048(sp)
    92dc:	0007d500 	call	7d50 <___vfiprintf_internal_r>
    92e0:	1023883a 	mov	r17,r2
    92e4:	10000416 	blt	r2,zero,92f8 <__sbprintf+0x80>
    92e8:	d9410004 	addi	r5,sp,1024
    92ec:	9009883a 	mov	r4,r18
    92f0:	000452c0 	call	452c <_fflush_r>
    92f4:	10000d1e 	bne	r2,zero,932c <__sbprintf+0xb4>
    92f8:	d881030b 	ldhu	r2,1036(sp)
    92fc:	1080100c 	andi	r2,r2,64
    9300:	10000326 	beq	r2,zero,9310 <__sbprintf+0x98>
    9304:	8080030b 	ldhu	r2,12(r16)
    9308:	10801014 	ori	r2,r2,64
    930c:	8080030d 	sth	r2,12(r16)
    9310:	8805883a 	mov	r2,r17
    9314:	dfc11d17 	ldw	ra,1140(sp)
    9318:	dc811c17 	ldw	r18,1136(sp)
    931c:	dc411b17 	ldw	r17,1132(sp)
    9320:	dc011a17 	ldw	r16,1128(sp)
    9324:	dec11e04 	addi	sp,sp,1144
    9328:	f800283a 	ret
    932c:	047fffc4 	movi	r17,-1
    9330:	003ff106 	br	92f8 <__alt_data_end+0xfffe92f8>

00009334 <_write_r>:
    9334:	defffd04 	addi	sp,sp,-12
    9338:	2805883a 	mov	r2,r5
    933c:	dc000015 	stw	r16,0(sp)
    9340:	04000074 	movhi	r16,1
    9344:	dc400115 	stw	r17,4(sp)
    9348:	300b883a 	mov	r5,r6
    934c:	840c7404 	addi	r16,r16,12752
    9350:	2023883a 	mov	r17,r4
    9354:	380d883a 	mov	r6,r7
    9358:	1009883a 	mov	r4,r2
    935c:	dfc00215 	stw	ra,8(sp)
    9360:	80000015 	stw	zero,0(r16)
    9364:	000db540 	call	db54 <write>
    9368:	00ffffc4 	movi	r3,-1
    936c:	10c00526 	beq	r2,r3,9384 <_write_r+0x50>
    9370:	dfc00217 	ldw	ra,8(sp)
    9374:	dc400117 	ldw	r17,4(sp)
    9378:	dc000017 	ldw	r16,0(sp)
    937c:	dec00304 	addi	sp,sp,12
    9380:	f800283a 	ret
    9384:	80c00017 	ldw	r3,0(r16)
    9388:	183ff926 	beq	r3,zero,9370 <__alt_data_end+0xfffe9370>
    938c:	88c00015 	stw	r3,0(r17)
    9390:	003ff706 	br	9370 <__alt_data_end+0xfffe9370>

00009394 <_close_r>:
    9394:	defffd04 	addi	sp,sp,-12
    9398:	dc000015 	stw	r16,0(sp)
    939c:	04000074 	movhi	r16,1
    93a0:	dc400115 	stw	r17,4(sp)
    93a4:	840c7404 	addi	r16,r16,12752
    93a8:	2023883a 	mov	r17,r4
    93ac:	2809883a 	mov	r4,r5
    93b0:	dfc00215 	stw	ra,8(sp)
    93b4:	80000015 	stw	zero,0(r16)
    93b8:	000d2fc0 	call	d2fc <close>
    93bc:	00ffffc4 	movi	r3,-1
    93c0:	10c00526 	beq	r2,r3,93d8 <_close_r+0x44>
    93c4:	dfc00217 	ldw	ra,8(sp)
    93c8:	dc400117 	ldw	r17,4(sp)
    93cc:	dc000017 	ldw	r16,0(sp)
    93d0:	dec00304 	addi	sp,sp,12
    93d4:	f800283a 	ret
    93d8:	80c00017 	ldw	r3,0(r16)
    93dc:	183ff926 	beq	r3,zero,93c4 <__alt_data_end+0xfffe93c4>
    93e0:	88c00015 	stw	r3,0(r17)
    93e4:	003ff706 	br	93c4 <__alt_data_end+0xfffe93c4>

000093e8 <_calloc_r>:
    93e8:	defffe04 	addi	sp,sp,-8
    93ec:	2805883a 	mov	r2,r5
    93f0:	dc000015 	stw	r16,0(sp)
    93f4:	300b883a 	mov	r5,r6
    93f8:	2021883a 	mov	r16,r4
    93fc:	1009883a 	mov	r4,r2
    9400:	dfc00115 	stw	ra,4(sp)
    9404:	000a9f40 	call	a9f4 <__mulsi3>
    9408:	100b883a 	mov	r5,r2
    940c:	8009883a 	mov	r4,r16
    9410:	00056840 	call	5684 <_malloc_r>
    9414:	10002926 	beq	r2,zero,94bc <_calloc_r+0xd4>
    9418:	11bfff17 	ldw	r6,-4(r2)
    941c:	1021883a 	mov	r16,r2
    9420:	00bfff04 	movi	r2,-4
    9424:	308c703a 	and	r6,r6,r2
    9428:	00c00904 	movi	r3,36
    942c:	308d883a 	add	r6,r6,r2
    9430:	19801636 	bltu	r3,r6,948c <_calloc_r+0xa4>
    9434:	008004c4 	movi	r2,19
    9438:	11800b2e 	bgeu	r2,r6,9468 <_calloc_r+0x80>
    943c:	80000015 	stw	zero,0(r16)
    9440:	80000115 	stw	zero,4(r16)
    9444:	008006c4 	movi	r2,27
    9448:	11801a2e 	bgeu	r2,r6,94b4 <_calloc_r+0xcc>
    944c:	80000215 	stw	zero,8(r16)
    9450:	80000315 	stw	zero,12(r16)
    9454:	30c0151e 	bne	r6,r3,94ac <_calloc_r+0xc4>
    9458:	80000415 	stw	zero,16(r16)
    945c:	80800604 	addi	r2,r16,24
    9460:	80000515 	stw	zero,20(r16)
    9464:	00000106 	br	946c <_calloc_r+0x84>
    9468:	8005883a 	mov	r2,r16
    946c:	10000015 	stw	zero,0(r2)
    9470:	10000115 	stw	zero,4(r2)
    9474:	10000215 	stw	zero,8(r2)
    9478:	8005883a 	mov	r2,r16
    947c:	dfc00117 	ldw	ra,4(sp)
    9480:	dc000017 	ldw	r16,0(sp)
    9484:	dec00204 	addi	sp,sp,8
    9488:	f800283a 	ret
    948c:	000b883a 	mov	r5,zero
    9490:	8009883a 	mov	r4,r16
    9494:	00062180 	call	6218 <memset>
    9498:	8005883a 	mov	r2,r16
    949c:	dfc00117 	ldw	ra,4(sp)
    94a0:	dc000017 	ldw	r16,0(sp)
    94a4:	dec00204 	addi	sp,sp,8
    94a8:	f800283a 	ret
    94ac:	80800404 	addi	r2,r16,16
    94b0:	003fee06 	br	946c <__alt_data_end+0xfffe946c>
    94b4:	80800204 	addi	r2,r16,8
    94b8:	003fec06 	br	946c <__alt_data_end+0xfffe946c>
    94bc:	0005883a 	mov	r2,zero
    94c0:	003fee06 	br	947c <__alt_data_end+0xfffe947c>

000094c4 <_fclose_r>:
    94c4:	28003926 	beq	r5,zero,95ac <_fclose_r+0xe8>
    94c8:	defffc04 	addi	sp,sp,-16
    94cc:	dc400115 	stw	r17,4(sp)
    94d0:	dc000015 	stw	r16,0(sp)
    94d4:	dfc00315 	stw	ra,12(sp)
    94d8:	dc800215 	stw	r18,8(sp)
    94dc:	2023883a 	mov	r17,r4
    94e0:	2821883a 	mov	r16,r5
    94e4:	20000226 	beq	r4,zero,94f0 <_fclose_r+0x2c>
    94e8:	20800e17 	ldw	r2,56(r4)
    94ec:	10002726 	beq	r2,zero,958c <_fclose_r+0xc8>
    94f0:	8080030f 	ldh	r2,12(r16)
    94f4:	1000071e 	bne	r2,zero,9514 <_fclose_r+0x50>
    94f8:	0005883a 	mov	r2,zero
    94fc:	dfc00317 	ldw	ra,12(sp)
    9500:	dc800217 	ldw	r18,8(sp)
    9504:	dc400117 	ldw	r17,4(sp)
    9508:	dc000017 	ldw	r16,0(sp)
    950c:	dec00404 	addi	sp,sp,16
    9510:	f800283a 	ret
    9514:	800b883a 	mov	r5,r16
    9518:	8809883a 	mov	r4,r17
    951c:	00043100 	call	4310 <__sflush_r>
    9520:	1025883a 	mov	r18,r2
    9524:	80800b17 	ldw	r2,44(r16)
    9528:	10000426 	beq	r2,zero,953c <_fclose_r+0x78>
    952c:	81400717 	ldw	r5,28(r16)
    9530:	8809883a 	mov	r4,r17
    9534:	103ee83a 	callr	r2
    9538:	10001616 	blt	r2,zero,9594 <_fclose_r+0xd0>
    953c:	8080030b 	ldhu	r2,12(r16)
    9540:	1080200c 	andi	r2,r2,128
    9544:	1000151e 	bne	r2,zero,959c <_fclose_r+0xd8>
    9548:	81400c17 	ldw	r5,48(r16)
    954c:	28000526 	beq	r5,zero,9564 <_fclose_r+0xa0>
    9550:	80801004 	addi	r2,r16,64
    9554:	28800226 	beq	r5,r2,9560 <_fclose_r+0x9c>
    9558:	8809883a 	mov	r4,r17
    955c:	0004a8c0 	call	4a8c <_free_r>
    9560:	80000c15 	stw	zero,48(r16)
    9564:	81401117 	ldw	r5,68(r16)
    9568:	28000326 	beq	r5,zero,9578 <_fclose_r+0xb4>
    956c:	8809883a 	mov	r4,r17
    9570:	0004a8c0 	call	4a8c <_free_r>
    9574:	80001115 	stw	zero,68(r16)
    9578:	00049280 	call	4928 <__sfp_lock_acquire>
    957c:	8000030d 	sth	zero,12(r16)
    9580:	000492c0 	call	492c <__sfp_lock_release>
    9584:	9005883a 	mov	r2,r18
    9588:	003fdc06 	br	94fc <__alt_data_end+0xfffe94fc>
    958c:	00049180 	call	4918 <__sinit>
    9590:	003fd706 	br	94f0 <__alt_data_end+0xfffe94f0>
    9594:	04bfffc4 	movi	r18,-1
    9598:	003fe806 	br	953c <__alt_data_end+0xfffe953c>
    959c:	81400417 	ldw	r5,16(r16)
    95a0:	8809883a 	mov	r4,r17
    95a4:	0004a8c0 	call	4a8c <_free_r>
    95a8:	003fe706 	br	9548 <__alt_data_end+0xfffe9548>
    95ac:	0005883a 	mov	r2,zero
    95b0:	f800283a 	ret

000095b4 <fclose>:
    95b4:	00800074 	movhi	r2,1
    95b8:	1085a404 	addi	r2,r2,5776
    95bc:	200b883a 	mov	r5,r4
    95c0:	11000017 	ldw	r4,0(r2)
    95c4:	00094c41 	jmpi	94c4 <_fclose_r>

000095c8 <__fputwc>:
    95c8:	defff804 	addi	sp,sp,-32
    95cc:	dcc00415 	stw	r19,16(sp)
    95d0:	dc800315 	stw	r18,12(sp)
    95d4:	dc000115 	stw	r16,4(sp)
    95d8:	dfc00715 	stw	ra,28(sp)
    95dc:	dd400615 	stw	r21,24(sp)
    95e0:	dd000515 	stw	r20,20(sp)
    95e4:	dc400215 	stw	r17,8(sp)
    95e8:	2027883a 	mov	r19,r4
    95ec:	2825883a 	mov	r18,r5
    95f0:	3021883a 	mov	r16,r6
    95f4:	00054740 	call	5474 <__locale_mb_cur_max>
    95f8:	00c00044 	movi	r3,1
    95fc:	10c03e26 	beq	r2,r3,96f8 <__fputwc+0x130>
    9600:	81c01704 	addi	r7,r16,92
    9604:	900d883a 	mov	r6,r18
    9608:	d80b883a 	mov	r5,sp
    960c:	9809883a 	mov	r4,r19
    9610:	0009a980 	call	9a98 <_wcrtomb_r>
    9614:	1029883a 	mov	r20,r2
    9618:	00bfffc4 	movi	r2,-1
    961c:	a0802026 	beq	r20,r2,96a0 <__fputwc+0xd8>
    9620:	d9400003 	ldbu	r5,0(sp)
    9624:	a0001c26 	beq	r20,zero,9698 <__fputwc+0xd0>
    9628:	0023883a 	mov	r17,zero
    962c:	05400284 	movi	r21,10
    9630:	00000906 	br	9658 <__fputwc+0x90>
    9634:	80800017 	ldw	r2,0(r16)
    9638:	11400005 	stb	r5,0(r2)
    963c:	80c00017 	ldw	r3,0(r16)
    9640:	18c00044 	addi	r3,r3,1
    9644:	80c00015 	stw	r3,0(r16)
    9648:	8c400044 	addi	r17,r17,1
    964c:	dc45883a 	add	r2,sp,r17
    9650:	8d00112e 	bgeu	r17,r20,9698 <__fputwc+0xd0>
    9654:	11400003 	ldbu	r5,0(r2)
    9658:	80c00217 	ldw	r3,8(r16)
    965c:	18ffffc4 	addi	r3,r3,-1
    9660:	80c00215 	stw	r3,8(r16)
    9664:	183ff30e 	bge	r3,zero,9634 <__alt_data_end+0xfffe9634>
    9668:	80800617 	ldw	r2,24(r16)
    966c:	18801916 	blt	r3,r2,96d4 <__fputwc+0x10c>
    9670:	80800017 	ldw	r2,0(r16)
    9674:	11400005 	stb	r5,0(r2)
    9678:	80800017 	ldw	r2,0(r16)
    967c:	10c00003 	ldbu	r3,0(r2)
    9680:	10800044 	addi	r2,r2,1
    9684:	1d402326 	beq	r3,r21,9714 <__fputwc+0x14c>
    9688:	80800015 	stw	r2,0(r16)
    968c:	8c400044 	addi	r17,r17,1
    9690:	dc45883a 	add	r2,sp,r17
    9694:	8d3fef36 	bltu	r17,r20,9654 <__alt_data_end+0xfffe9654>
    9698:	9005883a 	mov	r2,r18
    969c:	00000406 	br	96b0 <__fputwc+0xe8>
    96a0:	80c0030b 	ldhu	r3,12(r16)
    96a4:	a005883a 	mov	r2,r20
    96a8:	18c01014 	ori	r3,r3,64
    96ac:	80c0030d 	sth	r3,12(r16)
    96b0:	dfc00717 	ldw	ra,28(sp)
    96b4:	dd400617 	ldw	r21,24(sp)
    96b8:	dd000517 	ldw	r20,20(sp)
    96bc:	dcc00417 	ldw	r19,16(sp)
    96c0:	dc800317 	ldw	r18,12(sp)
    96c4:	dc400217 	ldw	r17,8(sp)
    96c8:	dc000117 	ldw	r16,4(sp)
    96cc:	dec00804 	addi	sp,sp,32
    96d0:	f800283a 	ret
    96d4:	800d883a 	mov	r6,r16
    96d8:	29403fcc 	andi	r5,r5,255
    96dc:	9809883a 	mov	r4,r19
    96e0:	00099400 	call	9940 <__swbuf_r>
    96e4:	10bfffe0 	cmpeqi	r2,r2,-1
    96e8:	10803fcc 	andi	r2,r2,255
    96ec:	103fd626 	beq	r2,zero,9648 <__alt_data_end+0xfffe9648>
    96f0:	00bfffc4 	movi	r2,-1
    96f4:	003fee06 	br	96b0 <__alt_data_end+0xfffe96b0>
    96f8:	90ffffc4 	addi	r3,r18,-1
    96fc:	01003f84 	movi	r4,254
    9700:	20ffbf36 	bltu	r4,r3,9600 <__alt_data_end+0xfffe9600>
    9704:	900b883a 	mov	r5,r18
    9708:	dc800005 	stb	r18,0(sp)
    970c:	1029883a 	mov	r20,r2
    9710:	003fc506 	br	9628 <__alt_data_end+0xfffe9628>
    9714:	800d883a 	mov	r6,r16
    9718:	a80b883a 	mov	r5,r21
    971c:	9809883a 	mov	r4,r19
    9720:	00099400 	call	9940 <__swbuf_r>
    9724:	10bfffe0 	cmpeqi	r2,r2,-1
    9728:	003fef06 	br	96e8 <__alt_data_end+0xfffe96e8>

0000972c <_fputwc_r>:
    972c:	3080030b 	ldhu	r2,12(r6)
    9730:	10c8000c 	andi	r3,r2,8192
    9734:	1800051e 	bne	r3,zero,974c <_fputwc_r+0x20>
    9738:	30c01917 	ldw	r3,100(r6)
    973c:	10880014 	ori	r2,r2,8192
    9740:	3080030d 	sth	r2,12(r6)
    9744:	18880014 	ori	r2,r3,8192
    9748:	30801915 	stw	r2,100(r6)
    974c:	00095c81 	jmpi	95c8 <__fputwc>

00009750 <fputwc>:
    9750:	00800074 	movhi	r2,1
    9754:	defffc04 	addi	sp,sp,-16
    9758:	1085a404 	addi	r2,r2,5776
    975c:	dc000115 	stw	r16,4(sp)
    9760:	14000017 	ldw	r16,0(r2)
    9764:	dc400215 	stw	r17,8(sp)
    9768:	dfc00315 	stw	ra,12(sp)
    976c:	2023883a 	mov	r17,r4
    9770:	80000226 	beq	r16,zero,977c <fputwc+0x2c>
    9774:	80800e17 	ldw	r2,56(r16)
    9778:	10001026 	beq	r2,zero,97bc <fputwc+0x6c>
    977c:	2880030b 	ldhu	r2,12(r5)
    9780:	10c8000c 	andi	r3,r2,8192
    9784:	1800051e 	bne	r3,zero,979c <fputwc+0x4c>
    9788:	28c01917 	ldw	r3,100(r5)
    978c:	10880014 	ori	r2,r2,8192
    9790:	2880030d 	sth	r2,12(r5)
    9794:	18880014 	ori	r2,r3,8192
    9798:	28801915 	stw	r2,100(r5)
    979c:	280d883a 	mov	r6,r5
    97a0:	8009883a 	mov	r4,r16
    97a4:	880b883a 	mov	r5,r17
    97a8:	dfc00317 	ldw	ra,12(sp)
    97ac:	dc400217 	ldw	r17,8(sp)
    97b0:	dc000117 	ldw	r16,4(sp)
    97b4:	dec00404 	addi	sp,sp,16
    97b8:	00095c81 	jmpi	95c8 <__fputwc>
    97bc:	8009883a 	mov	r4,r16
    97c0:	d9400015 	stw	r5,0(sp)
    97c4:	00049180 	call	4918 <__sinit>
    97c8:	d9400017 	ldw	r5,0(sp)
    97cc:	003feb06 	br	977c <__alt_data_end+0xfffe977c>

000097d0 <_fstat_r>:
    97d0:	defffd04 	addi	sp,sp,-12
    97d4:	2805883a 	mov	r2,r5
    97d8:	dc000015 	stw	r16,0(sp)
    97dc:	04000074 	movhi	r16,1
    97e0:	dc400115 	stw	r17,4(sp)
    97e4:	840c7404 	addi	r16,r16,12752
    97e8:	2023883a 	mov	r17,r4
    97ec:	300b883a 	mov	r5,r6
    97f0:	1009883a 	mov	r4,r2
    97f4:	dfc00215 	stw	ra,8(sp)
    97f8:	80000015 	stw	zero,0(r16)
    97fc:	000d43c0 	call	d43c <fstat>
    9800:	00ffffc4 	movi	r3,-1
    9804:	10c00526 	beq	r2,r3,981c <_fstat_r+0x4c>
    9808:	dfc00217 	ldw	ra,8(sp)
    980c:	dc400117 	ldw	r17,4(sp)
    9810:	dc000017 	ldw	r16,0(sp)
    9814:	dec00304 	addi	sp,sp,12
    9818:	f800283a 	ret
    981c:	80c00017 	ldw	r3,0(r16)
    9820:	183ff926 	beq	r3,zero,9808 <__alt_data_end+0xfffe9808>
    9824:	88c00015 	stw	r3,0(r17)
    9828:	003ff706 	br	9808 <__alt_data_end+0xfffe9808>

0000982c <_isatty_r>:
    982c:	defffd04 	addi	sp,sp,-12
    9830:	dc000015 	stw	r16,0(sp)
    9834:	04000074 	movhi	r16,1
    9838:	dc400115 	stw	r17,4(sp)
    983c:	840c7404 	addi	r16,r16,12752
    9840:	2023883a 	mov	r17,r4
    9844:	2809883a 	mov	r4,r5
    9848:	dfc00215 	stw	ra,8(sp)
    984c:	80000015 	stw	zero,0(r16)
    9850:	000d5300 	call	d530 <isatty>
    9854:	00ffffc4 	movi	r3,-1
    9858:	10c00526 	beq	r2,r3,9870 <_isatty_r+0x44>
    985c:	dfc00217 	ldw	ra,8(sp)
    9860:	dc400117 	ldw	r17,4(sp)
    9864:	dc000017 	ldw	r16,0(sp)
    9868:	dec00304 	addi	sp,sp,12
    986c:	f800283a 	ret
    9870:	80c00017 	ldw	r3,0(r16)
    9874:	183ff926 	beq	r3,zero,985c <__alt_data_end+0xfffe985c>
    9878:	88c00015 	stw	r3,0(r17)
    987c:	003ff706 	br	985c <__alt_data_end+0xfffe985c>

00009880 <_lseek_r>:
    9880:	defffd04 	addi	sp,sp,-12
    9884:	2805883a 	mov	r2,r5
    9888:	dc000015 	stw	r16,0(sp)
    988c:	04000074 	movhi	r16,1
    9890:	dc400115 	stw	r17,4(sp)
    9894:	300b883a 	mov	r5,r6
    9898:	840c7404 	addi	r16,r16,12752
    989c:	2023883a 	mov	r17,r4
    98a0:	380d883a 	mov	r6,r7
    98a4:	1009883a 	mov	r4,r2
    98a8:	dfc00215 	stw	ra,8(sp)
    98ac:	80000015 	stw	zero,0(r16)
    98b0:	000d7040 	call	d704 <lseek>
    98b4:	00ffffc4 	movi	r3,-1
    98b8:	10c00526 	beq	r2,r3,98d0 <_lseek_r+0x50>
    98bc:	dfc00217 	ldw	ra,8(sp)
    98c0:	dc400117 	ldw	r17,4(sp)
    98c4:	dc000017 	ldw	r16,0(sp)
    98c8:	dec00304 	addi	sp,sp,12
    98cc:	f800283a 	ret
    98d0:	80c00017 	ldw	r3,0(r16)
    98d4:	183ff926 	beq	r3,zero,98bc <__alt_data_end+0xfffe98bc>
    98d8:	88c00015 	stw	r3,0(r17)
    98dc:	003ff706 	br	98bc <__alt_data_end+0xfffe98bc>

000098e0 <_read_r>:
    98e0:	defffd04 	addi	sp,sp,-12
    98e4:	2805883a 	mov	r2,r5
    98e8:	dc000015 	stw	r16,0(sp)
    98ec:	04000074 	movhi	r16,1
    98f0:	dc400115 	stw	r17,4(sp)
    98f4:	300b883a 	mov	r5,r6
    98f8:	840c7404 	addi	r16,r16,12752
    98fc:	2023883a 	mov	r17,r4
    9900:	380d883a 	mov	r6,r7
    9904:	1009883a 	mov	r4,r2
    9908:	dfc00215 	stw	ra,8(sp)
    990c:	80000015 	stw	zero,0(r16)
    9910:	000d8e00 	call	d8e0 <read>
    9914:	00ffffc4 	movi	r3,-1
    9918:	10c00526 	beq	r2,r3,9930 <_read_r+0x50>
    991c:	dfc00217 	ldw	ra,8(sp)
    9920:	dc400117 	ldw	r17,4(sp)
    9924:	dc000017 	ldw	r16,0(sp)
    9928:	dec00304 	addi	sp,sp,12
    992c:	f800283a 	ret
    9930:	80c00017 	ldw	r3,0(r16)
    9934:	183ff926 	beq	r3,zero,991c <__alt_data_end+0xfffe991c>
    9938:	88c00015 	stw	r3,0(r17)
    993c:	003ff706 	br	991c <__alt_data_end+0xfffe991c>

00009940 <__swbuf_r>:
    9940:	defffb04 	addi	sp,sp,-20
    9944:	dcc00315 	stw	r19,12(sp)
    9948:	dc800215 	stw	r18,8(sp)
    994c:	dc000015 	stw	r16,0(sp)
    9950:	dfc00415 	stw	ra,16(sp)
    9954:	dc400115 	stw	r17,4(sp)
    9958:	2025883a 	mov	r18,r4
    995c:	2827883a 	mov	r19,r5
    9960:	3021883a 	mov	r16,r6
    9964:	20000226 	beq	r4,zero,9970 <__swbuf_r+0x30>
    9968:	20800e17 	ldw	r2,56(r4)
    996c:	10004226 	beq	r2,zero,9a78 <__swbuf_r+0x138>
    9970:	80800617 	ldw	r2,24(r16)
    9974:	8100030b 	ldhu	r4,12(r16)
    9978:	80800215 	stw	r2,8(r16)
    997c:	2080020c 	andi	r2,r4,8
    9980:	10003626 	beq	r2,zero,9a5c <__swbuf_r+0x11c>
    9984:	80c00417 	ldw	r3,16(r16)
    9988:	18003426 	beq	r3,zero,9a5c <__swbuf_r+0x11c>
    998c:	2088000c 	andi	r2,r4,8192
    9990:	9c403fcc 	andi	r17,r19,255
    9994:	10001a26 	beq	r2,zero,9a00 <__swbuf_r+0xc0>
    9998:	80800017 	ldw	r2,0(r16)
    999c:	81000517 	ldw	r4,20(r16)
    99a0:	10c7c83a 	sub	r3,r2,r3
    99a4:	1900200e 	bge	r3,r4,9a28 <__swbuf_r+0xe8>
    99a8:	18c00044 	addi	r3,r3,1
    99ac:	81000217 	ldw	r4,8(r16)
    99b0:	11400044 	addi	r5,r2,1
    99b4:	81400015 	stw	r5,0(r16)
    99b8:	213fffc4 	addi	r4,r4,-1
    99bc:	81000215 	stw	r4,8(r16)
    99c0:	14c00005 	stb	r19,0(r2)
    99c4:	80800517 	ldw	r2,20(r16)
    99c8:	10c01e26 	beq	r2,r3,9a44 <__swbuf_r+0x104>
    99cc:	8080030b 	ldhu	r2,12(r16)
    99d0:	1080004c 	andi	r2,r2,1
    99d4:	10000226 	beq	r2,zero,99e0 <__swbuf_r+0xa0>
    99d8:	00800284 	movi	r2,10
    99dc:	88801926 	beq	r17,r2,9a44 <__swbuf_r+0x104>
    99e0:	8805883a 	mov	r2,r17
    99e4:	dfc00417 	ldw	ra,16(sp)
    99e8:	dcc00317 	ldw	r19,12(sp)
    99ec:	dc800217 	ldw	r18,8(sp)
    99f0:	dc400117 	ldw	r17,4(sp)
    99f4:	dc000017 	ldw	r16,0(sp)
    99f8:	dec00504 	addi	sp,sp,20
    99fc:	f800283a 	ret
    9a00:	81401917 	ldw	r5,100(r16)
    9a04:	00b7ffc4 	movi	r2,-8193
    9a08:	21080014 	ori	r4,r4,8192
    9a0c:	2884703a 	and	r2,r5,r2
    9a10:	80801915 	stw	r2,100(r16)
    9a14:	80800017 	ldw	r2,0(r16)
    9a18:	8100030d 	sth	r4,12(r16)
    9a1c:	81000517 	ldw	r4,20(r16)
    9a20:	10c7c83a 	sub	r3,r2,r3
    9a24:	193fe016 	blt	r3,r4,99a8 <__alt_data_end+0xfffe99a8>
    9a28:	800b883a 	mov	r5,r16
    9a2c:	9009883a 	mov	r4,r18
    9a30:	000452c0 	call	452c <_fflush_r>
    9a34:	1000071e 	bne	r2,zero,9a54 <__swbuf_r+0x114>
    9a38:	80800017 	ldw	r2,0(r16)
    9a3c:	00c00044 	movi	r3,1
    9a40:	003fda06 	br	99ac <__alt_data_end+0xfffe99ac>
    9a44:	800b883a 	mov	r5,r16
    9a48:	9009883a 	mov	r4,r18
    9a4c:	000452c0 	call	452c <_fflush_r>
    9a50:	103fe326 	beq	r2,zero,99e0 <__alt_data_end+0xfffe99e0>
    9a54:	00bfffc4 	movi	r2,-1
    9a58:	003fe206 	br	99e4 <__alt_data_end+0xfffe99e4>
    9a5c:	800b883a 	mov	r5,r16
    9a60:	9009883a 	mov	r4,r18
    9a64:	000290c0 	call	290c <__swsetup_r>
    9a68:	103ffa1e 	bne	r2,zero,9a54 <__alt_data_end+0xfffe9a54>
    9a6c:	8100030b 	ldhu	r4,12(r16)
    9a70:	80c00417 	ldw	r3,16(r16)
    9a74:	003fc506 	br	998c <__alt_data_end+0xfffe998c>
    9a78:	00049180 	call	4918 <__sinit>
    9a7c:	003fbc06 	br	9970 <__alt_data_end+0xfffe9970>

00009a80 <__swbuf>:
    9a80:	00800074 	movhi	r2,1
    9a84:	1085a404 	addi	r2,r2,5776
    9a88:	280d883a 	mov	r6,r5
    9a8c:	200b883a 	mov	r5,r4
    9a90:	11000017 	ldw	r4,0(r2)
    9a94:	00099401 	jmpi	9940 <__swbuf_r>

00009a98 <_wcrtomb_r>:
    9a98:	defff604 	addi	sp,sp,-40
    9a9c:	00800074 	movhi	r2,1
    9aa0:	dc800815 	stw	r18,32(sp)
    9aa4:	dc400715 	stw	r17,28(sp)
    9aa8:	dc000615 	stw	r16,24(sp)
    9aac:	1085a804 	addi	r2,r2,5792
    9ab0:	dfc00915 	stw	ra,36(sp)
    9ab4:	2021883a 	mov	r16,r4
    9ab8:	3823883a 	mov	r17,r7
    9abc:	14800017 	ldw	r18,0(r2)
    9ac0:	28001426 	beq	r5,zero,9b14 <_wcrtomb_r+0x7c>
    9ac4:	d9400415 	stw	r5,16(sp)
    9ac8:	d9800515 	stw	r6,20(sp)
    9acc:	00054680 	call	5468 <__locale_charset>
    9ad0:	d9800517 	ldw	r6,20(sp)
    9ad4:	d9400417 	ldw	r5,16(sp)
    9ad8:	100f883a 	mov	r7,r2
    9adc:	dc400015 	stw	r17,0(sp)
    9ae0:	8009883a 	mov	r4,r16
    9ae4:	903ee83a 	callr	r18
    9ae8:	00ffffc4 	movi	r3,-1
    9aec:	10c0031e 	bne	r2,r3,9afc <_wcrtomb_r+0x64>
    9af0:	88000015 	stw	zero,0(r17)
    9af4:	00c02284 	movi	r3,138
    9af8:	80c00015 	stw	r3,0(r16)
    9afc:	dfc00917 	ldw	ra,36(sp)
    9b00:	dc800817 	ldw	r18,32(sp)
    9b04:	dc400717 	ldw	r17,28(sp)
    9b08:	dc000617 	ldw	r16,24(sp)
    9b0c:	dec00a04 	addi	sp,sp,40
    9b10:	f800283a 	ret
    9b14:	00054680 	call	5468 <__locale_charset>
    9b18:	100f883a 	mov	r7,r2
    9b1c:	dc400015 	stw	r17,0(sp)
    9b20:	000d883a 	mov	r6,zero
    9b24:	d9400104 	addi	r5,sp,4
    9b28:	8009883a 	mov	r4,r16
    9b2c:	903ee83a 	callr	r18
    9b30:	003fed06 	br	9ae8 <__alt_data_end+0xfffe9ae8>

00009b34 <wcrtomb>:
    9b34:	defff604 	addi	sp,sp,-40
    9b38:	00800074 	movhi	r2,1
    9b3c:	dc800615 	stw	r18,24(sp)
    9b40:	dc400515 	stw	r17,20(sp)
    9b44:	1085a404 	addi	r2,r2,5776
    9b48:	dfc00915 	stw	ra,36(sp)
    9b4c:	dd000815 	stw	r20,32(sp)
    9b50:	dcc00715 	stw	r19,28(sp)
    9b54:	dc000415 	stw	r16,16(sp)
    9b58:	3025883a 	mov	r18,r6
    9b5c:	14400017 	ldw	r17,0(r2)
    9b60:	20001926 	beq	r4,zero,9bc8 <wcrtomb+0x94>
    9b64:	00800074 	movhi	r2,1
    9b68:	1085a804 	addi	r2,r2,5792
    9b6c:	15000017 	ldw	r20,0(r2)
    9b70:	2021883a 	mov	r16,r4
    9b74:	2827883a 	mov	r19,r5
    9b78:	00054680 	call	5468 <__locale_charset>
    9b7c:	100f883a 	mov	r7,r2
    9b80:	dc800015 	stw	r18,0(sp)
    9b84:	980d883a 	mov	r6,r19
    9b88:	800b883a 	mov	r5,r16
    9b8c:	8809883a 	mov	r4,r17
    9b90:	a03ee83a 	callr	r20
    9b94:	00ffffc4 	movi	r3,-1
    9b98:	10c0031e 	bne	r2,r3,9ba8 <wcrtomb+0x74>
    9b9c:	90000015 	stw	zero,0(r18)
    9ba0:	00c02284 	movi	r3,138
    9ba4:	88c00015 	stw	r3,0(r17)
    9ba8:	dfc00917 	ldw	ra,36(sp)
    9bac:	dd000817 	ldw	r20,32(sp)
    9bb0:	dcc00717 	ldw	r19,28(sp)
    9bb4:	dc800617 	ldw	r18,24(sp)
    9bb8:	dc400517 	ldw	r17,20(sp)
    9bbc:	dc000417 	ldw	r16,16(sp)
    9bc0:	dec00a04 	addi	sp,sp,40
    9bc4:	f800283a 	ret
    9bc8:	00800074 	movhi	r2,1
    9bcc:	1085a804 	addi	r2,r2,5792
    9bd0:	14000017 	ldw	r16,0(r2)
    9bd4:	00054680 	call	5468 <__locale_charset>
    9bd8:	100f883a 	mov	r7,r2
    9bdc:	dc800015 	stw	r18,0(sp)
    9be0:	000d883a 	mov	r6,zero
    9be4:	d9400104 	addi	r5,sp,4
    9be8:	8809883a 	mov	r4,r17
    9bec:	803ee83a 	callr	r16
    9bf0:	003fe806 	br	9b94 <__alt_data_end+0xfffe9b94>

00009bf4 <__ascii_wctomb>:
    9bf4:	28000526 	beq	r5,zero,9c0c <__ascii_wctomb+0x18>
    9bf8:	00803fc4 	movi	r2,255
    9bfc:	11800536 	bltu	r2,r6,9c14 <__ascii_wctomb+0x20>
    9c00:	29800005 	stb	r6,0(r5)
    9c04:	00800044 	movi	r2,1
    9c08:	f800283a 	ret
    9c0c:	0005883a 	mov	r2,zero
    9c10:	f800283a 	ret
    9c14:	00802284 	movi	r2,138
    9c18:	20800015 	stw	r2,0(r4)
    9c1c:	00bfffc4 	movi	r2,-1
    9c20:	f800283a 	ret

00009c24 <_wctomb_r>:
    9c24:	00800074 	movhi	r2,1
    9c28:	defff904 	addi	sp,sp,-28
    9c2c:	1085a804 	addi	r2,r2,5792
    9c30:	dfc00615 	stw	ra,24(sp)
    9c34:	dc400515 	stw	r17,20(sp)
    9c38:	dc000415 	stw	r16,16(sp)
    9c3c:	3823883a 	mov	r17,r7
    9c40:	14000017 	ldw	r16,0(r2)
    9c44:	d9000115 	stw	r4,4(sp)
    9c48:	d9400215 	stw	r5,8(sp)
    9c4c:	d9800315 	stw	r6,12(sp)
    9c50:	00054680 	call	5468 <__locale_charset>
    9c54:	d9800317 	ldw	r6,12(sp)
    9c58:	d9400217 	ldw	r5,8(sp)
    9c5c:	d9000117 	ldw	r4,4(sp)
    9c60:	100f883a 	mov	r7,r2
    9c64:	dc400015 	stw	r17,0(sp)
    9c68:	803ee83a 	callr	r16
    9c6c:	dfc00617 	ldw	ra,24(sp)
    9c70:	dc400517 	ldw	r17,20(sp)
    9c74:	dc000417 	ldw	r16,16(sp)
    9c78:	dec00704 	addi	sp,sp,28
    9c7c:	f800283a 	ret

00009c80 <__udivdi3>:
    9c80:	defff404 	addi	sp,sp,-48
    9c84:	dcc00515 	stw	r19,20(sp)
    9c88:	dc000215 	stw	r16,8(sp)
    9c8c:	dfc00b15 	stw	ra,44(sp)
    9c90:	df000a15 	stw	fp,40(sp)
    9c94:	ddc00915 	stw	r23,36(sp)
    9c98:	dd800815 	stw	r22,32(sp)
    9c9c:	dd400715 	stw	r21,28(sp)
    9ca0:	dd000615 	stw	r20,24(sp)
    9ca4:	dc800415 	stw	r18,16(sp)
    9ca8:	dc400315 	stw	r17,12(sp)
    9cac:	2027883a 	mov	r19,r4
    9cb0:	2821883a 	mov	r16,r5
    9cb4:	3800461e 	bne	r7,zero,9dd0 <__udivdi3+0x150>
    9cb8:	3023883a 	mov	r17,r6
    9cbc:	2025883a 	mov	r18,r4
    9cc0:	2980572e 	bgeu	r5,r6,9e20 <__udivdi3+0x1a0>
    9cc4:	00bfffd4 	movui	r2,65535
    9cc8:	282d883a 	mov	r22,r5
    9ccc:	1180b236 	bltu	r2,r6,9f98 <__udivdi3+0x318>
    9cd0:	00803fc4 	movi	r2,255
    9cd4:	1185803a 	cmpltu	r2,r2,r6
    9cd8:	100490fa 	slli	r2,r2,3
    9cdc:	3086d83a 	srl	r3,r6,r2
    9ce0:	01000074 	movhi	r4,1
    9ce4:	213eab04 	addi	r4,r4,-1364
    9ce8:	20c7883a 	add	r3,r4,r3
    9cec:	18c00003 	ldbu	r3,0(r3)
    9cf0:	1885883a 	add	r2,r3,r2
    9cf4:	00c00804 	movi	r3,32
    9cf8:	1887c83a 	sub	r3,r3,r2
    9cfc:	18000526 	beq	r3,zero,9d14 <__udivdi3+0x94>
    9d00:	80e0983a 	sll	r16,r16,r3
    9d04:	9884d83a 	srl	r2,r19,r2
    9d08:	30e2983a 	sll	r17,r6,r3
    9d0c:	98e4983a 	sll	r18,r19,r3
    9d10:	142cb03a 	or	r22,r2,r16
    9d14:	882ad43a 	srli	r21,r17,16
    9d18:	b009883a 	mov	r4,r22
    9d1c:	8d3fffcc 	andi	r20,r17,65535
    9d20:	a80b883a 	mov	r5,r21
    9d24:	000a99c0 	call	a99c <__umodsi3>
    9d28:	b009883a 	mov	r4,r22
    9d2c:	a80b883a 	mov	r5,r21
    9d30:	1027883a 	mov	r19,r2
    9d34:	000a9380 	call	a938 <__udivsi3>
    9d38:	100b883a 	mov	r5,r2
    9d3c:	a009883a 	mov	r4,r20
    9d40:	102d883a 	mov	r22,r2
    9d44:	000a9f40 	call	a9f4 <__mulsi3>
    9d48:	9826943a 	slli	r19,r19,16
    9d4c:	9006d43a 	srli	r3,r18,16
    9d50:	1cc6b03a 	or	r3,r3,r19
    9d54:	1880052e 	bgeu	r3,r2,9d6c <__udivdi3+0xec>
    9d58:	1c47883a 	add	r3,r3,r17
    9d5c:	b13fffc4 	addi	r4,r22,-1
    9d60:	1c400136 	bltu	r3,r17,9d68 <__udivdi3+0xe8>
    9d64:	18814236 	bltu	r3,r2,a270 <__udivdi3+0x5f0>
    9d68:	202d883a 	mov	r22,r4
    9d6c:	18a1c83a 	sub	r16,r3,r2
    9d70:	8009883a 	mov	r4,r16
    9d74:	a80b883a 	mov	r5,r21
    9d78:	000a99c0 	call	a99c <__umodsi3>
    9d7c:	1027883a 	mov	r19,r2
    9d80:	8009883a 	mov	r4,r16
    9d84:	a80b883a 	mov	r5,r21
    9d88:	9826943a 	slli	r19,r19,16
    9d8c:	000a9380 	call	a938 <__udivsi3>
    9d90:	100b883a 	mov	r5,r2
    9d94:	a009883a 	mov	r4,r20
    9d98:	94bfffcc 	andi	r18,r18,65535
    9d9c:	1021883a 	mov	r16,r2
    9da0:	94e4b03a 	or	r18,r18,r19
    9da4:	000a9f40 	call	a9f4 <__mulsi3>
    9da8:	9080052e 	bgeu	r18,r2,9dc0 <__udivdi3+0x140>
    9dac:	8ca5883a 	add	r18,r17,r18
    9db0:	80ffffc4 	addi	r3,r16,-1
    9db4:	94410c36 	bltu	r18,r17,a1e8 <__udivdi3+0x568>
    9db8:	90810b2e 	bgeu	r18,r2,a1e8 <__udivdi3+0x568>
    9dbc:	843fff84 	addi	r16,r16,-2
    9dc0:	b004943a 	slli	r2,r22,16
    9dc4:	0007883a 	mov	r3,zero
    9dc8:	1404b03a 	or	r2,r2,r16
    9dcc:	00005e06 	br	9f48 <__udivdi3+0x2c8>
    9dd0:	29c05b36 	bltu	r5,r7,9f40 <__udivdi3+0x2c0>
    9dd4:	00bfffd4 	movui	r2,65535
    9dd8:	11c0672e 	bgeu	r2,r7,9f78 <__udivdi3+0x2f8>
    9ddc:	00804034 	movhi	r2,256
    9de0:	10bfffc4 	addi	r2,r2,-1
    9de4:	11c10a36 	bltu	r2,r7,a210 <__udivdi3+0x590>
    9de8:	00800404 	movi	r2,16
    9dec:	3886d83a 	srl	r3,r7,r2
    9df0:	01000074 	movhi	r4,1
    9df4:	213eab04 	addi	r4,r4,-1364
    9df8:	20c7883a 	add	r3,r4,r3
    9dfc:	18c00003 	ldbu	r3,0(r3)
    9e00:	05c00804 	movi	r23,32
    9e04:	1885883a 	add	r2,r3,r2
    9e08:	b8afc83a 	sub	r23,r23,r2
    9e0c:	b800671e 	bne	r23,zero,9fac <__udivdi3+0x32c>
    9e10:	3c010536 	bltu	r7,r16,a228 <__udivdi3+0x5a8>
    9e14:	9985403a 	cmpgeu	r2,r19,r6
    9e18:	0007883a 	mov	r3,zero
    9e1c:	00004a06 	br	9f48 <__udivdi3+0x2c8>
    9e20:	3000041e 	bne	r6,zero,9e34 <__udivdi3+0x1b4>
    9e24:	000b883a 	mov	r5,zero
    9e28:	01000044 	movi	r4,1
    9e2c:	000a9380 	call	a938 <__udivsi3>
    9e30:	1023883a 	mov	r17,r2
    9e34:	00bfffd4 	movui	r2,65535
    9e38:	1440532e 	bgeu	r2,r17,9f88 <__udivdi3+0x308>
    9e3c:	00804034 	movhi	r2,256
    9e40:	10bfffc4 	addi	r2,r2,-1
    9e44:	1440f436 	bltu	r2,r17,a218 <__udivdi3+0x598>
    9e48:	00800404 	movi	r2,16
    9e4c:	8886d83a 	srl	r3,r17,r2
    9e50:	01000074 	movhi	r4,1
    9e54:	213eab04 	addi	r4,r4,-1364
    9e58:	20c7883a 	add	r3,r4,r3
    9e5c:	18c00003 	ldbu	r3,0(r3)
    9e60:	1885883a 	add	r2,r3,r2
    9e64:	00c00804 	movi	r3,32
    9e68:	1887c83a 	sub	r3,r3,r2
    9e6c:	1800a51e 	bne	r3,zero,a104 <__udivdi3+0x484>
    9e70:	882ad43a 	srli	r21,r17,16
    9e74:	8461c83a 	sub	r16,r16,r17
    9e78:	8d3fffcc 	andi	r20,r17,65535
    9e7c:	00c00044 	movi	r3,1
    9e80:	a80b883a 	mov	r5,r21
    9e84:	8009883a 	mov	r4,r16
    9e88:	d8c00115 	stw	r3,4(sp)
    9e8c:	000a99c0 	call	a99c <__umodsi3>
    9e90:	a80b883a 	mov	r5,r21
    9e94:	8009883a 	mov	r4,r16
    9e98:	1027883a 	mov	r19,r2
    9e9c:	000a9380 	call	a938 <__udivsi3>
    9ea0:	a00b883a 	mov	r5,r20
    9ea4:	1009883a 	mov	r4,r2
    9ea8:	102d883a 	mov	r22,r2
    9eac:	000a9f40 	call	a9f4 <__mulsi3>
    9eb0:	9826943a 	slli	r19,r19,16
    9eb4:	900ed43a 	srli	r7,r18,16
    9eb8:	d8c00117 	ldw	r3,4(sp)
    9ebc:	3cceb03a 	or	r7,r7,r19
    9ec0:	3880052e 	bgeu	r7,r2,9ed8 <__udivdi3+0x258>
    9ec4:	3c4f883a 	add	r7,r7,r17
    9ec8:	b13fffc4 	addi	r4,r22,-1
    9ecc:	3c400136 	bltu	r7,r17,9ed4 <__udivdi3+0x254>
    9ed0:	3880e436 	bltu	r7,r2,a264 <__udivdi3+0x5e4>
    9ed4:	202d883a 	mov	r22,r4
    9ed8:	38a1c83a 	sub	r16,r7,r2
    9edc:	8009883a 	mov	r4,r16
    9ee0:	a80b883a 	mov	r5,r21
    9ee4:	d8c00115 	stw	r3,4(sp)
    9ee8:	000a99c0 	call	a99c <__umodsi3>
    9eec:	1027883a 	mov	r19,r2
    9ef0:	8009883a 	mov	r4,r16
    9ef4:	a80b883a 	mov	r5,r21
    9ef8:	9826943a 	slli	r19,r19,16
    9efc:	000a9380 	call	a938 <__udivsi3>
    9f00:	a00b883a 	mov	r5,r20
    9f04:	1009883a 	mov	r4,r2
    9f08:	94bfffcc 	andi	r18,r18,65535
    9f0c:	1021883a 	mov	r16,r2
    9f10:	94e4b03a 	or	r18,r18,r19
    9f14:	000a9f40 	call	a9f4 <__mulsi3>
    9f18:	d8c00117 	ldw	r3,4(sp)
    9f1c:	9080052e 	bgeu	r18,r2,9f34 <__udivdi3+0x2b4>
    9f20:	8ca5883a 	add	r18,r17,r18
    9f24:	813fffc4 	addi	r4,r16,-1
    9f28:	9440ad36 	bltu	r18,r17,a1e0 <__udivdi3+0x560>
    9f2c:	9080ac2e 	bgeu	r18,r2,a1e0 <__udivdi3+0x560>
    9f30:	843fff84 	addi	r16,r16,-2
    9f34:	b004943a 	slli	r2,r22,16
    9f38:	1404b03a 	or	r2,r2,r16
    9f3c:	00000206 	br	9f48 <__udivdi3+0x2c8>
    9f40:	0007883a 	mov	r3,zero
    9f44:	0005883a 	mov	r2,zero
    9f48:	dfc00b17 	ldw	ra,44(sp)
    9f4c:	df000a17 	ldw	fp,40(sp)
    9f50:	ddc00917 	ldw	r23,36(sp)
    9f54:	dd800817 	ldw	r22,32(sp)
    9f58:	dd400717 	ldw	r21,28(sp)
    9f5c:	dd000617 	ldw	r20,24(sp)
    9f60:	dcc00517 	ldw	r19,20(sp)
    9f64:	dc800417 	ldw	r18,16(sp)
    9f68:	dc400317 	ldw	r17,12(sp)
    9f6c:	dc000217 	ldw	r16,8(sp)
    9f70:	dec00c04 	addi	sp,sp,48
    9f74:	f800283a 	ret
    9f78:	00803fc4 	movi	r2,255
    9f7c:	11c5803a 	cmpltu	r2,r2,r7
    9f80:	100490fa 	slli	r2,r2,3
    9f84:	003f9906 	br	9dec <__alt_data_end+0xfffe9dec>
    9f88:	00803fc4 	movi	r2,255
    9f8c:	1445803a 	cmpltu	r2,r2,r17
    9f90:	100490fa 	slli	r2,r2,3
    9f94:	003fad06 	br	9e4c <__alt_data_end+0xfffe9e4c>
    9f98:	00804034 	movhi	r2,256
    9f9c:	10bfffc4 	addi	r2,r2,-1
    9fa0:	11809f36 	bltu	r2,r6,a220 <__udivdi3+0x5a0>
    9fa4:	00800404 	movi	r2,16
    9fa8:	003f4c06 	br	9cdc <__alt_data_end+0xfffe9cdc>
    9fac:	3dce983a 	sll	r7,r7,r23
    9fb0:	30b8d83a 	srl	fp,r6,r2
    9fb4:	80a2d83a 	srl	r17,r16,r2
    9fb8:	35cc983a 	sll	r6,r6,r23
    9fbc:	3f38b03a 	or	fp,r7,fp
    9fc0:	e024d43a 	srli	r18,fp,16
    9fc4:	9884d83a 	srl	r2,r19,r2
    9fc8:	85e0983a 	sll	r16,r16,r23
    9fcc:	8809883a 	mov	r4,r17
    9fd0:	900b883a 	mov	r5,r18
    9fd4:	d9800015 	stw	r6,0(sp)
    9fd8:	1420b03a 	or	r16,r2,r16
    9fdc:	000a99c0 	call	a99c <__umodsi3>
    9fe0:	900b883a 	mov	r5,r18
    9fe4:	8809883a 	mov	r4,r17
    9fe8:	1029883a 	mov	r20,r2
    9fec:	e5bfffcc 	andi	r22,fp,65535
    9ff0:	000a9380 	call	a938 <__udivsi3>
    9ff4:	100b883a 	mov	r5,r2
    9ff8:	b009883a 	mov	r4,r22
    9ffc:	102b883a 	mov	r21,r2
    a000:	000a9f40 	call	a9f4 <__mulsi3>
    a004:	a028943a 	slli	r20,r20,16
    a008:	8006d43a 	srli	r3,r16,16
    a00c:	1d06b03a 	or	r3,r3,r20
    a010:	1880042e 	bgeu	r3,r2,a024 <__udivdi3+0x3a4>
    a014:	1f07883a 	add	r3,r3,fp
    a018:	a93fffc4 	addi	r4,r21,-1
    a01c:	1f00892e 	bgeu	r3,fp,a244 <__udivdi3+0x5c4>
    a020:	202b883a 	mov	r21,r4
    a024:	18a3c83a 	sub	r17,r3,r2
    a028:	8809883a 	mov	r4,r17
    a02c:	900b883a 	mov	r5,r18
    a030:	000a99c0 	call	a99c <__umodsi3>
    a034:	1029883a 	mov	r20,r2
    a038:	8809883a 	mov	r4,r17
    a03c:	900b883a 	mov	r5,r18
    a040:	a028943a 	slli	r20,r20,16
    a044:	000a9380 	call	a938 <__udivsi3>
    a048:	100b883a 	mov	r5,r2
    a04c:	b009883a 	mov	r4,r22
    a050:	843fffcc 	andi	r16,r16,65535
    a054:	1023883a 	mov	r17,r2
    a058:	8520b03a 	or	r16,r16,r20
    a05c:	000a9f40 	call	a9f4 <__mulsi3>
    a060:	8080042e 	bgeu	r16,r2,a074 <__udivdi3+0x3f4>
    a064:	8721883a 	add	r16,r16,fp
    a068:	88ffffc4 	addi	r3,r17,-1
    a06c:	8700712e 	bgeu	r16,fp,a234 <__udivdi3+0x5b4>
    a070:	1823883a 	mov	r17,r3
    a074:	a80e943a 	slli	r7,r21,16
    a078:	d8c00017 	ldw	r3,0(sp)
    a07c:	80a1c83a 	sub	r16,r16,r2
    a080:	3c64b03a 	or	r18,r7,r17
    a084:	1d3fffcc 	andi	r20,r3,65535
    a088:	9022d43a 	srli	r17,r18,16
    a08c:	95bfffcc 	andi	r22,r18,65535
    a090:	a00b883a 	mov	r5,r20
    a094:	b009883a 	mov	r4,r22
    a098:	182ad43a 	srli	r21,r3,16
    a09c:	000a9f40 	call	a9f4 <__mulsi3>
    a0a0:	a00b883a 	mov	r5,r20
    a0a4:	8809883a 	mov	r4,r17
    a0a8:	1039883a 	mov	fp,r2
    a0ac:	000a9f40 	call	a9f4 <__mulsi3>
    a0b0:	8809883a 	mov	r4,r17
    a0b4:	a80b883a 	mov	r5,r21
    a0b8:	1029883a 	mov	r20,r2
    a0bc:	000a9f40 	call	a9f4 <__mulsi3>
    a0c0:	a80b883a 	mov	r5,r21
    a0c4:	b009883a 	mov	r4,r22
    a0c8:	1023883a 	mov	r17,r2
    a0cc:	000a9f40 	call	a9f4 <__mulsi3>
    a0d0:	e006d43a 	srli	r3,fp,16
    a0d4:	1505883a 	add	r2,r2,r20
    a0d8:	1887883a 	add	r3,r3,r2
    a0dc:	1d00022e 	bgeu	r3,r20,a0e8 <__udivdi3+0x468>
    a0e0:	00800074 	movhi	r2,1
    a0e4:	88a3883a 	add	r17,r17,r2
    a0e8:	1804d43a 	srli	r2,r3,16
    a0ec:	1463883a 	add	r17,r2,r17
    a0f0:	84404436 	bltu	r16,r17,a204 <__udivdi3+0x584>
    a0f4:	84403e26 	beq	r16,r17,a1f0 <__udivdi3+0x570>
    a0f8:	9005883a 	mov	r2,r18
    a0fc:	0007883a 	mov	r3,zero
    a100:	003f9106 	br	9f48 <__alt_data_end+0xfffe9f48>
    a104:	88e2983a 	sll	r17,r17,r3
    a108:	80aed83a 	srl	r23,r16,r2
    a10c:	80e0983a 	sll	r16,r16,r3
    a110:	882ad43a 	srli	r21,r17,16
    a114:	9884d83a 	srl	r2,r19,r2
    a118:	b809883a 	mov	r4,r23
    a11c:	a80b883a 	mov	r5,r21
    a120:	98e4983a 	sll	r18,r19,r3
    a124:	142cb03a 	or	r22,r2,r16
    a128:	000a99c0 	call	a99c <__umodsi3>
    a12c:	b809883a 	mov	r4,r23
    a130:	a80b883a 	mov	r5,r21
    a134:	1027883a 	mov	r19,r2
    a138:	8d3fffcc 	andi	r20,r17,65535
    a13c:	000a9380 	call	a938 <__udivsi3>
    a140:	a009883a 	mov	r4,r20
    a144:	100b883a 	mov	r5,r2
    a148:	102f883a 	mov	r23,r2
    a14c:	000a9f40 	call	a9f4 <__mulsi3>
    a150:	9826943a 	slli	r19,r19,16
    a154:	b008d43a 	srli	r4,r22,16
    a158:	24c8b03a 	or	r4,r4,r19
    a15c:	2080062e 	bgeu	r4,r2,a178 <__udivdi3+0x4f8>
    a160:	2449883a 	add	r4,r4,r17
    a164:	b8ffffc4 	addi	r3,r23,-1
    a168:	24403c36 	bltu	r4,r17,a25c <__udivdi3+0x5dc>
    a16c:	20803b2e 	bgeu	r4,r2,a25c <__udivdi3+0x5dc>
    a170:	bdffff84 	addi	r23,r23,-2
    a174:	2449883a 	add	r4,r4,r17
    a178:	20a1c83a 	sub	r16,r4,r2
    a17c:	a80b883a 	mov	r5,r21
    a180:	8009883a 	mov	r4,r16
    a184:	000a99c0 	call	a99c <__umodsi3>
    a188:	a80b883a 	mov	r5,r21
    a18c:	8009883a 	mov	r4,r16
    a190:	1027883a 	mov	r19,r2
    a194:	000a9380 	call	a938 <__udivsi3>
    a198:	a009883a 	mov	r4,r20
    a19c:	100b883a 	mov	r5,r2
    a1a0:	9826943a 	slli	r19,r19,16
    a1a4:	1039883a 	mov	fp,r2
    a1a8:	000a9f40 	call	a9f4 <__mulsi3>
    a1ac:	b13fffcc 	andi	r4,r22,65535
    a1b0:	24c8b03a 	or	r4,r4,r19
    a1b4:	2080062e 	bgeu	r4,r2,a1d0 <__udivdi3+0x550>
    a1b8:	2449883a 	add	r4,r4,r17
    a1bc:	e0ffffc4 	addi	r3,fp,-1
    a1c0:	24402436 	bltu	r4,r17,a254 <__udivdi3+0x5d4>
    a1c4:	2080232e 	bgeu	r4,r2,a254 <__udivdi3+0x5d4>
    a1c8:	e73fff84 	addi	fp,fp,-2
    a1cc:	2449883a 	add	r4,r4,r17
    a1d0:	b82e943a 	slli	r23,r23,16
    a1d4:	20a1c83a 	sub	r16,r4,r2
    a1d8:	bf06b03a 	or	r3,r23,fp
    a1dc:	003f2806 	br	9e80 <__alt_data_end+0xfffe9e80>
    a1e0:	2021883a 	mov	r16,r4
    a1e4:	003f5306 	br	9f34 <__alt_data_end+0xfffe9f34>
    a1e8:	1821883a 	mov	r16,r3
    a1ec:	003ef406 	br	9dc0 <__alt_data_end+0xfffe9dc0>
    a1f0:	1806943a 	slli	r3,r3,16
    a1f4:	9de6983a 	sll	r19,r19,r23
    a1f8:	e73fffcc 	andi	fp,fp,65535
    a1fc:	1f07883a 	add	r3,r3,fp
    a200:	98ffbd2e 	bgeu	r19,r3,a0f8 <__alt_data_end+0xfffea0f8>
    a204:	90bfffc4 	addi	r2,r18,-1
    a208:	0007883a 	mov	r3,zero
    a20c:	003f4e06 	br	9f48 <__alt_data_end+0xfffe9f48>
    a210:	00800604 	movi	r2,24
    a214:	003ef506 	br	9dec <__alt_data_end+0xfffe9dec>
    a218:	00800604 	movi	r2,24
    a21c:	003f0b06 	br	9e4c <__alt_data_end+0xfffe9e4c>
    a220:	00800604 	movi	r2,24
    a224:	003ead06 	br	9cdc <__alt_data_end+0xfffe9cdc>
    a228:	0007883a 	mov	r3,zero
    a22c:	00800044 	movi	r2,1
    a230:	003f4506 	br	9f48 <__alt_data_end+0xfffe9f48>
    a234:	80bf8e2e 	bgeu	r16,r2,a070 <__alt_data_end+0xfffea070>
    a238:	8c7fff84 	addi	r17,r17,-2
    a23c:	8721883a 	add	r16,r16,fp
    a240:	003f8c06 	br	a074 <__alt_data_end+0xfffea074>
    a244:	18bf762e 	bgeu	r3,r2,a020 <__alt_data_end+0xfffea020>
    a248:	ad7fff84 	addi	r21,r21,-2
    a24c:	1f07883a 	add	r3,r3,fp
    a250:	003f7406 	br	a024 <__alt_data_end+0xfffea024>
    a254:	1839883a 	mov	fp,r3
    a258:	003fdd06 	br	a1d0 <__alt_data_end+0xfffea1d0>
    a25c:	182f883a 	mov	r23,r3
    a260:	003fc506 	br	a178 <__alt_data_end+0xfffea178>
    a264:	b5bfff84 	addi	r22,r22,-2
    a268:	3c4f883a 	add	r7,r7,r17
    a26c:	003f1a06 	br	9ed8 <__alt_data_end+0xfffe9ed8>
    a270:	b5bfff84 	addi	r22,r22,-2
    a274:	1c47883a 	add	r3,r3,r17
    a278:	003ebc06 	br	9d6c <__alt_data_end+0xfffe9d6c>

0000a27c <__umoddi3>:
    a27c:	defff304 	addi	sp,sp,-52
    a280:	df000b15 	stw	fp,44(sp)
    a284:	dc400415 	stw	r17,16(sp)
    a288:	dc000315 	stw	r16,12(sp)
    a28c:	dfc00c15 	stw	ra,48(sp)
    a290:	ddc00a15 	stw	r23,40(sp)
    a294:	dd800915 	stw	r22,36(sp)
    a298:	dd400815 	stw	r21,32(sp)
    a29c:	dd000715 	stw	r20,28(sp)
    a2a0:	dcc00615 	stw	r19,24(sp)
    a2a4:	dc800515 	stw	r18,20(sp)
    a2a8:	2021883a 	mov	r16,r4
    a2ac:	2823883a 	mov	r17,r5
    a2b0:	2839883a 	mov	fp,r5
    a2b4:	3800401e 	bne	r7,zero,a3b8 <__umoddi3+0x13c>
    a2b8:	3027883a 	mov	r19,r6
    a2bc:	2029883a 	mov	r20,r4
    a2c0:	2980552e 	bgeu	r5,r6,a418 <__umoddi3+0x19c>
    a2c4:	00bfffd4 	movui	r2,65535
    a2c8:	1180a236 	bltu	r2,r6,a554 <__umoddi3+0x2d8>
    a2cc:	01003fc4 	movi	r4,255
    a2d0:	2189803a 	cmpltu	r4,r4,r6
    a2d4:	200890fa 	slli	r4,r4,3
    a2d8:	3104d83a 	srl	r2,r6,r4
    a2dc:	00c00074 	movhi	r3,1
    a2e0:	18feab04 	addi	r3,r3,-1364
    a2e4:	1885883a 	add	r2,r3,r2
    a2e8:	10c00003 	ldbu	r3,0(r2)
    a2ec:	00800804 	movi	r2,32
    a2f0:	1909883a 	add	r4,r3,r4
    a2f4:	1125c83a 	sub	r18,r2,r4
    a2f8:	90000526 	beq	r18,zero,a310 <__umoddi3+0x94>
    a2fc:	8ca2983a 	sll	r17,r17,r18
    a300:	8108d83a 	srl	r4,r16,r4
    a304:	34a6983a 	sll	r19,r6,r18
    a308:	84a8983a 	sll	r20,r16,r18
    a30c:	2478b03a 	or	fp,r4,r17
    a310:	982cd43a 	srli	r22,r19,16
    a314:	e009883a 	mov	r4,fp
    a318:	9dffffcc 	andi	r23,r19,65535
    a31c:	b00b883a 	mov	r5,r22
    a320:	000a99c0 	call	a99c <__umodsi3>
    a324:	b00b883a 	mov	r5,r22
    a328:	e009883a 	mov	r4,fp
    a32c:	102b883a 	mov	r21,r2
    a330:	000a9380 	call	a938 <__udivsi3>
    a334:	100b883a 	mov	r5,r2
    a338:	b809883a 	mov	r4,r23
    a33c:	000a9f40 	call	a9f4 <__mulsi3>
    a340:	a82a943a 	slli	r21,r21,16
    a344:	a006d43a 	srli	r3,r20,16
    a348:	1d46b03a 	or	r3,r3,r21
    a34c:	1880032e 	bgeu	r3,r2,a35c <__umoddi3+0xe0>
    a350:	1cc7883a 	add	r3,r3,r19
    a354:	1cc00136 	bltu	r3,r19,a35c <__umoddi3+0xe0>
    a358:	18813136 	bltu	r3,r2,a820 <__umoddi3+0x5a4>
    a35c:	18a1c83a 	sub	r16,r3,r2
    a360:	b00b883a 	mov	r5,r22
    a364:	8009883a 	mov	r4,r16
    a368:	000a99c0 	call	a99c <__umodsi3>
    a36c:	b00b883a 	mov	r5,r22
    a370:	8009883a 	mov	r4,r16
    a374:	1023883a 	mov	r17,r2
    a378:	000a9380 	call	a938 <__udivsi3>
    a37c:	100b883a 	mov	r5,r2
    a380:	b809883a 	mov	r4,r23
    a384:	8822943a 	slli	r17,r17,16
    a388:	000a9f40 	call	a9f4 <__mulsi3>
    a38c:	a0ffffcc 	andi	r3,r20,65535
    a390:	1c46b03a 	or	r3,r3,r17
    a394:	1880042e 	bgeu	r3,r2,a3a8 <__umoddi3+0x12c>
    a398:	1cc7883a 	add	r3,r3,r19
    a39c:	1cc00236 	bltu	r3,r19,a3a8 <__umoddi3+0x12c>
    a3a0:	1880012e 	bgeu	r3,r2,a3a8 <__umoddi3+0x12c>
    a3a4:	1cc7883a 	add	r3,r3,r19
    a3a8:	1885c83a 	sub	r2,r3,r2
    a3ac:	1484d83a 	srl	r2,r2,r18
    a3b0:	0007883a 	mov	r3,zero
    a3b4:	00005306 	br	a504 <__umoddi3+0x288>
    a3b8:	29c05036 	bltu	r5,r7,a4fc <__umoddi3+0x280>
    a3bc:	00bfffd4 	movui	r2,65535
    a3c0:	11c05c2e 	bgeu	r2,r7,a534 <__umoddi3+0x2b8>
    a3c4:	00804034 	movhi	r2,256
    a3c8:	10bfffc4 	addi	r2,r2,-1
    a3cc:	11c10636 	bltu	r2,r7,a7e8 <__umoddi3+0x56c>
    a3d0:	01000404 	movi	r4,16
    a3d4:	3904d83a 	srl	r2,r7,r4
    a3d8:	00c00074 	movhi	r3,1
    a3dc:	18feab04 	addi	r3,r3,-1364
    a3e0:	1885883a 	add	r2,r3,r2
    a3e4:	14c00003 	ldbu	r19,0(r2)
    a3e8:	00c00804 	movi	r3,32
    a3ec:	9927883a 	add	r19,r19,r4
    a3f0:	1ce9c83a 	sub	r20,r3,r19
    a3f4:	a0005c1e 	bne	r20,zero,a568 <__umoddi3+0x2ec>
    a3f8:	3c400136 	bltu	r7,r17,a400 <__umoddi3+0x184>
    a3fc:	81810a36 	bltu	r16,r6,a828 <__umoddi3+0x5ac>
    a400:	8185c83a 	sub	r2,r16,r6
    a404:	89e3c83a 	sub	r17,r17,r7
    a408:	8089803a 	cmpltu	r4,r16,r2
    a40c:	8939c83a 	sub	fp,r17,r4
    a410:	e007883a 	mov	r3,fp
    a414:	00003b06 	br	a504 <__umoddi3+0x288>
    a418:	3000041e 	bne	r6,zero,a42c <__umoddi3+0x1b0>
    a41c:	000b883a 	mov	r5,zero
    a420:	01000044 	movi	r4,1
    a424:	000a9380 	call	a938 <__udivsi3>
    a428:	1027883a 	mov	r19,r2
    a42c:	00bfffd4 	movui	r2,65535
    a430:	14c0442e 	bgeu	r2,r19,a544 <__umoddi3+0x2c8>
    a434:	00804034 	movhi	r2,256
    a438:	10bfffc4 	addi	r2,r2,-1
    a43c:	14c0ec36 	bltu	r2,r19,a7f0 <__umoddi3+0x574>
    a440:	00800404 	movi	r2,16
    a444:	9886d83a 	srl	r3,r19,r2
    a448:	01000074 	movhi	r4,1
    a44c:	213eab04 	addi	r4,r4,-1364
    a450:	20c7883a 	add	r3,r4,r3
    a454:	18c00003 	ldbu	r3,0(r3)
    a458:	1887883a 	add	r3,r3,r2
    a45c:	00800804 	movi	r2,32
    a460:	10e5c83a 	sub	r18,r2,r3
    a464:	9000ab1e 	bne	r18,zero,a714 <__umoddi3+0x498>
    a468:	982cd43a 	srli	r22,r19,16
    a46c:	8ce3c83a 	sub	r17,r17,r19
    a470:	9dffffcc 	andi	r23,r19,65535
    a474:	b00b883a 	mov	r5,r22
    a478:	8809883a 	mov	r4,r17
    a47c:	000a99c0 	call	a99c <__umodsi3>
    a480:	b00b883a 	mov	r5,r22
    a484:	8809883a 	mov	r4,r17
    a488:	102b883a 	mov	r21,r2
    a48c:	000a9380 	call	a938 <__udivsi3>
    a490:	b80b883a 	mov	r5,r23
    a494:	1009883a 	mov	r4,r2
    a498:	000a9f40 	call	a9f4 <__mulsi3>
    a49c:	a82a943a 	slli	r21,r21,16
    a4a0:	a006d43a 	srli	r3,r20,16
    a4a4:	1d46b03a 	or	r3,r3,r21
    a4a8:	1880042e 	bgeu	r3,r2,a4bc <__umoddi3+0x240>
    a4ac:	1cc7883a 	add	r3,r3,r19
    a4b0:	1cc00236 	bltu	r3,r19,a4bc <__umoddi3+0x240>
    a4b4:	1880012e 	bgeu	r3,r2,a4bc <__umoddi3+0x240>
    a4b8:	1cc7883a 	add	r3,r3,r19
    a4bc:	18a1c83a 	sub	r16,r3,r2
    a4c0:	b00b883a 	mov	r5,r22
    a4c4:	8009883a 	mov	r4,r16
    a4c8:	000a99c0 	call	a99c <__umodsi3>
    a4cc:	1023883a 	mov	r17,r2
    a4d0:	b00b883a 	mov	r5,r22
    a4d4:	8009883a 	mov	r4,r16
    a4d8:	000a9380 	call	a938 <__udivsi3>
    a4dc:	8822943a 	slli	r17,r17,16
    a4e0:	b80b883a 	mov	r5,r23
    a4e4:	1009883a 	mov	r4,r2
    a4e8:	000a9f40 	call	a9f4 <__mulsi3>
    a4ec:	a53fffcc 	andi	r20,r20,65535
    a4f0:	a446b03a 	or	r3,r20,r17
    a4f4:	18bfac2e 	bgeu	r3,r2,a3a8 <__alt_data_end+0xfffea3a8>
    a4f8:	003fa706 	br	a398 <__alt_data_end+0xfffea398>
    a4fc:	2005883a 	mov	r2,r4
    a500:	2807883a 	mov	r3,r5
    a504:	dfc00c17 	ldw	ra,48(sp)
    a508:	df000b17 	ldw	fp,44(sp)
    a50c:	ddc00a17 	ldw	r23,40(sp)
    a510:	dd800917 	ldw	r22,36(sp)
    a514:	dd400817 	ldw	r21,32(sp)
    a518:	dd000717 	ldw	r20,28(sp)
    a51c:	dcc00617 	ldw	r19,24(sp)
    a520:	dc800517 	ldw	r18,20(sp)
    a524:	dc400417 	ldw	r17,16(sp)
    a528:	dc000317 	ldw	r16,12(sp)
    a52c:	dec00d04 	addi	sp,sp,52
    a530:	f800283a 	ret
    a534:	04c03fc4 	movi	r19,255
    a538:	99c9803a 	cmpltu	r4,r19,r7
    a53c:	200890fa 	slli	r4,r4,3
    a540:	003fa406 	br	a3d4 <__alt_data_end+0xfffea3d4>
    a544:	00803fc4 	movi	r2,255
    a548:	14c5803a 	cmpltu	r2,r2,r19
    a54c:	100490fa 	slli	r2,r2,3
    a550:	003fbc06 	br	a444 <__alt_data_end+0xfffea444>
    a554:	00804034 	movhi	r2,256
    a558:	10bfffc4 	addi	r2,r2,-1
    a55c:	1180a636 	bltu	r2,r6,a7f8 <__umoddi3+0x57c>
    a560:	01000404 	movi	r4,16
    a564:	003f5c06 	br	a2d8 <__alt_data_end+0xfffea2d8>
    a568:	3d0e983a 	sll	r7,r7,r20
    a56c:	34ead83a 	srl	r21,r6,r19
    a570:	8cc6d83a 	srl	r3,r17,r19
    a574:	8d10983a 	sll	r8,r17,r20
    a578:	3d6ab03a 	or	r21,r7,r21
    a57c:	a82cd43a 	srli	r22,r21,16
    a580:	84e2d83a 	srl	r17,r16,r19
    a584:	1809883a 	mov	r4,r3
    a588:	b00b883a 	mov	r5,r22
    a58c:	8a22b03a 	or	r17,r17,r8
    a590:	3524983a 	sll	r18,r6,r20
    a594:	dc400015 	stw	r17,0(sp)
    a598:	d8c00115 	stw	r3,4(sp)
    a59c:	000a99c0 	call	a99c <__umodsi3>
    a5a0:	d8c00117 	ldw	r3,4(sp)
    a5a4:	b00b883a 	mov	r5,r22
    a5a8:	1039883a 	mov	fp,r2
    a5ac:	1809883a 	mov	r4,r3
    a5b0:	000a9380 	call	a938 <__udivsi3>
    a5b4:	adffffcc 	andi	r23,r21,65535
    a5b8:	100b883a 	mov	r5,r2
    a5bc:	b809883a 	mov	r4,r23
    a5c0:	1023883a 	mov	r17,r2
    a5c4:	000a9f40 	call	a9f4 <__mulsi3>
    a5c8:	d9400017 	ldw	r5,0(sp)
    a5cc:	e008943a 	slli	r4,fp,16
    a5d0:	8520983a 	sll	r16,r16,r20
    a5d4:	2806d43a 	srli	r3,r5,16
    a5d8:	1906b03a 	or	r3,r3,r4
    a5dc:	1880042e 	bgeu	r3,r2,a5f0 <__umoddi3+0x374>
    a5e0:	1d47883a 	add	r3,r3,r21
    a5e4:	893fffc4 	addi	r4,r17,-1
    a5e8:	1d40892e 	bgeu	r3,r21,a810 <__umoddi3+0x594>
    a5ec:	2023883a 	mov	r17,r4
    a5f0:	18b9c83a 	sub	fp,r3,r2
    a5f4:	b00b883a 	mov	r5,r22
    a5f8:	e009883a 	mov	r4,fp
    a5fc:	000a99c0 	call	a99c <__umodsi3>
    a600:	b00b883a 	mov	r5,r22
    a604:	e009883a 	mov	r4,fp
    a608:	d8800215 	stw	r2,8(sp)
    a60c:	000a9380 	call	a938 <__udivsi3>
    a610:	100b883a 	mov	r5,r2
    a614:	b809883a 	mov	r4,r23
    a618:	102d883a 	mov	r22,r2
    a61c:	000a9f40 	call	a9f4 <__mulsi3>
    a620:	d9800217 	ldw	r6,8(sp)
    a624:	d8c00017 	ldw	r3,0(sp)
    a628:	300c943a 	slli	r6,r6,16
    a62c:	1a3fffcc 	andi	r8,r3,65535
    a630:	4190b03a 	or	r8,r8,r6
    a634:	4080042e 	bgeu	r8,r2,a648 <__umoddi3+0x3cc>
    a638:	4551883a 	add	r8,r8,r21
    a63c:	b0ffffc4 	addi	r3,r22,-1
    a640:	45406f2e 	bgeu	r8,r21,a800 <__umoddi3+0x584>
    a644:	182d883a 	mov	r22,r3
    a648:	880e943a 	slli	r7,r17,16
    a64c:	9006d43a 	srli	r3,r18,16
    a650:	91bfffcc 	andi	r6,r18,65535
    a654:	3dacb03a 	or	r22,r7,r22
    a658:	b02ed43a 	srli	r23,r22,16
    a65c:	b5bfffcc 	andi	r22,r22,65535
    a660:	300b883a 	mov	r5,r6
    a664:	b009883a 	mov	r4,r22
    a668:	40a3c83a 	sub	r17,r8,r2
    a66c:	d8c00115 	stw	r3,4(sp)
    a670:	d9800215 	stw	r6,8(sp)
    a674:	000a9f40 	call	a9f4 <__mulsi3>
    a678:	d9800217 	ldw	r6,8(sp)
    a67c:	b809883a 	mov	r4,r23
    a680:	1039883a 	mov	fp,r2
    a684:	300b883a 	mov	r5,r6
    a688:	000a9f40 	call	a9f4 <__mulsi3>
    a68c:	d8c00117 	ldw	r3,4(sp)
    a690:	b809883a 	mov	r4,r23
    a694:	d8800215 	stw	r2,8(sp)
    a698:	180b883a 	mov	r5,r3
    a69c:	000a9f40 	call	a9f4 <__mulsi3>
    a6a0:	d8c00117 	ldw	r3,4(sp)
    a6a4:	b009883a 	mov	r4,r22
    a6a8:	102f883a 	mov	r23,r2
    a6ac:	180b883a 	mov	r5,r3
    a6b0:	000a9f40 	call	a9f4 <__mulsi3>
    a6b4:	d9800217 	ldw	r6,8(sp)
    a6b8:	e006d43a 	srli	r3,fp,16
    a6bc:	1185883a 	add	r2,r2,r6
    a6c0:	1885883a 	add	r2,r3,r2
    a6c4:	1180022e 	bgeu	r2,r6,a6d0 <__umoddi3+0x454>
    a6c8:	00c00074 	movhi	r3,1
    a6cc:	b8ef883a 	add	r23,r23,r3
    a6d0:	1006d43a 	srli	r3,r2,16
    a6d4:	1004943a 	slli	r2,r2,16
    a6d8:	e73fffcc 	andi	fp,fp,65535
    a6dc:	1dc7883a 	add	r3,r3,r23
    a6e0:	1739883a 	add	fp,r2,fp
    a6e4:	88c03a36 	bltu	r17,r3,a7d0 <__umoddi3+0x554>
    a6e8:	88c05126 	beq	r17,r3,a830 <__umoddi3+0x5b4>
    a6ec:	88c9c83a 	sub	r4,r17,r3
    a6f0:	e00f883a 	mov	r7,fp
    a6f4:	81cfc83a 	sub	r7,r16,r7
    a6f8:	81c7803a 	cmpltu	r3,r16,r7
    a6fc:	20c7c83a 	sub	r3,r4,r3
    a700:	1cc4983a 	sll	r2,r3,r19
    a704:	3d0ed83a 	srl	r7,r7,r20
    a708:	1d06d83a 	srl	r3,r3,r20
    a70c:	11c4b03a 	or	r2,r2,r7
    a710:	003f7c06 	br	a504 <__alt_data_end+0xfffea504>
    a714:	9ca6983a 	sll	r19,r19,r18
    a718:	88f8d83a 	srl	fp,r17,r3
    a71c:	80c4d83a 	srl	r2,r16,r3
    a720:	982cd43a 	srli	r22,r19,16
    a724:	8ca2983a 	sll	r17,r17,r18
    a728:	e009883a 	mov	r4,fp
    a72c:	b00b883a 	mov	r5,r22
    a730:	146ab03a 	or	r21,r2,r17
    a734:	000a99c0 	call	a99c <__umodsi3>
    a738:	b00b883a 	mov	r5,r22
    a73c:	e009883a 	mov	r4,fp
    a740:	1029883a 	mov	r20,r2
    a744:	9dffffcc 	andi	r23,r19,65535
    a748:	000a9380 	call	a938 <__udivsi3>
    a74c:	b809883a 	mov	r4,r23
    a750:	100b883a 	mov	r5,r2
    a754:	000a9f40 	call	a9f4 <__mulsi3>
    a758:	a008943a 	slli	r4,r20,16
    a75c:	a806d43a 	srli	r3,r21,16
    a760:	84a8983a 	sll	r20,r16,r18
    a764:	1906b03a 	or	r3,r3,r4
    a768:	1880042e 	bgeu	r3,r2,a77c <__umoddi3+0x500>
    a76c:	1cc7883a 	add	r3,r3,r19
    a770:	1cc00236 	bltu	r3,r19,a77c <__umoddi3+0x500>
    a774:	1880012e 	bgeu	r3,r2,a77c <__umoddi3+0x500>
    a778:	1cc7883a 	add	r3,r3,r19
    a77c:	18a3c83a 	sub	r17,r3,r2
    a780:	b00b883a 	mov	r5,r22
    a784:	8809883a 	mov	r4,r17
    a788:	000a99c0 	call	a99c <__umodsi3>
    a78c:	b00b883a 	mov	r5,r22
    a790:	8809883a 	mov	r4,r17
    a794:	1021883a 	mov	r16,r2
    a798:	000a9380 	call	a938 <__udivsi3>
    a79c:	100b883a 	mov	r5,r2
    a7a0:	b809883a 	mov	r4,r23
    a7a4:	8020943a 	slli	r16,r16,16
    a7a8:	000a9f40 	call	a9f4 <__mulsi3>
    a7ac:	a8ffffcc 	andi	r3,r21,65535
    a7b0:	1c06b03a 	or	r3,r3,r16
    a7b4:	1880042e 	bgeu	r3,r2,a7c8 <__umoddi3+0x54c>
    a7b8:	1cc7883a 	add	r3,r3,r19
    a7bc:	1cc00236 	bltu	r3,r19,a7c8 <__umoddi3+0x54c>
    a7c0:	1880012e 	bgeu	r3,r2,a7c8 <__umoddi3+0x54c>
    a7c4:	1cc7883a 	add	r3,r3,r19
    a7c8:	18a3c83a 	sub	r17,r3,r2
    a7cc:	003f2906 	br	a474 <__alt_data_end+0xfffea474>
    a7d0:	e48fc83a 	sub	r7,fp,r18
    a7d4:	1d49c83a 	sub	r4,r3,r21
    a7d8:	e1f9803a 	cmpltu	fp,fp,r7
    a7dc:	2739c83a 	sub	fp,r4,fp
    a7e0:	8f09c83a 	sub	r4,r17,fp
    a7e4:	003fc306 	br	a6f4 <__alt_data_end+0xfffea6f4>
    a7e8:	01000604 	movi	r4,24
    a7ec:	003ef906 	br	a3d4 <__alt_data_end+0xfffea3d4>
    a7f0:	00800604 	movi	r2,24
    a7f4:	003f1306 	br	a444 <__alt_data_end+0xfffea444>
    a7f8:	01000604 	movi	r4,24
    a7fc:	003eb606 	br	a2d8 <__alt_data_end+0xfffea2d8>
    a800:	40bf902e 	bgeu	r8,r2,a644 <__alt_data_end+0xfffea644>
    a804:	b5bfff84 	addi	r22,r22,-2
    a808:	4551883a 	add	r8,r8,r21
    a80c:	003f8e06 	br	a648 <__alt_data_end+0xfffea648>
    a810:	18bf762e 	bgeu	r3,r2,a5ec <__alt_data_end+0xfffea5ec>
    a814:	8c7fff84 	addi	r17,r17,-2
    a818:	1d47883a 	add	r3,r3,r21
    a81c:	003f7406 	br	a5f0 <__alt_data_end+0xfffea5f0>
    a820:	1cc7883a 	add	r3,r3,r19
    a824:	003ecd06 	br	a35c <__alt_data_end+0xfffea35c>
    a828:	8005883a 	mov	r2,r16
    a82c:	003ef806 	br	a410 <__alt_data_end+0xfffea410>
    a830:	873fe736 	bltu	r16,fp,a7d0 <__alt_data_end+0xfffea7d0>
    a834:	e00f883a 	mov	r7,fp
    a838:	0009883a 	mov	r4,zero
    a83c:	003fad06 	br	a6f4 <__alt_data_end+0xfffea6f4>

0000a840 <__divsi3>:
    a840:	20001b16 	blt	r4,zero,a8b0 <__divsi3+0x70>
    a844:	000f883a 	mov	r7,zero
    a848:	28001616 	blt	r5,zero,a8a4 <__divsi3+0x64>
    a84c:	200d883a 	mov	r6,r4
    a850:	29001a2e 	bgeu	r5,r4,a8bc <__divsi3+0x7c>
    a854:	00800804 	movi	r2,32
    a858:	00c00044 	movi	r3,1
    a85c:	00000106 	br	a864 <__divsi3+0x24>
    a860:	10000d26 	beq	r2,zero,a898 <__divsi3+0x58>
    a864:	294b883a 	add	r5,r5,r5
    a868:	10bfffc4 	addi	r2,r2,-1
    a86c:	18c7883a 	add	r3,r3,r3
    a870:	293ffb36 	bltu	r5,r4,a860 <__alt_data_end+0xfffea860>
    a874:	0005883a 	mov	r2,zero
    a878:	18000726 	beq	r3,zero,a898 <__divsi3+0x58>
    a87c:	0005883a 	mov	r2,zero
    a880:	31400236 	bltu	r6,r5,a88c <__divsi3+0x4c>
    a884:	314dc83a 	sub	r6,r6,r5
    a888:	10c4b03a 	or	r2,r2,r3
    a88c:	1806d07a 	srli	r3,r3,1
    a890:	280ad07a 	srli	r5,r5,1
    a894:	183ffa1e 	bne	r3,zero,a880 <__alt_data_end+0xfffea880>
    a898:	38000126 	beq	r7,zero,a8a0 <__divsi3+0x60>
    a89c:	0085c83a 	sub	r2,zero,r2
    a8a0:	f800283a 	ret
    a8a4:	014bc83a 	sub	r5,zero,r5
    a8a8:	39c0005c 	xori	r7,r7,1
    a8ac:	003fe706 	br	a84c <__alt_data_end+0xfffea84c>
    a8b0:	0109c83a 	sub	r4,zero,r4
    a8b4:	01c00044 	movi	r7,1
    a8b8:	003fe306 	br	a848 <__alt_data_end+0xfffea848>
    a8bc:	00c00044 	movi	r3,1
    a8c0:	003fee06 	br	a87c <__alt_data_end+0xfffea87c>

0000a8c4 <__modsi3>:
    a8c4:	20001716 	blt	r4,zero,a924 <__modsi3+0x60>
    a8c8:	000f883a 	mov	r7,zero
    a8cc:	2005883a 	mov	r2,r4
    a8d0:	28001216 	blt	r5,zero,a91c <__modsi3+0x58>
    a8d4:	2900162e 	bgeu	r5,r4,a930 <__modsi3+0x6c>
    a8d8:	01800804 	movi	r6,32
    a8dc:	00c00044 	movi	r3,1
    a8e0:	00000106 	br	a8e8 <__modsi3+0x24>
    a8e4:	30000a26 	beq	r6,zero,a910 <__modsi3+0x4c>
    a8e8:	294b883a 	add	r5,r5,r5
    a8ec:	31bfffc4 	addi	r6,r6,-1
    a8f0:	18c7883a 	add	r3,r3,r3
    a8f4:	293ffb36 	bltu	r5,r4,a8e4 <__alt_data_end+0xfffea8e4>
    a8f8:	18000526 	beq	r3,zero,a910 <__modsi3+0x4c>
    a8fc:	1806d07a 	srli	r3,r3,1
    a900:	11400136 	bltu	r2,r5,a908 <__modsi3+0x44>
    a904:	1145c83a 	sub	r2,r2,r5
    a908:	280ad07a 	srli	r5,r5,1
    a90c:	183ffb1e 	bne	r3,zero,a8fc <__alt_data_end+0xfffea8fc>
    a910:	38000126 	beq	r7,zero,a918 <__modsi3+0x54>
    a914:	0085c83a 	sub	r2,zero,r2
    a918:	f800283a 	ret
    a91c:	014bc83a 	sub	r5,zero,r5
    a920:	003fec06 	br	a8d4 <__alt_data_end+0xfffea8d4>
    a924:	0109c83a 	sub	r4,zero,r4
    a928:	01c00044 	movi	r7,1
    a92c:	003fe706 	br	a8cc <__alt_data_end+0xfffea8cc>
    a930:	00c00044 	movi	r3,1
    a934:	003ff106 	br	a8fc <__alt_data_end+0xfffea8fc>

0000a938 <__udivsi3>:
    a938:	200d883a 	mov	r6,r4
    a93c:	2900152e 	bgeu	r5,r4,a994 <__udivsi3+0x5c>
    a940:	28001416 	blt	r5,zero,a994 <__udivsi3+0x5c>
    a944:	00800804 	movi	r2,32
    a948:	00c00044 	movi	r3,1
    a94c:	00000206 	br	a958 <__udivsi3+0x20>
    a950:	10000e26 	beq	r2,zero,a98c <__udivsi3+0x54>
    a954:	28000516 	blt	r5,zero,a96c <__udivsi3+0x34>
    a958:	294b883a 	add	r5,r5,r5
    a95c:	10bfffc4 	addi	r2,r2,-1
    a960:	18c7883a 	add	r3,r3,r3
    a964:	293ffa36 	bltu	r5,r4,a950 <__alt_data_end+0xfffea950>
    a968:	18000826 	beq	r3,zero,a98c <__udivsi3+0x54>
    a96c:	0005883a 	mov	r2,zero
    a970:	31400236 	bltu	r6,r5,a97c <__udivsi3+0x44>
    a974:	314dc83a 	sub	r6,r6,r5
    a978:	10c4b03a 	or	r2,r2,r3
    a97c:	1806d07a 	srli	r3,r3,1
    a980:	280ad07a 	srli	r5,r5,1
    a984:	183ffa1e 	bne	r3,zero,a970 <__alt_data_end+0xfffea970>
    a988:	f800283a 	ret
    a98c:	0005883a 	mov	r2,zero
    a990:	f800283a 	ret
    a994:	00c00044 	movi	r3,1
    a998:	003ff406 	br	a96c <__alt_data_end+0xfffea96c>

0000a99c <__umodsi3>:
    a99c:	2005883a 	mov	r2,r4
    a9a0:	2900122e 	bgeu	r5,r4,a9ec <__umodsi3+0x50>
    a9a4:	28001116 	blt	r5,zero,a9ec <__umodsi3+0x50>
    a9a8:	01800804 	movi	r6,32
    a9ac:	00c00044 	movi	r3,1
    a9b0:	00000206 	br	a9bc <__umodsi3+0x20>
    a9b4:	30000c26 	beq	r6,zero,a9e8 <__umodsi3+0x4c>
    a9b8:	28000516 	blt	r5,zero,a9d0 <__umodsi3+0x34>
    a9bc:	294b883a 	add	r5,r5,r5
    a9c0:	31bfffc4 	addi	r6,r6,-1
    a9c4:	18c7883a 	add	r3,r3,r3
    a9c8:	293ffa36 	bltu	r5,r4,a9b4 <__alt_data_end+0xfffea9b4>
    a9cc:	18000626 	beq	r3,zero,a9e8 <__umodsi3+0x4c>
    a9d0:	1806d07a 	srli	r3,r3,1
    a9d4:	11400136 	bltu	r2,r5,a9dc <__umodsi3+0x40>
    a9d8:	1145c83a 	sub	r2,r2,r5
    a9dc:	280ad07a 	srli	r5,r5,1
    a9e0:	183ffb1e 	bne	r3,zero,a9d0 <__alt_data_end+0xfffea9d0>
    a9e4:	f800283a 	ret
    a9e8:	f800283a 	ret
    a9ec:	00c00044 	movi	r3,1
    a9f0:	003ff706 	br	a9d0 <__alt_data_end+0xfffea9d0>

0000a9f4 <__mulsi3>:
    a9f4:	0005883a 	mov	r2,zero
    a9f8:	20000726 	beq	r4,zero,aa18 <__mulsi3+0x24>
    a9fc:	20c0004c 	andi	r3,r4,1
    aa00:	2008d07a 	srli	r4,r4,1
    aa04:	18000126 	beq	r3,zero,aa0c <__mulsi3+0x18>
    aa08:	1145883a 	add	r2,r2,r5
    aa0c:	294b883a 	add	r5,r5,r5
    aa10:	203ffa1e 	bne	r4,zero,a9fc <__alt_data_end+0xfffea9fc>
    aa14:	f800283a 	ret
    aa18:	f800283a 	ret

0000aa1c <__adddf3>:
    aa1c:	02c00434 	movhi	r11,16
    aa20:	5affffc4 	addi	r11,r11,-1
    aa24:	2806d7fa 	srli	r3,r5,31
    aa28:	2ad4703a 	and	r10,r5,r11
    aa2c:	3ad2703a 	and	r9,r7,r11
    aa30:	3804d53a 	srli	r2,r7,20
    aa34:	3018d77a 	srli	r12,r6,29
    aa38:	280ad53a 	srli	r5,r5,20
    aa3c:	501490fa 	slli	r10,r10,3
    aa40:	2010d77a 	srli	r8,r4,29
    aa44:	481290fa 	slli	r9,r9,3
    aa48:	380ed7fa 	srli	r7,r7,31
    aa4c:	defffb04 	addi	sp,sp,-20
    aa50:	dc800215 	stw	r18,8(sp)
    aa54:	dc400115 	stw	r17,4(sp)
    aa58:	dc000015 	stw	r16,0(sp)
    aa5c:	dfc00415 	stw	ra,16(sp)
    aa60:	dcc00315 	stw	r19,12(sp)
    aa64:	1c803fcc 	andi	r18,r3,255
    aa68:	2c01ffcc 	andi	r16,r5,2047
    aa6c:	5210b03a 	or	r8,r10,r8
    aa70:	202290fa 	slli	r17,r4,3
    aa74:	1081ffcc 	andi	r2,r2,2047
    aa78:	4b12b03a 	or	r9,r9,r12
    aa7c:	300c90fa 	slli	r6,r6,3
    aa80:	91c07526 	beq	r18,r7,ac58 <__adddf3+0x23c>
    aa84:	8087c83a 	sub	r3,r16,r2
    aa88:	00c0ab0e 	bge	zero,r3,ad38 <__adddf3+0x31c>
    aa8c:	10002a1e 	bne	r2,zero,ab38 <__adddf3+0x11c>
    aa90:	4984b03a 	or	r2,r9,r6
    aa94:	1000961e 	bne	r2,zero,acf0 <__adddf3+0x2d4>
    aa98:	888001cc 	andi	r2,r17,7
    aa9c:	10000726 	beq	r2,zero,aabc <__adddf3+0xa0>
    aaa0:	888003cc 	andi	r2,r17,15
    aaa4:	00c00104 	movi	r3,4
    aaa8:	10c00426 	beq	r2,r3,aabc <__adddf3+0xa0>
    aaac:	88c7883a 	add	r3,r17,r3
    aab0:	1c63803a 	cmpltu	r17,r3,r17
    aab4:	4451883a 	add	r8,r8,r17
    aab8:	1823883a 	mov	r17,r3
    aabc:	4080202c 	andhi	r2,r8,128
    aac0:	10005926 	beq	r2,zero,ac28 <__adddf3+0x20c>
    aac4:	84000044 	addi	r16,r16,1
    aac8:	0081ffc4 	movi	r2,2047
    aacc:	8080ba26 	beq	r16,r2,adb8 <__adddf3+0x39c>
    aad0:	00bfe034 	movhi	r2,65408
    aad4:	10bfffc4 	addi	r2,r2,-1
    aad8:	4090703a 	and	r8,r8,r2
    aadc:	4004977a 	slli	r2,r8,29
    aae0:	4010927a 	slli	r8,r8,9
    aae4:	8822d0fa 	srli	r17,r17,3
    aae8:	8401ffcc 	andi	r16,r16,2047
    aaec:	4010d33a 	srli	r8,r8,12
    aaf0:	9007883a 	mov	r3,r18
    aaf4:	1444b03a 	or	r2,r2,r17
    aaf8:	8401ffcc 	andi	r16,r16,2047
    aafc:	8020953a 	slli	r16,r16,20
    ab00:	18c03fcc 	andi	r3,r3,255
    ab04:	01000434 	movhi	r4,16
    ab08:	213fffc4 	addi	r4,r4,-1
    ab0c:	180697fa 	slli	r3,r3,31
    ab10:	4110703a 	and	r8,r8,r4
    ab14:	4410b03a 	or	r8,r8,r16
    ab18:	40c6b03a 	or	r3,r8,r3
    ab1c:	dfc00417 	ldw	ra,16(sp)
    ab20:	dcc00317 	ldw	r19,12(sp)
    ab24:	dc800217 	ldw	r18,8(sp)
    ab28:	dc400117 	ldw	r17,4(sp)
    ab2c:	dc000017 	ldw	r16,0(sp)
    ab30:	dec00504 	addi	sp,sp,20
    ab34:	f800283a 	ret
    ab38:	0081ffc4 	movi	r2,2047
    ab3c:	80bfd626 	beq	r16,r2,aa98 <__alt_data_end+0xfffeaa98>
    ab40:	4a402034 	orhi	r9,r9,128
    ab44:	00800e04 	movi	r2,56
    ab48:	10c09f16 	blt	r2,r3,adc8 <__adddf3+0x3ac>
    ab4c:	008007c4 	movi	r2,31
    ab50:	10c0c216 	blt	r2,r3,ae5c <__adddf3+0x440>
    ab54:	00800804 	movi	r2,32
    ab58:	10c5c83a 	sub	r2,r2,r3
    ab5c:	488a983a 	sll	r5,r9,r2
    ab60:	30c8d83a 	srl	r4,r6,r3
    ab64:	3084983a 	sll	r2,r6,r2
    ab68:	48c6d83a 	srl	r3,r9,r3
    ab6c:	290cb03a 	or	r6,r5,r4
    ab70:	1004c03a 	cmpne	r2,r2,zero
    ab74:	308cb03a 	or	r6,r6,r2
    ab78:	898dc83a 	sub	r6,r17,r6
    ab7c:	89a3803a 	cmpltu	r17,r17,r6
    ab80:	40d1c83a 	sub	r8,r8,r3
    ab84:	4451c83a 	sub	r8,r8,r17
    ab88:	3023883a 	mov	r17,r6
    ab8c:	4080202c 	andhi	r2,r8,128
    ab90:	10002326 	beq	r2,zero,ac20 <__adddf3+0x204>
    ab94:	04c02034 	movhi	r19,128
    ab98:	9cffffc4 	addi	r19,r19,-1
    ab9c:	44e6703a 	and	r19,r8,r19
    aba0:	98007626 	beq	r19,zero,ad7c <__adddf3+0x360>
    aba4:	9809883a 	mov	r4,r19
    aba8:	000d25c0 	call	d25c <__clzsi2>
    abac:	10fffe04 	addi	r3,r2,-8
    abb0:	010007c4 	movi	r4,31
    abb4:	20c07716 	blt	r4,r3,ad94 <__adddf3+0x378>
    abb8:	00800804 	movi	r2,32
    abbc:	10c5c83a 	sub	r2,r2,r3
    abc0:	8884d83a 	srl	r2,r17,r2
    abc4:	98d0983a 	sll	r8,r19,r3
    abc8:	88e2983a 	sll	r17,r17,r3
    abcc:	1204b03a 	or	r2,r2,r8
    abd0:	1c007416 	blt	r3,r16,ada4 <__adddf3+0x388>
    abd4:	1c21c83a 	sub	r16,r3,r16
    abd8:	82000044 	addi	r8,r16,1
    abdc:	00c007c4 	movi	r3,31
    abe0:	1a009116 	blt	r3,r8,ae28 <__adddf3+0x40c>
    abe4:	00c00804 	movi	r3,32
    abe8:	1a07c83a 	sub	r3,r3,r8
    abec:	8a08d83a 	srl	r4,r17,r8
    abf0:	88e2983a 	sll	r17,r17,r3
    abf4:	10c6983a 	sll	r3,r2,r3
    abf8:	1210d83a 	srl	r8,r2,r8
    abfc:	8804c03a 	cmpne	r2,r17,zero
    ac00:	1906b03a 	or	r3,r3,r4
    ac04:	18a2b03a 	or	r17,r3,r2
    ac08:	0021883a 	mov	r16,zero
    ac0c:	003fa206 	br	aa98 <__alt_data_end+0xfffeaa98>
    ac10:	1890b03a 	or	r8,r3,r2
    ac14:	40017d26 	beq	r8,zero,b20c <__adddf3+0x7f0>
    ac18:	1011883a 	mov	r8,r2
    ac1c:	1823883a 	mov	r17,r3
    ac20:	888001cc 	andi	r2,r17,7
    ac24:	103f9e1e 	bne	r2,zero,aaa0 <__alt_data_end+0xfffeaaa0>
    ac28:	4004977a 	slli	r2,r8,29
    ac2c:	8822d0fa 	srli	r17,r17,3
    ac30:	4010d0fa 	srli	r8,r8,3
    ac34:	9007883a 	mov	r3,r18
    ac38:	1444b03a 	or	r2,r2,r17
    ac3c:	0101ffc4 	movi	r4,2047
    ac40:	81002426 	beq	r16,r4,acd4 <__adddf3+0x2b8>
    ac44:	8120703a 	and	r16,r16,r4
    ac48:	01000434 	movhi	r4,16
    ac4c:	213fffc4 	addi	r4,r4,-1
    ac50:	4110703a 	and	r8,r8,r4
    ac54:	003fa806 	br	aaf8 <__alt_data_end+0xfffeaaf8>
    ac58:	8089c83a 	sub	r4,r16,r2
    ac5c:	01005e0e 	bge	zero,r4,add8 <__adddf3+0x3bc>
    ac60:	10002b26 	beq	r2,zero,ad10 <__adddf3+0x2f4>
    ac64:	0081ffc4 	movi	r2,2047
    ac68:	80bf8b26 	beq	r16,r2,aa98 <__alt_data_end+0xfffeaa98>
    ac6c:	4a402034 	orhi	r9,r9,128
    ac70:	00800e04 	movi	r2,56
    ac74:	1100a40e 	bge	r2,r4,af08 <__adddf3+0x4ec>
    ac78:	498cb03a 	or	r6,r9,r6
    ac7c:	300ac03a 	cmpne	r5,r6,zero
    ac80:	0013883a 	mov	r9,zero
    ac84:	2c4b883a 	add	r5,r5,r17
    ac88:	2c63803a 	cmpltu	r17,r5,r17
    ac8c:	4a11883a 	add	r8,r9,r8
    ac90:	8a11883a 	add	r8,r17,r8
    ac94:	2823883a 	mov	r17,r5
    ac98:	4080202c 	andhi	r2,r8,128
    ac9c:	103fe026 	beq	r2,zero,ac20 <__alt_data_end+0xfffeac20>
    aca0:	84000044 	addi	r16,r16,1
    aca4:	0081ffc4 	movi	r2,2047
    aca8:	8080d226 	beq	r16,r2,aff4 <__adddf3+0x5d8>
    acac:	00bfe034 	movhi	r2,65408
    acb0:	10bfffc4 	addi	r2,r2,-1
    acb4:	4090703a 	and	r8,r8,r2
    acb8:	880ad07a 	srli	r5,r17,1
    acbc:	400897fa 	slli	r4,r8,31
    acc0:	88c0004c 	andi	r3,r17,1
    acc4:	28e2b03a 	or	r17,r5,r3
    acc8:	4010d07a 	srli	r8,r8,1
    accc:	2462b03a 	or	r17,r4,r17
    acd0:	003f7106 	br	aa98 <__alt_data_end+0xfffeaa98>
    acd4:	4088b03a 	or	r4,r8,r2
    acd8:	20014526 	beq	r4,zero,b1f0 <__adddf3+0x7d4>
    acdc:	01000434 	movhi	r4,16
    ace0:	42000234 	orhi	r8,r8,8
    ace4:	213fffc4 	addi	r4,r4,-1
    ace8:	4110703a 	and	r8,r8,r4
    acec:	003f8206 	br	aaf8 <__alt_data_end+0xfffeaaf8>
    acf0:	18ffffc4 	addi	r3,r3,-1
    acf4:	1800491e 	bne	r3,zero,ae1c <__adddf3+0x400>
    acf8:	898bc83a 	sub	r5,r17,r6
    acfc:	8963803a 	cmpltu	r17,r17,r5
    ad00:	4251c83a 	sub	r8,r8,r9
    ad04:	4451c83a 	sub	r8,r8,r17
    ad08:	2823883a 	mov	r17,r5
    ad0c:	003f9f06 	br	ab8c <__alt_data_end+0xfffeab8c>
    ad10:	4984b03a 	or	r2,r9,r6
    ad14:	103f6026 	beq	r2,zero,aa98 <__alt_data_end+0xfffeaa98>
    ad18:	213fffc4 	addi	r4,r4,-1
    ad1c:	2000931e 	bne	r4,zero,af6c <__adddf3+0x550>
    ad20:	898d883a 	add	r6,r17,r6
    ad24:	3463803a 	cmpltu	r17,r6,r17
    ad28:	4251883a 	add	r8,r8,r9
    ad2c:	8a11883a 	add	r8,r17,r8
    ad30:	3023883a 	mov	r17,r6
    ad34:	003fd806 	br	ac98 <__alt_data_end+0xfffeac98>
    ad38:	1800541e 	bne	r3,zero,ae8c <__adddf3+0x470>
    ad3c:	80800044 	addi	r2,r16,1
    ad40:	1081ffcc 	andi	r2,r2,2047
    ad44:	00c00044 	movi	r3,1
    ad48:	1880a00e 	bge	r3,r2,afcc <__adddf3+0x5b0>
    ad4c:	8989c83a 	sub	r4,r17,r6
    ad50:	8905803a 	cmpltu	r2,r17,r4
    ad54:	4267c83a 	sub	r19,r8,r9
    ad58:	98a7c83a 	sub	r19,r19,r2
    ad5c:	9880202c 	andhi	r2,r19,128
    ad60:	10006326 	beq	r2,zero,aef0 <__adddf3+0x4d4>
    ad64:	3463c83a 	sub	r17,r6,r17
    ad68:	4a07c83a 	sub	r3,r9,r8
    ad6c:	344d803a 	cmpltu	r6,r6,r17
    ad70:	19a7c83a 	sub	r19,r3,r6
    ad74:	3825883a 	mov	r18,r7
    ad78:	983f8a1e 	bne	r19,zero,aba4 <__alt_data_end+0xfffeaba4>
    ad7c:	8809883a 	mov	r4,r17
    ad80:	000d25c0 	call	d25c <__clzsi2>
    ad84:	10800804 	addi	r2,r2,32
    ad88:	10fffe04 	addi	r3,r2,-8
    ad8c:	010007c4 	movi	r4,31
    ad90:	20ff890e 	bge	r4,r3,abb8 <__alt_data_end+0xfffeabb8>
    ad94:	10bff604 	addi	r2,r2,-40
    ad98:	8884983a 	sll	r2,r17,r2
    ad9c:	0023883a 	mov	r17,zero
    ada0:	1c3f8c0e 	bge	r3,r16,abd4 <__alt_data_end+0xfffeabd4>
    ada4:	023fe034 	movhi	r8,65408
    ada8:	423fffc4 	addi	r8,r8,-1
    adac:	80e1c83a 	sub	r16,r16,r3
    adb0:	1210703a 	and	r8,r2,r8
    adb4:	003f3806 	br	aa98 <__alt_data_end+0xfffeaa98>
    adb8:	9007883a 	mov	r3,r18
    adbc:	0011883a 	mov	r8,zero
    adc0:	0005883a 	mov	r2,zero
    adc4:	003f4c06 	br	aaf8 <__alt_data_end+0xfffeaaf8>
    adc8:	498cb03a 	or	r6,r9,r6
    adcc:	300cc03a 	cmpne	r6,r6,zero
    add0:	0007883a 	mov	r3,zero
    add4:	003f6806 	br	ab78 <__alt_data_end+0xfffeab78>
    add8:	20009c1e 	bne	r4,zero,b04c <__adddf3+0x630>
    addc:	80800044 	addi	r2,r16,1
    ade0:	1141ffcc 	andi	r5,r2,2047
    ade4:	01000044 	movi	r4,1
    ade8:	2140670e 	bge	r4,r5,af88 <__adddf3+0x56c>
    adec:	0101ffc4 	movi	r4,2047
    adf0:	11007f26 	beq	r2,r4,aff0 <__adddf3+0x5d4>
    adf4:	898d883a 	add	r6,r17,r6
    adf8:	4247883a 	add	r3,r8,r9
    adfc:	3451803a 	cmpltu	r8,r6,r17
    ae00:	40d1883a 	add	r8,r8,r3
    ae04:	402297fa 	slli	r17,r8,31
    ae08:	300cd07a 	srli	r6,r6,1
    ae0c:	4010d07a 	srli	r8,r8,1
    ae10:	1021883a 	mov	r16,r2
    ae14:	89a2b03a 	or	r17,r17,r6
    ae18:	003f1f06 	br	aa98 <__alt_data_end+0xfffeaa98>
    ae1c:	0081ffc4 	movi	r2,2047
    ae20:	80bf481e 	bne	r16,r2,ab44 <__alt_data_end+0xfffeab44>
    ae24:	003f1c06 	br	aa98 <__alt_data_end+0xfffeaa98>
    ae28:	843ff844 	addi	r16,r16,-31
    ae2c:	01000804 	movi	r4,32
    ae30:	1406d83a 	srl	r3,r2,r16
    ae34:	41005026 	beq	r8,r4,af78 <__adddf3+0x55c>
    ae38:	01001004 	movi	r4,64
    ae3c:	2211c83a 	sub	r8,r4,r8
    ae40:	1204983a 	sll	r2,r2,r8
    ae44:	88a2b03a 	or	r17,r17,r2
    ae48:	8822c03a 	cmpne	r17,r17,zero
    ae4c:	1c62b03a 	or	r17,r3,r17
    ae50:	0011883a 	mov	r8,zero
    ae54:	0021883a 	mov	r16,zero
    ae58:	003f7106 	br	ac20 <__alt_data_end+0xfffeac20>
    ae5c:	193ff804 	addi	r4,r3,-32
    ae60:	00800804 	movi	r2,32
    ae64:	4908d83a 	srl	r4,r9,r4
    ae68:	18804526 	beq	r3,r2,af80 <__adddf3+0x564>
    ae6c:	00801004 	movi	r2,64
    ae70:	10c5c83a 	sub	r2,r2,r3
    ae74:	4886983a 	sll	r3,r9,r2
    ae78:	198cb03a 	or	r6,r3,r6
    ae7c:	300cc03a 	cmpne	r6,r6,zero
    ae80:	218cb03a 	or	r6,r4,r6
    ae84:	0007883a 	mov	r3,zero
    ae88:	003f3b06 	br	ab78 <__alt_data_end+0xfffeab78>
    ae8c:	80002a26 	beq	r16,zero,af38 <__adddf3+0x51c>
    ae90:	0101ffc4 	movi	r4,2047
    ae94:	11006826 	beq	r2,r4,b038 <__adddf3+0x61c>
    ae98:	00c7c83a 	sub	r3,zero,r3
    ae9c:	42002034 	orhi	r8,r8,128
    aea0:	01000e04 	movi	r4,56
    aea4:	20c07c16 	blt	r4,r3,b098 <__adddf3+0x67c>
    aea8:	010007c4 	movi	r4,31
    aeac:	20c0da16 	blt	r4,r3,b218 <__adddf3+0x7fc>
    aeb0:	01000804 	movi	r4,32
    aeb4:	20c9c83a 	sub	r4,r4,r3
    aeb8:	4114983a 	sll	r10,r8,r4
    aebc:	88cad83a 	srl	r5,r17,r3
    aec0:	8908983a 	sll	r4,r17,r4
    aec4:	40c6d83a 	srl	r3,r8,r3
    aec8:	5162b03a 	or	r17,r10,r5
    aecc:	2008c03a 	cmpne	r4,r4,zero
    aed0:	8922b03a 	or	r17,r17,r4
    aed4:	3463c83a 	sub	r17,r6,r17
    aed8:	48c7c83a 	sub	r3,r9,r3
    aedc:	344d803a 	cmpltu	r6,r6,r17
    aee0:	1991c83a 	sub	r8,r3,r6
    aee4:	1021883a 	mov	r16,r2
    aee8:	3825883a 	mov	r18,r7
    aeec:	003f2706 	br	ab8c <__alt_data_end+0xfffeab8c>
    aef0:	24d0b03a 	or	r8,r4,r19
    aef4:	40001b1e 	bne	r8,zero,af64 <__adddf3+0x548>
    aef8:	0005883a 	mov	r2,zero
    aefc:	0007883a 	mov	r3,zero
    af00:	0021883a 	mov	r16,zero
    af04:	003f4d06 	br	ac3c <__alt_data_end+0xfffeac3c>
    af08:	008007c4 	movi	r2,31
    af0c:	11003c16 	blt	r2,r4,b000 <__adddf3+0x5e4>
    af10:	00800804 	movi	r2,32
    af14:	1105c83a 	sub	r2,r2,r4
    af18:	488e983a 	sll	r7,r9,r2
    af1c:	310ad83a 	srl	r5,r6,r4
    af20:	3084983a 	sll	r2,r6,r2
    af24:	4912d83a 	srl	r9,r9,r4
    af28:	394ab03a 	or	r5,r7,r5
    af2c:	1004c03a 	cmpne	r2,r2,zero
    af30:	288ab03a 	or	r5,r5,r2
    af34:	003f5306 	br	ac84 <__alt_data_end+0xfffeac84>
    af38:	4448b03a 	or	r4,r8,r17
    af3c:	20003e26 	beq	r4,zero,b038 <__adddf3+0x61c>
    af40:	00c6303a 	nor	r3,zero,r3
    af44:	18003a1e 	bne	r3,zero,b030 <__adddf3+0x614>
    af48:	3463c83a 	sub	r17,r6,r17
    af4c:	4a07c83a 	sub	r3,r9,r8
    af50:	344d803a 	cmpltu	r6,r6,r17
    af54:	1991c83a 	sub	r8,r3,r6
    af58:	1021883a 	mov	r16,r2
    af5c:	3825883a 	mov	r18,r7
    af60:	003f0a06 	br	ab8c <__alt_data_end+0xfffeab8c>
    af64:	2023883a 	mov	r17,r4
    af68:	003f0d06 	br	aba0 <__alt_data_end+0xfffeaba0>
    af6c:	0081ffc4 	movi	r2,2047
    af70:	80bf3f1e 	bne	r16,r2,ac70 <__alt_data_end+0xfffeac70>
    af74:	003ec806 	br	aa98 <__alt_data_end+0xfffeaa98>
    af78:	0005883a 	mov	r2,zero
    af7c:	003fb106 	br	ae44 <__alt_data_end+0xfffeae44>
    af80:	0007883a 	mov	r3,zero
    af84:	003fbc06 	br	ae78 <__alt_data_end+0xfffeae78>
    af88:	4444b03a 	or	r2,r8,r17
    af8c:	8000871e 	bne	r16,zero,b1ac <__adddf3+0x790>
    af90:	1000ba26 	beq	r2,zero,b27c <__adddf3+0x860>
    af94:	4984b03a 	or	r2,r9,r6
    af98:	103ebf26 	beq	r2,zero,aa98 <__alt_data_end+0xfffeaa98>
    af9c:	8985883a 	add	r2,r17,r6
    afa0:	4247883a 	add	r3,r8,r9
    afa4:	1451803a 	cmpltu	r8,r2,r17
    afa8:	40d1883a 	add	r8,r8,r3
    afac:	40c0202c 	andhi	r3,r8,128
    afb0:	1023883a 	mov	r17,r2
    afb4:	183f1a26 	beq	r3,zero,ac20 <__alt_data_end+0xfffeac20>
    afb8:	00bfe034 	movhi	r2,65408
    afbc:	10bfffc4 	addi	r2,r2,-1
    afc0:	2021883a 	mov	r16,r4
    afc4:	4090703a 	and	r8,r8,r2
    afc8:	003eb306 	br	aa98 <__alt_data_end+0xfffeaa98>
    afcc:	4444b03a 	or	r2,r8,r17
    afd0:	8000291e 	bne	r16,zero,b078 <__adddf3+0x65c>
    afd4:	10004b1e 	bne	r2,zero,b104 <__adddf3+0x6e8>
    afd8:	4990b03a 	or	r8,r9,r6
    afdc:	40008b26 	beq	r8,zero,b20c <__adddf3+0x7f0>
    afe0:	4811883a 	mov	r8,r9
    afe4:	3023883a 	mov	r17,r6
    afe8:	3825883a 	mov	r18,r7
    afec:	003eaa06 	br	aa98 <__alt_data_end+0xfffeaa98>
    aff0:	1021883a 	mov	r16,r2
    aff4:	0011883a 	mov	r8,zero
    aff8:	0005883a 	mov	r2,zero
    affc:	003f0f06 	br	ac3c <__alt_data_end+0xfffeac3c>
    b000:	217ff804 	addi	r5,r4,-32
    b004:	00800804 	movi	r2,32
    b008:	494ad83a 	srl	r5,r9,r5
    b00c:	20807d26 	beq	r4,r2,b204 <__adddf3+0x7e8>
    b010:	00801004 	movi	r2,64
    b014:	1109c83a 	sub	r4,r2,r4
    b018:	4912983a 	sll	r9,r9,r4
    b01c:	498cb03a 	or	r6,r9,r6
    b020:	300cc03a 	cmpne	r6,r6,zero
    b024:	298ab03a 	or	r5,r5,r6
    b028:	0013883a 	mov	r9,zero
    b02c:	003f1506 	br	ac84 <__alt_data_end+0xfffeac84>
    b030:	0101ffc4 	movi	r4,2047
    b034:	113f9a1e 	bne	r2,r4,aea0 <__alt_data_end+0xfffeaea0>
    b038:	4811883a 	mov	r8,r9
    b03c:	3023883a 	mov	r17,r6
    b040:	1021883a 	mov	r16,r2
    b044:	3825883a 	mov	r18,r7
    b048:	003e9306 	br	aa98 <__alt_data_end+0xfffeaa98>
    b04c:	8000161e 	bne	r16,zero,b0a8 <__adddf3+0x68c>
    b050:	444ab03a 	or	r5,r8,r17
    b054:	28005126 	beq	r5,zero,b19c <__adddf3+0x780>
    b058:	0108303a 	nor	r4,zero,r4
    b05c:	20004d1e 	bne	r4,zero,b194 <__adddf3+0x778>
    b060:	89a3883a 	add	r17,r17,r6
    b064:	4253883a 	add	r9,r8,r9
    b068:	898d803a 	cmpltu	r6,r17,r6
    b06c:	3251883a 	add	r8,r6,r9
    b070:	1021883a 	mov	r16,r2
    b074:	003f0806 	br	ac98 <__alt_data_end+0xfffeac98>
    b078:	1000301e 	bne	r2,zero,b13c <__adddf3+0x720>
    b07c:	4984b03a 	or	r2,r9,r6
    b080:	10007126 	beq	r2,zero,b248 <__adddf3+0x82c>
    b084:	4811883a 	mov	r8,r9
    b088:	3023883a 	mov	r17,r6
    b08c:	3825883a 	mov	r18,r7
    b090:	0401ffc4 	movi	r16,2047
    b094:	003e8006 	br	aa98 <__alt_data_end+0xfffeaa98>
    b098:	4462b03a 	or	r17,r8,r17
    b09c:	8822c03a 	cmpne	r17,r17,zero
    b0a0:	0007883a 	mov	r3,zero
    b0a4:	003f8b06 	br	aed4 <__alt_data_end+0xfffeaed4>
    b0a8:	0141ffc4 	movi	r5,2047
    b0ac:	11403b26 	beq	r2,r5,b19c <__adddf3+0x780>
    b0b0:	0109c83a 	sub	r4,zero,r4
    b0b4:	42002034 	orhi	r8,r8,128
    b0b8:	01400e04 	movi	r5,56
    b0bc:	29006716 	blt	r5,r4,b25c <__adddf3+0x840>
    b0c0:	014007c4 	movi	r5,31
    b0c4:	29007016 	blt	r5,r4,b288 <__adddf3+0x86c>
    b0c8:	01400804 	movi	r5,32
    b0cc:	290bc83a 	sub	r5,r5,r4
    b0d0:	4154983a 	sll	r10,r8,r5
    b0d4:	890ed83a 	srl	r7,r17,r4
    b0d8:	894a983a 	sll	r5,r17,r5
    b0dc:	4108d83a 	srl	r4,r8,r4
    b0e0:	51e2b03a 	or	r17,r10,r7
    b0e4:	280ac03a 	cmpne	r5,r5,zero
    b0e8:	8962b03a 	or	r17,r17,r5
    b0ec:	89a3883a 	add	r17,r17,r6
    b0f0:	2253883a 	add	r9,r4,r9
    b0f4:	898d803a 	cmpltu	r6,r17,r6
    b0f8:	3251883a 	add	r8,r6,r9
    b0fc:	1021883a 	mov	r16,r2
    b100:	003ee506 	br	ac98 <__alt_data_end+0xfffeac98>
    b104:	4984b03a 	or	r2,r9,r6
    b108:	103e6326 	beq	r2,zero,aa98 <__alt_data_end+0xfffeaa98>
    b10c:	8987c83a 	sub	r3,r17,r6
    b110:	88c9803a 	cmpltu	r4,r17,r3
    b114:	4245c83a 	sub	r2,r8,r9
    b118:	1105c83a 	sub	r2,r2,r4
    b11c:	1100202c 	andhi	r4,r2,128
    b120:	203ebb26 	beq	r4,zero,ac10 <__alt_data_end+0xfffeac10>
    b124:	3463c83a 	sub	r17,r6,r17
    b128:	4a07c83a 	sub	r3,r9,r8
    b12c:	344d803a 	cmpltu	r6,r6,r17
    b130:	1991c83a 	sub	r8,r3,r6
    b134:	3825883a 	mov	r18,r7
    b138:	003e5706 	br	aa98 <__alt_data_end+0xfffeaa98>
    b13c:	4984b03a 	or	r2,r9,r6
    b140:	10002e26 	beq	r2,zero,b1fc <__adddf3+0x7e0>
    b144:	4004d0fa 	srli	r2,r8,3
    b148:	8822d0fa 	srli	r17,r17,3
    b14c:	4010977a 	slli	r8,r8,29
    b150:	10c0022c 	andhi	r3,r2,8
    b154:	4462b03a 	or	r17,r8,r17
    b158:	18000826 	beq	r3,zero,b17c <__adddf3+0x760>
    b15c:	4808d0fa 	srli	r4,r9,3
    b160:	20c0022c 	andhi	r3,r4,8
    b164:	1800051e 	bne	r3,zero,b17c <__adddf3+0x760>
    b168:	300cd0fa 	srli	r6,r6,3
    b16c:	4806977a 	slli	r3,r9,29
    b170:	2005883a 	mov	r2,r4
    b174:	3825883a 	mov	r18,r7
    b178:	19a2b03a 	or	r17,r3,r6
    b17c:	8810d77a 	srli	r8,r17,29
    b180:	100490fa 	slli	r2,r2,3
    b184:	882290fa 	slli	r17,r17,3
    b188:	0401ffc4 	movi	r16,2047
    b18c:	4090b03a 	or	r8,r8,r2
    b190:	003e4106 	br	aa98 <__alt_data_end+0xfffeaa98>
    b194:	0141ffc4 	movi	r5,2047
    b198:	117fc71e 	bne	r2,r5,b0b8 <__alt_data_end+0xfffeb0b8>
    b19c:	4811883a 	mov	r8,r9
    b1a0:	3023883a 	mov	r17,r6
    b1a4:	1021883a 	mov	r16,r2
    b1a8:	003e3b06 	br	aa98 <__alt_data_end+0xfffeaa98>
    b1ac:	10002f26 	beq	r2,zero,b26c <__adddf3+0x850>
    b1b0:	4984b03a 	or	r2,r9,r6
    b1b4:	10001126 	beq	r2,zero,b1fc <__adddf3+0x7e0>
    b1b8:	4004d0fa 	srli	r2,r8,3
    b1bc:	8822d0fa 	srli	r17,r17,3
    b1c0:	4010977a 	slli	r8,r8,29
    b1c4:	10c0022c 	andhi	r3,r2,8
    b1c8:	4462b03a 	or	r17,r8,r17
    b1cc:	183feb26 	beq	r3,zero,b17c <__alt_data_end+0xfffeb17c>
    b1d0:	4808d0fa 	srli	r4,r9,3
    b1d4:	20c0022c 	andhi	r3,r4,8
    b1d8:	183fe81e 	bne	r3,zero,b17c <__alt_data_end+0xfffeb17c>
    b1dc:	300cd0fa 	srli	r6,r6,3
    b1e0:	4806977a 	slli	r3,r9,29
    b1e4:	2005883a 	mov	r2,r4
    b1e8:	19a2b03a 	or	r17,r3,r6
    b1ec:	003fe306 	br	b17c <__alt_data_end+0xfffeb17c>
    b1f0:	0011883a 	mov	r8,zero
    b1f4:	0005883a 	mov	r2,zero
    b1f8:	003e3f06 	br	aaf8 <__alt_data_end+0xfffeaaf8>
    b1fc:	0401ffc4 	movi	r16,2047
    b200:	003e2506 	br	aa98 <__alt_data_end+0xfffeaa98>
    b204:	0013883a 	mov	r9,zero
    b208:	003f8406 	br	b01c <__alt_data_end+0xfffeb01c>
    b20c:	0005883a 	mov	r2,zero
    b210:	0007883a 	mov	r3,zero
    b214:	003e8906 	br	ac3c <__alt_data_end+0xfffeac3c>
    b218:	197ff804 	addi	r5,r3,-32
    b21c:	01000804 	movi	r4,32
    b220:	414ad83a 	srl	r5,r8,r5
    b224:	19002426 	beq	r3,r4,b2b8 <__adddf3+0x89c>
    b228:	01001004 	movi	r4,64
    b22c:	20c7c83a 	sub	r3,r4,r3
    b230:	40c6983a 	sll	r3,r8,r3
    b234:	1c46b03a 	or	r3,r3,r17
    b238:	1806c03a 	cmpne	r3,r3,zero
    b23c:	28e2b03a 	or	r17,r5,r3
    b240:	0007883a 	mov	r3,zero
    b244:	003f2306 	br	aed4 <__alt_data_end+0xfffeaed4>
    b248:	0007883a 	mov	r3,zero
    b24c:	5811883a 	mov	r8,r11
    b250:	00bfffc4 	movi	r2,-1
    b254:	0401ffc4 	movi	r16,2047
    b258:	003e7806 	br	ac3c <__alt_data_end+0xfffeac3c>
    b25c:	4462b03a 	or	r17,r8,r17
    b260:	8822c03a 	cmpne	r17,r17,zero
    b264:	0009883a 	mov	r4,zero
    b268:	003fa006 	br	b0ec <__alt_data_end+0xfffeb0ec>
    b26c:	4811883a 	mov	r8,r9
    b270:	3023883a 	mov	r17,r6
    b274:	0401ffc4 	movi	r16,2047
    b278:	003e0706 	br	aa98 <__alt_data_end+0xfffeaa98>
    b27c:	4811883a 	mov	r8,r9
    b280:	3023883a 	mov	r17,r6
    b284:	003e0406 	br	aa98 <__alt_data_end+0xfffeaa98>
    b288:	21fff804 	addi	r7,r4,-32
    b28c:	01400804 	movi	r5,32
    b290:	41ced83a 	srl	r7,r8,r7
    b294:	21400a26 	beq	r4,r5,b2c0 <__adddf3+0x8a4>
    b298:	01401004 	movi	r5,64
    b29c:	2909c83a 	sub	r4,r5,r4
    b2a0:	4108983a 	sll	r4,r8,r4
    b2a4:	2448b03a 	or	r4,r4,r17
    b2a8:	2008c03a 	cmpne	r4,r4,zero
    b2ac:	3922b03a 	or	r17,r7,r4
    b2b0:	0009883a 	mov	r4,zero
    b2b4:	003f8d06 	br	b0ec <__alt_data_end+0xfffeb0ec>
    b2b8:	0007883a 	mov	r3,zero
    b2bc:	003fdd06 	br	b234 <__alt_data_end+0xfffeb234>
    b2c0:	0009883a 	mov	r4,zero
    b2c4:	003ff706 	br	b2a4 <__alt_data_end+0xfffeb2a4>

0000b2c8 <__divdf3>:
    b2c8:	defff004 	addi	sp,sp,-64
    b2cc:	dc800815 	stw	r18,32(sp)
    b2d0:	2824d53a 	srli	r18,r5,20
    b2d4:	dd800c15 	stw	r22,48(sp)
    b2d8:	282cd7fa 	srli	r22,r5,31
    b2dc:	dc000615 	stw	r16,24(sp)
    b2e0:	04000434 	movhi	r16,16
    b2e4:	843fffc4 	addi	r16,r16,-1
    b2e8:	dfc00f15 	stw	ra,60(sp)
    b2ec:	df000e15 	stw	fp,56(sp)
    b2f0:	ddc00d15 	stw	r23,52(sp)
    b2f4:	dd400b15 	stw	r21,44(sp)
    b2f8:	dd000a15 	stw	r20,40(sp)
    b2fc:	dcc00915 	stw	r19,36(sp)
    b300:	dc400715 	stw	r17,28(sp)
    b304:	9481ffcc 	andi	r18,r18,2047
    b308:	2c20703a 	and	r16,r5,r16
    b30c:	b2003fcc 	andi	r8,r22,255
    b310:	90006126 	beq	r18,zero,b498 <__divdf3+0x1d0>
    b314:	0081ffc4 	movi	r2,2047
    b318:	202b883a 	mov	r21,r4
    b31c:	90803726 	beq	r18,r2,b3fc <__divdf3+0x134>
    b320:	80800434 	orhi	r2,r16,16
    b324:	100490fa 	slli	r2,r2,3
    b328:	2020d77a 	srli	r16,r4,29
    b32c:	202a90fa 	slli	r21,r4,3
    b330:	94bf0044 	addi	r18,r18,-1023
    b334:	80a0b03a 	or	r16,r16,r2
    b338:	0013883a 	mov	r9,zero
    b33c:	000b883a 	mov	r5,zero
    b340:	3806d53a 	srli	r3,r7,20
    b344:	382ed7fa 	srli	r23,r7,31
    b348:	04400434 	movhi	r17,16
    b34c:	8c7fffc4 	addi	r17,r17,-1
    b350:	18c1ffcc 	andi	r3,r3,2047
    b354:	3029883a 	mov	r20,r6
    b358:	3c62703a 	and	r17,r7,r17
    b35c:	bf003fcc 	andi	fp,r23,255
    b360:	18006e26 	beq	r3,zero,b51c <__divdf3+0x254>
    b364:	0081ffc4 	movi	r2,2047
    b368:	18806626 	beq	r3,r2,b504 <__divdf3+0x23c>
    b36c:	88800434 	orhi	r2,r17,16
    b370:	100490fa 	slli	r2,r2,3
    b374:	3022d77a 	srli	r17,r6,29
    b378:	302890fa 	slli	r20,r6,3
    b37c:	18ff0044 	addi	r3,r3,-1023
    b380:	88a2b03a 	or	r17,r17,r2
    b384:	000f883a 	mov	r7,zero
    b388:	b5e6f03a 	xor	r19,r22,r23
    b38c:	3a4cb03a 	or	r6,r7,r9
    b390:	008003c4 	movi	r2,15
    b394:	9809883a 	mov	r4,r19
    b398:	90c7c83a 	sub	r3,r18,r3
    b39c:	9cc03fcc 	andi	r19,r19,255
    b3a0:	11809636 	bltu	r2,r6,b5fc <__divdf3+0x334>
    b3a4:	300c90ba 	slli	r6,r6,2
    b3a8:	00800074 	movhi	r2,1
    b3ac:	10acef04 	addi	r2,r2,-19524
    b3b0:	308d883a 	add	r6,r6,r2
    b3b4:	30800017 	ldw	r2,0(r6)
    b3b8:	1000683a 	jmp	r2
    b3bc:	0000b5fc 	xorhi	zero,zero,727
    b3c0:	0000b434 	movhi	zero,720
    b3c4:	0000b5ec 	andhi	zero,zero,727
    b3c8:	0000b428 	cmpgeui	zero,zero,720
    b3cc:	0000b5ec 	andhi	zero,zero,727
    b3d0:	0000b5c0 	call	b5c <___vfprintf_internal_r+0x604>
    b3d4:	0000b5ec 	andhi	zero,zero,727
    b3d8:	0000b428 	cmpgeui	zero,zero,720
    b3dc:	0000b434 	movhi	zero,720
    b3e0:	0000b434 	movhi	zero,720
    b3e4:	0000b5c0 	call	b5c <___vfprintf_internal_r+0x604>
    b3e8:	0000b428 	cmpgeui	zero,zero,720
    b3ec:	0000b418 	cmpnei	zero,zero,720
    b3f0:	0000b418 	cmpnei	zero,zero,720
    b3f4:	0000b418 	cmpnei	zero,zero,720
    b3f8:	0000b984 	movi	zero,742
    b3fc:	2404b03a 	or	r2,r4,r16
    b400:	10006c1e 	bne	r2,zero,b5b4 <__divdf3+0x2ec>
    b404:	02400204 	movi	r9,8
    b408:	0021883a 	mov	r16,zero
    b40c:	002b883a 	mov	r21,zero
    b410:	01400084 	movi	r5,2
    b414:	003fca06 	br	b340 <__alt_data_end+0xfffeb340>
    b418:	8023883a 	mov	r17,r16
    b41c:	a829883a 	mov	r20,r21
    b420:	4039883a 	mov	fp,r8
    b424:	280f883a 	mov	r7,r5
    b428:	00800084 	movi	r2,2
    b42c:	3881601e 	bne	r7,r2,b9b0 <__divdf3+0x6e8>
    b430:	e027883a 	mov	r19,fp
    b434:	9900004c 	andi	r4,r19,1
    b438:	0081ffc4 	movi	r2,2047
    b43c:	0021883a 	mov	r16,zero
    b440:	002b883a 	mov	r21,zero
    b444:	1004953a 	slli	r2,r2,20
    b448:	20c03fcc 	andi	r3,r4,255
    b44c:	01400434 	movhi	r5,16
    b450:	297fffc4 	addi	r5,r5,-1
    b454:	180697fa 	slli	r3,r3,31
    b458:	8160703a 	and	r16,r16,r5
    b45c:	80a0b03a 	or	r16,r16,r2
    b460:	80c6b03a 	or	r3,r16,r3
    b464:	a805883a 	mov	r2,r21
    b468:	dfc00f17 	ldw	ra,60(sp)
    b46c:	df000e17 	ldw	fp,56(sp)
    b470:	ddc00d17 	ldw	r23,52(sp)
    b474:	dd800c17 	ldw	r22,48(sp)
    b478:	dd400b17 	ldw	r21,44(sp)
    b47c:	dd000a17 	ldw	r20,40(sp)
    b480:	dcc00917 	ldw	r19,36(sp)
    b484:	dc800817 	ldw	r18,32(sp)
    b488:	dc400717 	ldw	r17,28(sp)
    b48c:	dc000617 	ldw	r16,24(sp)
    b490:	dec01004 	addi	sp,sp,64
    b494:	f800283a 	ret
    b498:	2404b03a 	or	r2,r4,r16
    b49c:	2023883a 	mov	r17,r4
    b4a0:	10003f26 	beq	r2,zero,b5a0 <__divdf3+0x2d8>
    b4a4:	80015e26 	beq	r16,zero,ba20 <__divdf3+0x758>
    b4a8:	8009883a 	mov	r4,r16
    b4ac:	d9800215 	stw	r6,8(sp)
    b4b0:	d9c00515 	stw	r7,20(sp)
    b4b4:	da000415 	stw	r8,16(sp)
    b4b8:	000d25c0 	call	d25c <__clzsi2>
    b4bc:	d9800217 	ldw	r6,8(sp)
    b4c0:	d9c00517 	ldw	r7,20(sp)
    b4c4:	da000417 	ldw	r8,16(sp)
    b4c8:	113ffd44 	addi	r4,r2,-11
    b4cc:	00c00704 	movi	r3,28
    b4d0:	19014f16 	blt	r3,r4,ba10 <__divdf3+0x748>
    b4d4:	00c00744 	movi	r3,29
    b4d8:	157ffe04 	addi	r21,r2,-8
    b4dc:	1907c83a 	sub	r3,r3,r4
    b4e0:	8560983a 	sll	r16,r16,r21
    b4e4:	88c6d83a 	srl	r3,r17,r3
    b4e8:	8d6a983a 	sll	r21,r17,r21
    b4ec:	1c20b03a 	or	r16,r3,r16
    b4f0:	1080fcc4 	addi	r2,r2,1011
    b4f4:	00a5c83a 	sub	r18,zero,r2
    b4f8:	0013883a 	mov	r9,zero
    b4fc:	000b883a 	mov	r5,zero
    b500:	003f8f06 	br	b340 <__alt_data_end+0xfffeb340>
    b504:	3444b03a 	or	r2,r6,r17
    b508:	1000231e 	bne	r2,zero,b598 <__divdf3+0x2d0>
    b50c:	0023883a 	mov	r17,zero
    b510:	0029883a 	mov	r20,zero
    b514:	01c00084 	movi	r7,2
    b518:	003f9b06 	br	b388 <__alt_data_end+0xfffeb388>
    b51c:	3444b03a 	or	r2,r6,r17
    b520:	10001926 	beq	r2,zero,b588 <__divdf3+0x2c0>
    b524:	88014b26 	beq	r17,zero,ba54 <__divdf3+0x78c>
    b528:	8809883a 	mov	r4,r17
    b52c:	d9400115 	stw	r5,4(sp)
    b530:	d9800215 	stw	r6,8(sp)
    b534:	da000415 	stw	r8,16(sp)
    b538:	da400315 	stw	r9,12(sp)
    b53c:	000d25c0 	call	d25c <__clzsi2>
    b540:	d9400117 	ldw	r5,4(sp)
    b544:	d9800217 	ldw	r6,8(sp)
    b548:	da000417 	ldw	r8,16(sp)
    b54c:	da400317 	ldw	r9,12(sp)
    b550:	113ffd44 	addi	r4,r2,-11
    b554:	00c00704 	movi	r3,28
    b558:	19013a16 	blt	r3,r4,ba44 <__divdf3+0x77c>
    b55c:	00c00744 	movi	r3,29
    b560:	153ffe04 	addi	r20,r2,-8
    b564:	1907c83a 	sub	r3,r3,r4
    b568:	8d22983a 	sll	r17,r17,r20
    b56c:	30c6d83a 	srl	r3,r6,r3
    b570:	3528983a 	sll	r20,r6,r20
    b574:	1c62b03a 	or	r17,r3,r17
    b578:	1080fcc4 	addi	r2,r2,1011
    b57c:	0087c83a 	sub	r3,zero,r2
    b580:	000f883a 	mov	r7,zero
    b584:	003f8006 	br	b388 <__alt_data_end+0xfffeb388>
    b588:	0023883a 	mov	r17,zero
    b58c:	0029883a 	mov	r20,zero
    b590:	01c00044 	movi	r7,1
    b594:	003f7c06 	br	b388 <__alt_data_end+0xfffeb388>
    b598:	01c000c4 	movi	r7,3
    b59c:	003f7a06 	br	b388 <__alt_data_end+0xfffeb388>
    b5a0:	02400104 	movi	r9,4
    b5a4:	0021883a 	mov	r16,zero
    b5a8:	002b883a 	mov	r21,zero
    b5ac:	01400044 	movi	r5,1
    b5b0:	003f6306 	br	b340 <__alt_data_end+0xfffeb340>
    b5b4:	02400304 	movi	r9,12
    b5b8:	014000c4 	movi	r5,3
    b5bc:	003f6006 	br	b340 <__alt_data_end+0xfffeb340>
    b5c0:	04000434 	movhi	r16,16
    b5c4:	0009883a 	mov	r4,zero
    b5c8:	843fffc4 	addi	r16,r16,-1
    b5cc:	057fffc4 	movi	r21,-1
    b5d0:	0081ffc4 	movi	r2,2047
    b5d4:	003f9b06 	br	b444 <__alt_data_end+0xfffeb444>
    b5d8:	00c00044 	movi	r3,1
    b5dc:	1887c83a 	sub	r3,r3,r2
    b5e0:	01000e04 	movi	r4,56
    b5e4:	20c1530e 	bge	r4,r3,bb34 <__divdf3+0x86c>
    b5e8:	9900004c 	andi	r4,r19,1
    b5ec:	0005883a 	mov	r2,zero
    b5f0:	0021883a 	mov	r16,zero
    b5f4:	002b883a 	mov	r21,zero
    b5f8:	003f9206 	br	b444 <__alt_data_end+0xfffeb444>
    b5fc:	8c012e36 	bltu	r17,r16,bab8 <__divdf3+0x7f0>
    b600:	84412c26 	beq	r16,r17,bab4 <__divdf3+0x7ec>
    b604:	a82f883a 	mov	r23,r21
    b608:	18ffffc4 	addi	r3,r3,-1
    b60c:	002b883a 	mov	r21,zero
    b610:	a004d63a 	srli	r2,r20,24
    b614:	8822923a 	slli	r17,r17,8
    b618:	a028923a 	slli	r20,r20,8
    b61c:	8009883a 	mov	r4,r16
    b620:	88acb03a 	or	r22,r17,r2
    b624:	dd000015 	stw	r20,0(sp)
    b628:	b028d43a 	srli	r20,r22,16
    b62c:	d8c00215 	stw	r3,8(sp)
    b630:	b4bfffcc 	andi	r18,r22,65535
    b634:	a00b883a 	mov	r5,r20
    b638:	000a9380 	call	a938 <__udivsi3>
    b63c:	100b883a 	mov	r5,r2
    b640:	9009883a 	mov	r4,r18
    b644:	1023883a 	mov	r17,r2
    b648:	000a9f40 	call	a9f4 <__mulsi3>
    b64c:	8009883a 	mov	r4,r16
    b650:	a00b883a 	mov	r5,r20
    b654:	1039883a 	mov	fp,r2
    b658:	000a99c0 	call	a99c <__umodsi3>
    b65c:	1004943a 	slli	r2,r2,16
    b660:	b808d43a 	srli	r4,r23,16
    b664:	d8c00217 	ldw	r3,8(sp)
    b668:	2084b03a 	or	r2,r4,r2
    b66c:	1700062e 	bgeu	r2,fp,b688 <__divdf3+0x3c0>
    b670:	1585883a 	add	r2,r2,r22
    b674:	893fffc4 	addi	r4,r17,-1
    b678:	15811d36 	bltu	r2,r22,baf0 <__divdf3+0x828>
    b67c:	17011c2e 	bgeu	r2,fp,baf0 <__divdf3+0x828>
    b680:	8c7fff84 	addi	r17,r17,-2
    b684:	1585883a 	add	r2,r2,r22
    b688:	1739c83a 	sub	fp,r2,fp
    b68c:	a00b883a 	mov	r5,r20
    b690:	e009883a 	mov	r4,fp
    b694:	d8c00215 	stw	r3,8(sp)
    b698:	000a9380 	call	a938 <__udivsi3>
    b69c:	100b883a 	mov	r5,r2
    b6a0:	9009883a 	mov	r4,r18
    b6a4:	1021883a 	mov	r16,r2
    b6a8:	000a9f40 	call	a9f4 <__mulsi3>
    b6ac:	a00b883a 	mov	r5,r20
    b6b0:	e009883a 	mov	r4,fp
    b6b4:	d8800415 	stw	r2,16(sp)
    b6b8:	000a99c0 	call	a99c <__umodsi3>
    b6bc:	1004943a 	slli	r2,r2,16
    b6c0:	da000417 	ldw	r8,16(sp)
    b6c4:	bdffffcc 	andi	r23,r23,65535
    b6c8:	b884b03a 	or	r2,r23,r2
    b6cc:	d8c00217 	ldw	r3,8(sp)
    b6d0:	1200062e 	bgeu	r2,r8,b6ec <__divdf3+0x424>
    b6d4:	1585883a 	add	r2,r2,r22
    b6d8:	813fffc4 	addi	r4,r16,-1
    b6dc:	15810236 	bltu	r2,r22,bae8 <__divdf3+0x820>
    b6e0:	1201012e 	bgeu	r2,r8,bae8 <__divdf3+0x820>
    b6e4:	843fff84 	addi	r16,r16,-2
    b6e8:	1585883a 	add	r2,r2,r22
    b6ec:	8822943a 	slli	r17,r17,16
    b6f0:	d9800017 	ldw	r6,0(sp)
    b6f4:	1211c83a 	sub	r8,r2,r8
    b6f8:	8c22b03a 	or	r17,r17,r16
    b6fc:	373fffcc 	andi	fp,r6,65535
    b700:	8abfffcc 	andi	r10,r17,65535
    b704:	8820d43a 	srli	r16,r17,16
    b708:	5009883a 	mov	r4,r10
    b70c:	e00b883a 	mov	r5,fp
    b710:	302ed43a 	srli	r23,r6,16
    b714:	d8c00215 	stw	r3,8(sp)
    b718:	da000415 	stw	r8,16(sp)
    b71c:	da800115 	stw	r10,4(sp)
    b720:	000a9f40 	call	a9f4 <__mulsi3>
    b724:	800b883a 	mov	r5,r16
    b728:	e009883a 	mov	r4,fp
    b72c:	d8800515 	stw	r2,20(sp)
    b730:	000a9f40 	call	a9f4 <__mulsi3>
    b734:	8009883a 	mov	r4,r16
    b738:	b80b883a 	mov	r5,r23
    b73c:	d8800315 	stw	r2,12(sp)
    b740:	000a9f40 	call	a9f4 <__mulsi3>
    b744:	da800117 	ldw	r10,4(sp)
    b748:	b80b883a 	mov	r5,r23
    b74c:	1021883a 	mov	r16,r2
    b750:	5009883a 	mov	r4,r10
    b754:	000a9f40 	call	a9f4 <__mulsi3>
    b758:	d9c00517 	ldw	r7,20(sp)
    b75c:	da400317 	ldw	r9,12(sp)
    b760:	d8c00217 	ldw	r3,8(sp)
    b764:	3808d43a 	srli	r4,r7,16
    b768:	1245883a 	add	r2,r2,r9
    b76c:	da000417 	ldw	r8,16(sp)
    b770:	2085883a 	add	r2,r4,r2
    b774:	1240022e 	bgeu	r2,r9,b780 <__divdf3+0x4b8>
    b778:	01000074 	movhi	r4,1
    b77c:	8121883a 	add	r16,r16,r4
    b780:	1008d43a 	srli	r4,r2,16
    b784:	1004943a 	slli	r2,r2,16
    b788:	39ffffcc 	andi	r7,r7,65535
    b78c:	2409883a 	add	r4,r4,r16
    b790:	11c5883a 	add	r2,r2,r7
    b794:	4100bb36 	bltu	r8,r4,ba84 <__divdf3+0x7bc>
    b798:	4100d726 	beq	r8,r4,baf8 <__divdf3+0x830>
    b79c:	4109c83a 	sub	r4,r8,r4
    b7a0:	a8a1c83a 	sub	r16,r21,r2
    b7a4:	ac2b803a 	cmpltu	r21,r21,r16
    b7a8:	256bc83a 	sub	r21,r4,r21
    b7ac:	b540d926 	beq	r22,r21,bb14 <__divdf3+0x84c>
    b7b0:	a00b883a 	mov	r5,r20
    b7b4:	a809883a 	mov	r4,r21
    b7b8:	d8c00215 	stw	r3,8(sp)
    b7bc:	000a9380 	call	a938 <__udivsi3>
    b7c0:	100b883a 	mov	r5,r2
    b7c4:	9009883a 	mov	r4,r18
    b7c8:	d8800515 	stw	r2,20(sp)
    b7cc:	000a9f40 	call	a9f4 <__mulsi3>
    b7d0:	a809883a 	mov	r4,r21
    b7d4:	a00b883a 	mov	r5,r20
    b7d8:	d8800415 	stw	r2,16(sp)
    b7dc:	000a99c0 	call	a99c <__umodsi3>
    b7e0:	1004943a 	slli	r2,r2,16
    b7e4:	8008d43a 	srli	r4,r16,16
    b7e8:	da000417 	ldw	r8,16(sp)
    b7ec:	d8c00217 	ldw	r3,8(sp)
    b7f0:	2084b03a 	or	r2,r4,r2
    b7f4:	d9c00517 	ldw	r7,20(sp)
    b7f8:	1200062e 	bgeu	r2,r8,b814 <__divdf3+0x54c>
    b7fc:	1585883a 	add	r2,r2,r22
    b800:	393fffc4 	addi	r4,r7,-1
    b804:	1580c536 	bltu	r2,r22,bb1c <__divdf3+0x854>
    b808:	1200c42e 	bgeu	r2,r8,bb1c <__divdf3+0x854>
    b80c:	39ffff84 	addi	r7,r7,-2
    b810:	1585883a 	add	r2,r2,r22
    b814:	122bc83a 	sub	r21,r2,r8
    b818:	a00b883a 	mov	r5,r20
    b81c:	a809883a 	mov	r4,r21
    b820:	d8c00215 	stw	r3,8(sp)
    b824:	d9c00515 	stw	r7,20(sp)
    b828:	000a9380 	call	a938 <__udivsi3>
    b82c:	9009883a 	mov	r4,r18
    b830:	100b883a 	mov	r5,r2
    b834:	d8800415 	stw	r2,16(sp)
    b838:	000a9f40 	call	a9f4 <__mulsi3>
    b83c:	a809883a 	mov	r4,r21
    b840:	a00b883a 	mov	r5,r20
    b844:	1025883a 	mov	r18,r2
    b848:	000a99c0 	call	a99c <__umodsi3>
    b84c:	1004943a 	slli	r2,r2,16
    b850:	813fffcc 	andi	r4,r16,65535
    b854:	d8c00217 	ldw	r3,8(sp)
    b858:	20a0b03a 	or	r16,r4,r2
    b85c:	d9c00517 	ldw	r7,20(sp)
    b860:	da000417 	ldw	r8,16(sp)
    b864:	8480062e 	bgeu	r16,r18,b880 <__divdf3+0x5b8>
    b868:	85a1883a 	add	r16,r16,r22
    b86c:	40bfffc4 	addi	r2,r8,-1
    b870:	8580ac36 	bltu	r16,r22,bb24 <__divdf3+0x85c>
    b874:	8480ab2e 	bgeu	r16,r18,bb24 <__divdf3+0x85c>
    b878:	423fff84 	addi	r8,r8,-2
    b87c:	85a1883a 	add	r16,r16,r22
    b880:	3804943a 	slli	r2,r7,16
    b884:	84a1c83a 	sub	r16,r16,r18
    b888:	e009883a 	mov	r4,fp
    b88c:	1228b03a 	or	r20,r2,r8
    b890:	a1ffffcc 	andi	r7,r20,65535
    b894:	a024d43a 	srli	r18,r20,16
    b898:	380b883a 	mov	r5,r7
    b89c:	d8c00215 	stw	r3,8(sp)
    b8a0:	d9c00515 	stw	r7,20(sp)
    b8a4:	000a9f40 	call	a9f4 <__mulsi3>
    b8a8:	900b883a 	mov	r5,r18
    b8ac:	e009883a 	mov	r4,fp
    b8b0:	102b883a 	mov	r21,r2
    b8b4:	000a9f40 	call	a9f4 <__mulsi3>
    b8b8:	900b883a 	mov	r5,r18
    b8bc:	b809883a 	mov	r4,r23
    b8c0:	1039883a 	mov	fp,r2
    b8c4:	000a9f40 	call	a9f4 <__mulsi3>
    b8c8:	d9c00517 	ldw	r7,20(sp)
    b8cc:	b80b883a 	mov	r5,r23
    b8d0:	1025883a 	mov	r18,r2
    b8d4:	3809883a 	mov	r4,r7
    b8d8:	000a9f40 	call	a9f4 <__mulsi3>
    b8dc:	a808d43a 	srli	r4,r21,16
    b8e0:	1705883a 	add	r2,r2,fp
    b8e4:	d8c00217 	ldw	r3,8(sp)
    b8e8:	2085883a 	add	r2,r4,r2
    b8ec:	1700022e 	bgeu	r2,fp,b8f8 <__divdf3+0x630>
    b8f0:	01000074 	movhi	r4,1
    b8f4:	9125883a 	add	r18,r18,r4
    b8f8:	1008d43a 	srli	r4,r2,16
    b8fc:	1004943a 	slli	r2,r2,16
    b900:	ad7fffcc 	andi	r21,r21,65535
    b904:	2489883a 	add	r4,r4,r18
    b908:	1545883a 	add	r2,r2,r21
    b90c:	81003836 	bltu	r16,r4,b9f0 <__divdf3+0x728>
    b910:	81003626 	beq	r16,r4,b9ec <__divdf3+0x724>
    b914:	a5000054 	ori	r20,r20,1
    b918:	1880ffc4 	addi	r2,r3,1023
    b91c:	00bf2e0e 	bge	zero,r2,b5d8 <__alt_data_end+0xfffeb5d8>
    b920:	a10001cc 	andi	r4,r20,7
    b924:	20000726 	beq	r4,zero,b944 <__divdf3+0x67c>
    b928:	a10003cc 	andi	r4,r20,15
    b92c:	01400104 	movi	r5,4
    b930:	21400426 	beq	r4,r5,b944 <__divdf3+0x67c>
    b934:	a149883a 	add	r4,r20,r5
    b938:	2529803a 	cmpltu	r20,r4,r20
    b93c:	8d23883a 	add	r17,r17,r20
    b940:	2029883a 	mov	r20,r4
    b944:	8900402c 	andhi	r4,r17,256
    b948:	20000426 	beq	r4,zero,b95c <__divdf3+0x694>
    b94c:	18810004 	addi	r2,r3,1024
    b950:	00ffc034 	movhi	r3,65280
    b954:	18ffffc4 	addi	r3,r3,-1
    b958:	88e2703a 	and	r17,r17,r3
    b95c:	00c1ff84 	movi	r3,2046
    b960:	18beb416 	blt	r3,r2,b434 <__alt_data_end+0xfffeb434>
    b964:	a028d0fa 	srli	r20,r20,3
    b968:	882a977a 	slli	r21,r17,29
    b96c:	8820927a 	slli	r16,r17,9
    b970:	1081ffcc 	andi	r2,r2,2047
    b974:	ad2ab03a 	or	r21,r21,r20
    b978:	8020d33a 	srli	r16,r16,12
    b97c:	9900004c 	andi	r4,r19,1
    b980:	003eb006 	br	b444 <__alt_data_end+0xfffeb444>
    b984:	8080022c 	andhi	r2,r16,8
    b988:	10001226 	beq	r2,zero,b9d4 <__divdf3+0x70c>
    b98c:	8880022c 	andhi	r2,r17,8
    b990:	1000101e 	bne	r2,zero,b9d4 <__divdf3+0x70c>
    b994:	00800434 	movhi	r2,16
    b998:	8c000234 	orhi	r16,r17,8
    b99c:	10bfffc4 	addi	r2,r2,-1
    b9a0:	b809883a 	mov	r4,r23
    b9a4:	80a0703a 	and	r16,r16,r2
    b9a8:	a02b883a 	mov	r21,r20
    b9ac:	003f0806 	br	b5d0 <__alt_data_end+0xfffeb5d0>
    b9b0:	008000c4 	movi	r2,3
    b9b4:	3880b126 	beq	r7,r2,bc7c <__divdf3+0x9b4>
    b9b8:	00800044 	movi	r2,1
    b9bc:	38805b1e 	bne	r7,r2,bb2c <__divdf3+0x864>
    b9c0:	e009883a 	mov	r4,fp
    b9c4:	0005883a 	mov	r2,zero
    b9c8:	0021883a 	mov	r16,zero
    b9cc:	002b883a 	mov	r21,zero
    b9d0:	003e9c06 	br	b444 <__alt_data_end+0xfffeb444>
    b9d4:	00800434 	movhi	r2,16
    b9d8:	84000234 	orhi	r16,r16,8
    b9dc:	10bfffc4 	addi	r2,r2,-1
    b9e0:	b009883a 	mov	r4,r22
    b9e4:	80a0703a 	and	r16,r16,r2
    b9e8:	003ef906 	br	b5d0 <__alt_data_end+0xfffeb5d0>
    b9ec:	103fca26 	beq	r2,zero,b918 <__alt_data_end+0xfffeb918>
    b9f0:	b421883a 	add	r16,r22,r16
    b9f4:	a17fffc4 	addi	r5,r20,-1
    b9f8:	8580422e 	bgeu	r16,r22,bb04 <__divdf3+0x83c>
    b9fc:	2829883a 	mov	r20,r5
    ba00:	813fc41e 	bne	r16,r4,b914 <__alt_data_end+0xfffeb914>
    ba04:	d9800017 	ldw	r6,0(sp)
    ba08:	30bfc21e 	bne	r6,r2,b914 <__alt_data_end+0xfffeb914>
    ba0c:	003fc206 	br	b918 <__alt_data_end+0xfffeb918>
    ba10:	143ff604 	addi	r16,r2,-40
    ba14:	8c20983a 	sll	r16,r17,r16
    ba18:	002b883a 	mov	r21,zero
    ba1c:	003eb406 	br	b4f0 <__alt_data_end+0xfffeb4f0>
    ba20:	d9800215 	stw	r6,8(sp)
    ba24:	d9c00515 	stw	r7,20(sp)
    ba28:	da000415 	stw	r8,16(sp)
    ba2c:	000d25c0 	call	d25c <__clzsi2>
    ba30:	10800804 	addi	r2,r2,32
    ba34:	da000417 	ldw	r8,16(sp)
    ba38:	d9c00517 	ldw	r7,20(sp)
    ba3c:	d9800217 	ldw	r6,8(sp)
    ba40:	003ea106 	br	b4c8 <__alt_data_end+0xfffeb4c8>
    ba44:	147ff604 	addi	r17,r2,-40
    ba48:	3462983a 	sll	r17,r6,r17
    ba4c:	0029883a 	mov	r20,zero
    ba50:	003ec906 	br	b578 <__alt_data_end+0xfffeb578>
    ba54:	3009883a 	mov	r4,r6
    ba58:	d9400115 	stw	r5,4(sp)
    ba5c:	d9800215 	stw	r6,8(sp)
    ba60:	da000415 	stw	r8,16(sp)
    ba64:	da400315 	stw	r9,12(sp)
    ba68:	000d25c0 	call	d25c <__clzsi2>
    ba6c:	10800804 	addi	r2,r2,32
    ba70:	da400317 	ldw	r9,12(sp)
    ba74:	da000417 	ldw	r8,16(sp)
    ba78:	d9800217 	ldw	r6,8(sp)
    ba7c:	d9400117 	ldw	r5,4(sp)
    ba80:	003eb306 	br	b550 <__alt_data_end+0xfffeb550>
    ba84:	d9800017 	ldw	r6,0(sp)
    ba88:	a9ab883a 	add	r21,r21,r6
    ba8c:	a98b803a 	cmpltu	r5,r21,r6
    ba90:	2d8b883a 	add	r5,r5,r22
    ba94:	2a11883a 	add	r8,r5,r8
    ba98:	897fffc4 	addi	r5,r17,-1
    ba9c:	b2000c2e 	bgeu	r22,r8,bad0 <__divdf3+0x808>
    baa0:	41003f36 	bltu	r8,r4,bba0 <__divdf3+0x8d8>
    baa4:	22006c26 	beq	r4,r8,bc58 <__divdf3+0x990>
    baa8:	4109c83a 	sub	r4,r8,r4
    baac:	2823883a 	mov	r17,r5
    bab0:	003f3b06 	br	b7a0 <__alt_data_end+0xfffeb7a0>
    bab4:	ad3ed336 	bltu	r21,r20,b604 <__alt_data_end+0xfffeb604>
    bab8:	a804d07a 	srli	r2,r21,1
    babc:	802e97fa 	slli	r23,r16,31
    bac0:	a82a97fa 	slli	r21,r21,31
    bac4:	8020d07a 	srli	r16,r16,1
    bac8:	b8aeb03a 	or	r23,r23,r2
    bacc:	003ed006 	br	b610 <__alt_data_end+0xfffeb610>
    bad0:	b23ff51e 	bne	r22,r8,baa8 <__alt_data_end+0xfffebaa8>
    bad4:	d9800017 	ldw	r6,0(sp)
    bad8:	a9bff12e 	bgeu	r21,r6,baa0 <__alt_data_end+0xfffebaa0>
    badc:	b109c83a 	sub	r4,r22,r4
    bae0:	2823883a 	mov	r17,r5
    bae4:	003f2e06 	br	b7a0 <__alt_data_end+0xfffeb7a0>
    bae8:	2021883a 	mov	r16,r4
    baec:	003eff06 	br	b6ec <__alt_data_end+0xfffeb6ec>
    baf0:	2023883a 	mov	r17,r4
    baf4:	003ee406 	br	b688 <__alt_data_end+0xfffeb688>
    baf8:	a8bfe236 	bltu	r21,r2,ba84 <__alt_data_end+0xfffeba84>
    bafc:	0009883a 	mov	r4,zero
    bb00:	003f2706 	br	b7a0 <__alt_data_end+0xfffeb7a0>
    bb04:	81002d36 	bltu	r16,r4,bbbc <__divdf3+0x8f4>
    bb08:	24005626 	beq	r4,r16,bc64 <__divdf3+0x99c>
    bb0c:	2829883a 	mov	r20,r5
    bb10:	003f8006 	br	b914 <__alt_data_end+0xfffeb914>
    bb14:	053fffc4 	movi	r20,-1
    bb18:	003f7f06 	br	b918 <__alt_data_end+0xfffeb918>
    bb1c:	200f883a 	mov	r7,r4
    bb20:	003f3c06 	br	b814 <__alt_data_end+0xfffeb814>
    bb24:	1011883a 	mov	r8,r2
    bb28:	003f5506 	br	b880 <__alt_data_end+0xfffeb880>
    bb2c:	e027883a 	mov	r19,fp
    bb30:	003f7906 	br	b918 <__alt_data_end+0xfffeb918>
    bb34:	010007c4 	movi	r4,31
    bb38:	20c02816 	blt	r4,r3,bbdc <__divdf3+0x914>
    bb3c:	00800804 	movi	r2,32
    bb40:	10c5c83a 	sub	r2,r2,r3
    bb44:	888a983a 	sll	r5,r17,r2
    bb48:	a0c8d83a 	srl	r4,r20,r3
    bb4c:	a084983a 	sll	r2,r20,r2
    bb50:	88e2d83a 	srl	r17,r17,r3
    bb54:	2906b03a 	or	r3,r5,r4
    bb58:	1004c03a 	cmpne	r2,r2,zero
    bb5c:	1886b03a 	or	r3,r3,r2
    bb60:	188001cc 	andi	r2,r3,7
    bb64:	10000726 	beq	r2,zero,bb84 <__divdf3+0x8bc>
    bb68:	188003cc 	andi	r2,r3,15
    bb6c:	01000104 	movi	r4,4
    bb70:	11000426 	beq	r2,r4,bb84 <__divdf3+0x8bc>
    bb74:	1805883a 	mov	r2,r3
    bb78:	10c00104 	addi	r3,r2,4
    bb7c:	1885803a 	cmpltu	r2,r3,r2
    bb80:	88a3883a 	add	r17,r17,r2
    bb84:	8880202c 	andhi	r2,r17,128
    bb88:	10002926 	beq	r2,zero,bc30 <__divdf3+0x968>
    bb8c:	9900004c 	andi	r4,r19,1
    bb90:	00800044 	movi	r2,1
    bb94:	0021883a 	mov	r16,zero
    bb98:	002b883a 	mov	r21,zero
    bb9c:	003e2906 	br	b444 <__alt_data_end+0xfffeb444>
    bba0:	d9800017 	ldw	r6,0(sp)
    bba4:	8c7fff84 	addi	r17,r17,-2
    bba8:	a9ab883a 	add	r21,r21,r6
    bbac:	a98b803a 	cmpltu	r5,r21,r6
    bbb0:	2d8b883a 	add	r5,r5,r22
    bbb4:	2a11883a 	add	r8,r5,r8
    bbb8:	003ef806 	br	b79c <__alt_data_end+0xfffeb79c>
    bbbc:	d9800017 	ldw	r6,0(sp)
    bbc0:	318f883a 	add	r7,r6,r6
    bbc4:	398b803a 	cmpltu	r5,r7,r6
    bbc8:	2d8d883a 	add	r6,r5,r22
    bbcc:	81a1883a 	add	r16,r16,r6
    bbd0:	a17fff84 	addi	r5,r20,-2
    bbd4:	d9c00015 	stw	r7,0(sp)
    bbd8:	003f8806 	br	b9fc <__alt_data_end+0xfffeb9fc>
    bbdc:	013ff844 	movi	r4,-31
    bbe0:	2085c83a 	sub	r2,r4,r2
    bbe4:	8888d83a 	srl	r4,r17,r2
    bbe8:	00800804 	movi	r2,32
    bbec:	18802126 	beq	r3,r2,bc74 <__divdf3+0x9ac>
    bbf0:	04001004 	movi	r16,64
    bbf4:	80c7c83a 	sub	r3,r16,r3
    bbf8:	88e0983a 	sll	r16,r17,r3
    bbfc:	8504b03a 	or	r2,r16,r20
    bc00:	1004c03a 	cmpne	r2,r2,zero
    bc04:	2084b03a 	or	r2,r4,r2
    bc08:	144001cc 	andi	r17,r2,7
    bc0c:	88000d1e 	bne	r17,zero,bc44 <__divdf3+0x97c>
    bc10:	0021883a 	mov	r16,zero
    bc14:	102ad0fa 	srli	r21,r2,3
    bc18:	9900004c 	andi	r4,r19,1
    bc1c:	0005883a 	mov	r2,zero
    bc20:	ac6ab03a 	or	r21,r21,r17
    bc24:	003e0706 	br	b444 <__alt_data_end+0xfffeb444>
    bc28:	1007883a 	mov	r3,r2
    bc2c:	0023883a 	mov	r17,zero
    bc30:	8820927a 	slli	r16,r17,9
    bc34:	1805883a 	mov	r2,r3
    bc38:	8822977a 	slli	r17,r17,29
    bc3c:	8020d33a 	srli	r16,r16,12
    bc40:	003ff406 	br	bc14 <__alt_data_end+0xfffebc14>
    bc44:	10c003cc 	andi	r3,r2,15
    bc48:	01000104 	movi	r4,4
    bc4c:	193ff626 	beq	r3,r4,bc28 <__alt_data_end+0xfffebc28>
    bc50:	0023883a 	mov	r17,zero
    bc54:	003fc806 	br	bb78 <__alt_data_end+0xfffebb78>
    bc58:	a8bfd136 	bltu	r21,r2,bba0 <__alt_data_end+0xfffebba0>
    bc5c:	2823883a 	mov	r17,r5
    bc60:	003fa606 	br	bafc <__alt_data_end+0xfffebafc>
    bc64:	d9800017 	ldw	r6,0(sp)
    bc68:	30bfd436 	bltu	r6,r2,bbbc <__alt_data_end+0xfffebbbc>
    bc6c:	2829883a 	mov	r20,r5
    bc70:	003f6406 	br	ba04 <__alt_data_end+0xfffeba04>
    bc74:	0021883a 	mov	r16,zero
    bc78:	003fe006 	br	bbfc <__alt_data_end+0xfffebbfc>
    bc7c:	00800434 	movhi	r2,16
    bc80:	8c000234 	orhi	r16,r17,8
    bc84:	10bfffc4 	addi	r2,r2,-1
    bc88:	e009883a 	mov	r4,fp
    bc8c:	80a0703a 	and	r16,r16,r2
    bc90:	a02b883a 	mov	r21,r20
    bc94:	003e4e06 	br	b5d0 <__alt_data_end+0xfffeb5d0>

0000bc98 <__eqdf2>:
    bc98:	2804d53a 	srli	r2,r5,20
    bc9c:	3806d53a 	srli	r3,r7,20
    bca0:	02000434 	movhi	r8,16
    bca4:	423fffc4 	addi	r8,r8,-1
    bca8:	1081ffcc 	andi	r2,r2,2047
    bcac:	0281ffc4 	movi	r10,2047
    bcb0:	2a12703a 	and	r9,r5,r8
    bcb4:	18c1ffcc 	andi	r3,r3,2047
    bcb8:	3a10703a 	and	r8,r7,r8
    bcbc:	280ad7fa 	srli	r5,r5,31
    bcc0:	380ed7fa 	srli	r7,r7,31
    bcc4:	12801026 	beq	r2,r10,bd08 <__eqdf2+0x70>
    bcc8:	0281ffc4 	movi	r10,2047
    bccc:	1a800a26 	beq	r3,r10,bcf8 <__eqdf2+0x60>
    bcd0:	10c00226 	beq	r2,r3,bcdc <__eqdf2+0x44>
    bcd4:	00800044 	movi	r2,1
    bcd8:	f800283a 	ret
    bcdc:	4a3ffd1e 	bne	r9,r8,bcd4 <__alt_data_end+0xfffebcd4>
    bce0:	21bffc1e 	bne	r4,r6,bcd4 <__alt_data_end+0xfffebcd4>
    bce4:	29c00c26 	beq	r5,r7,bd18 <__eqdf2+0x80>
    bce8:	103ffa1e 	bne	r2,zero,bcd4 <__alt_data_end+0xfffebcd4>
    bcec:	2244b03a 	or	r2,r4,r9
    bcf0:	1004c03a 	cmpne	r2,r2,zero
    bcf4:	f800283a 	ret
    bcf8:	3214b03a 	or	r10,r6,r8
    bcfc:	503ff426 	beq	r10,zero,bcd0 <__alt_data_end+0xfffebcd0>
    bd00:	00800044 	movi	r2,1
    bd04:	f800283a 	ret
    bd08:	2254b03a 	or	r10,r4,r9
    bd0c:	503fee26 	beq	r10,zero,bcc8 <__alt_data_end+0xfffebcc8>
    bd10:	00800044 	movi	r2,1
    bd14:	f800283a 	ret
    bd18:	0005883a 	mov	r2,zero
    bd1c:	f800283a 	ret

0000bd20 <__gedf2>:
    bd20:	2804d53a 	srli	r2,r5,20
    bd24:	3806d53a 	srli	r3,r7,20
    bd28:	02000434 	movhi	r8,16
    bd2c:	423fffc4 	addi	r8,r8,-1
    bd30:	1081ffcc 	andi	r2,r2,2047
    bd34:	0241ffc4 	movi	r9,2047
    bd38:	2a14703a 	and	r10,r5,r8
    bd3c:	18c1ffcc 	andi	r3,r3,2047
    bd40:	3a10703a 	and	r8,r7,r8
    bd44:	280ad7fa 	srli	r5,r5,31
    bd48:	380ed7fa 	srli	r7,r7,31
    bd4c:	12401d26 	beq	r2,r9,bdc4 <__gedf2+0xa4>
    bd50:	0241ffc4 	movi	r9,2047
    bd54:	1a401226 	beq	r3,r9,bda0 <__gedf2+0x80>
    bd58:	1000081e 	bne	r2,zero,bd7c <__gedf2+0x5c>
    bd5c:	2296b03a 	or	r11,r4,r10
    bd60:	5813003a 	cmpeq	r9,r11,zero
    bd64:	1800091e 	bne	r3,zero,bd8c <__gedf2+0x6c>
    bd68:	3218b03a 	or	r12,r6,r8
    bd6c:	6000071e 	bne	r12,zero,bd8c <__gedf2+0x6c>
    bd70:	0005883a 	mov	r2,zero
    bd74:	5800101e 	bne	r11,zero,bdb8 <__gedf2+0x98>
    bd78:	f800283a 	ret
    bd7c:	18000c1e 	bne	r3,zero,bdb0 <__gedf2+0x90>
    bd80:	3212b03a 	or	r9,r6,r8
    bd84:	48000c26 	beq	r9,zero,bdb8 <__gedf2+0x98>
    bd88:	0013883a 	mov	r9,zero
    bd8c:	39c03fcc 	andi	r7,r7,255
    bd90:	48000826 	beq	r9,zero,bdb4 <__gedf2+0x94>
    bd94:	38000926 	beq	r7,zero,bdbc <__gedf2+0x9c>
    bd98:	00800044 	movi	r2,1
    bd9c:	f800283a 	ret
    bda0:	3212b03a 	or	r9,r6,r8
    bda4:	483fec26 	beq	r9,zero,bd58 <__alt_data_end+0xfffebd58>
    bda8:	00bfff84 	movi	r2,-2
    bdac:	f800283a 	ret
    bdb0:	39c03fcc 	andi	r7,r7,255
    bdb4:	29c00626 	beq	r5,r7,bdd0 <__gedf2+0xb0>
    bdb8:	283ff726 	beq	r5,zero,bd98 <__alt_data_end+0xfffebd98>
    bdbc:	00bfffc4 	movi	r2,-1
    bdc0:	f800283a 	ret
    bdc4:	2292b03a 	or	r9,r4,r10
    bdc8:	483fe126 	beq	r9,zero,bd50 <__alt_data_end+0xfffebd50>
    bdcc:	003ff606 	br	bda8 <__alt_data_end+0xfffebda8>
    bdd0:	18bff916 	blt	r3,r2,bdb8 <__alt_data_end+0xfffebdb8>
    bdd4:	10c00316 	blt	r2,r3,bde4 <__gedf2+0xc4>
    bdd8:	42bff736 	bltu	r8,r10,bdb8 <__alt_data_end+0xfffebdb8>
    bddc:	52000326 	beq	r10,r8,bdec <__gedf2+0xcc>
    bde0:	5200042e 	bgeu	r10,r8,bdf4 <__gedf2+0xd4>
    bde4:	283fec1e 	bne	r5,zero,bd98 <__alt_data_end+0xfffebd98>
    bde8:	003ff406 	br	bdbc <__alt_data_end+0xfffebdbc>
    bdec:	313ff236 	bltu	r6,r4,bdb8 <__alt_data_end+0xfffebdb8>
    bdf0:	21bffc36 	bltu	r4,r6,bde4 <__alt_data_end+0xfffebde4>
    bdf4:	0005883a 	mov	r2,zero
    bdf8:	f800283a 	ret

0000bdfc <__ledf2>:
    bdfc:	2804d53a 	srli	r2,r5,20
    be00:	3810d53a 	srli	r8,r7,20
    be04:	00c00434 	movhi	r3,16
    be08:	18ffffc4 	addi	r3,r3,-1
    be0c:	1081ffcc 	andi	r2,r2,2047
    be10:	0241ffc4 	movi	r9,2047
    be14:	28d4703a 	and	r10,r5,r3
    be18:	4201ffcc 	andi	r8,r8,2047
    be1c:	38c6703a 	and	r3,r7,r3
    be20:	280ad7fa 	srli	r5,r5,31
    be24:	380ed7fa 	srli	r7,r7,31
    be28:	12401f26 	beq	r2,r9,bea8 <__ledf2+0xac>
    be2c:	0241ffc4 	movi	r9,2047
    be30:	42401426 	beq	r8,r9,be84 <__ledf2+0x88>
    be34:	1000091e 	bne	r2,zero,be5c <__ledf2+0x60>
    be38:	2296b03a 	or	r11,r4,r10
    be3c:	5813003a 	cmpeq	r9,r11,zero
    be40:	29403fcc 	andi	r5,r5,255
    be44:	40000a1e 	bne	r8,zero,be70 <__ledf2+0x74>
    be48:	30d8b03a 	or	r12,r6,r3
    be4c:	6000081e 	bne	r12,zero,be70 <__ledf2+0x74>
    be50:	0005883a 	mov	r2,zero
    be54:	5800111e 	bne	r11,zero,be9c <__ledf2+0xa0>
    be58:	f800283a 	ret
    be5c:	29403fcc 	andi	r5,r5,255
    be60:	40000c1e 	bne	r8,zero,be94 <__ledf2+0x98>
    be64:	30d2b03a 	or	r9,r6,r3
    be68:	48000c26 	beq	r9,zero,be9c <__ledf2+0xa0>
    be6c:	0013883a 	mov	r9,zero
    be70:	39c03fcc 	andi	r7,r7,255
    be74:	48000826 	beq	r9,zero,be98 <__ledf2+0x9c>
    be78:	38001126 	beq	r7,zero,bec0 <__ledf2+0xc4>
    be7c:	00800044 	movi	r2,1
    be80:	f800283a 	ret
    be84:	30d2b03a 	or	r9,r6,r3
    be88:	483fea26 	beq	r9,zero,be34 <__alt_data_end+0xfffebe34>
    be8c:	00800084 	movi	r2,2
    be90:	f800283a 	ret
    be94:	39c03fcc 	andi	r7,r7,255
    be98:	39400726 	beq	r7,r5,beb8 <__ledf2+0xbc>
    be9c:	2800081e 	bne	r5,zero,bec0 <__ledf2+0xc4>
    bea0:	00800044 	movi	r2,1
    bea4:	f800283a 	ret
    bea8:	2292b03a 	or	r9,r4,r10
    beac:	483fdf26 	beq	r9,zero,be2c <__alt_data_end+0xfffebe2c>
    beb0:	00800084 	movi	r2,2
    beb4:	f800283a 	ret
    beb8:	4080030e 	bge	r8,r2,bec8 <__ledf2+0xcc>
    bebc:	383fef26 	beq	r7,zero,be7c <__alt_data_end+0xfffebe7c>
    bec0:	00bfffc4 	movi	r2,-1
    bec4:	f800283a 	ret
    bec8:	123feb16 	blt	r2,r8,be78 <__alt_data_end+0xfffebe78>
    becc:	1abff336 	bltu	r3,r10,be9c <__alt_data_end+0xfffebe9c>
    bed0:	50c00326 	beq	r10,r3,bee0 <__ledf2+0xe4>
    bed4:	50c0042e 	bgeu	r10,r3,bee8 <__ledf2+0xec>
    bed8:	283fe81e 	bne	r5,zero,be7c <__alt_data_end+0xfffebe7c>
    bedc:	003ff806 	br	bec0 <__alt_data_end+0xfffebec0>
    bee0:	313fee36 	bltu	r6,r4,be9c <__alt_data_end+0xfffebe9c>
    bee4:	21bffc36 	bltu	r4,r6,bed8 <__alt_data_end+0xfffebed8>
    bee8:	0005883a 	mov	r2,zero
    beec:	f800283a 	ret

0000bef0 <__muldf3>:
    bef0:	deffee04 	addi	sp,sp,-72
    bef4:	dd000c15 	stw	r20,48(sp)
    bef8:	2828d53a 	srli	r20,r5,20
    befc:	ddc00f15 	stw	r23,60(sp)
    bf00:	282ed7fa 	srli	r23,r5,31
    bf04:	dc000815 	stw	r16,32(sp)
    bf08:	04000434 	movhi	r16,16
    bf0c:	dcc00b15 	stw	r19,44(sp)
    bf10:	843fffc4 	addi	r16,r16,-1
    bf14:	dfc01115 	stw	ra,68(sp)
    bf18:	df001015 	stw	fp,64(sp)
    bf1c:	dd800e15 	stw	r22,56(sp)
    bf20:	dd400d15 	stw	r21,52(sp)
    bf24:	dc800a15 	stw	r18,40(sp)
    bf28:	dc400915 	stw	r17,36(sp)
    bf2c:	a501ffcc 	andi	r20,r20,2047
    bf30:	2c20703a 	and	r16,r5,r16
    bf34:	b827883a 	mov	r19,r23
    bf38:	ba403fcc 	andi	r9,r23,255
    bf3c:	a0006026 	beq	r20,zero,c0c0 <__muldf3+0x1d0>
    bf40:	0081ffc4 	movi	r2,2047
    bf44:	202d883a 	mov	r22,r4
    bf48:	a0803626 	beq	r20,r2,c024 <__muldf3+0x134>
    bf4c:	84000434 	orhi	r16,r16,16
    bf50:	200ad77a 	srli	r5,r4,29
    bf54:	800490fa 	slli	r2,r16,3
    bf58:	202c90fa 	slli	r22,r4,3
    bf5c:	a53f0044 	addi	r20,r20,-1023
    bf60:	28a0b03a 	or	r16,r5,r2
    bf64:	002b883a 	mov	r21,zero
    bf68:	000b883a 	mov	r5,zero
    bf6c:	3804d53a 	srli	r2,r7,20
    bf70:	3838d7fa 	srli	fp,r7,31
    bf74:	04400434 	movhi	r17,16
    bf78:	8c7fffc4 	addi	r17,r17,-1
    bf7c:	1081ffcc 	andi	r2,r2,2047
    bf80:	3025883a 	mov	r18,r6
    bf84:	3c62703a 	and	r17,r7,r17
    bf88:	e2803fcc 	andi	r10,fp,255
    bf8c:	10006d26 	beq	r2,zero,c144 <__muldf3+0x254>
    bf90:	00c1ffc4 	movi	r3,2047
    bf94:	10c06526 	beq	r2,r3,c12c <__muldf3+0x23c>
    bf98:	8c400434 	orhi	r17,r17,16
    bf9c:	300ed77a 	srli	r7,r6,29
    bfa0:	880690fa 	slli	r3,r17,3
    bfa4:	302490fa 	slli	r18,r6,3
    bfa8:	10bf0044 	addi	r2,r2,-1023
    bfac:	38e2b03a 	or	r17,r7,r3
    bfb0:	000f883a 	mov	r7,zero
    bfb4:	a087883a 	add	r3,r20,r2
    bfb8:	010003c4 	movi	r4,15
    bfbc:	3d44b03a 	or	r2,r7,r21
    bfc0:	e5ccf03a 	xor	r6,fp,r23
    bfc4:	1a000044 	addi	r8,r3,1
    bfc8:	20809b36 	bltu	r4,r2,c238 <__muldf3+0x348>
    bfcc:	100490ba 	slli	r2,r2,2
    bfd0:	01000074 	movhi	r4,1
    bfd4:	212ff904 	addi	r4,r4,-16412
    bfd8:	1105883a 	add	r2,r2,r4
    bfdc:	10800017 	ldw	r2,0(r2)
    bfe0:	1000683a 	jmp	r2
    bfe4:	0000c238 	rdprs	zero,zero,776
    bfe8:	0000c044 	movi	zero,769
    bfec:	0000c044 	movi	zero,769
    bff0:	0000c040 	call	c04 <___vfprintf_internal_r+0x6ac>
    bff4:	0000c214 	movui	zero,776
    bff8:	0000c214 	movui	zero,776
    bffc:	0000c1fc 	xorhi	zero,zero,775
    c000:	0000c040 	call	c04 <___vfprintf_internal_r+0x6ac>
    c004:	0000c214 	movui	zero,776
    c008:	0000c1fc 	xorhi	zero,zero,775
    c00c:	0000c214 	movui	zero,776
    c010:	0000c040 	call	c04 <___vfprintf_internal_r+0x6ac>
    c014:	0000c224 	muli	zero,zero,776
    c018:	0000c224 	muli	zero,zero,776
    c01c:	0000c224 	muli	zero,zero,776
    c020:	0000c584 	movi	zero,790
    c024:	2404b03a 	or	r2,r4,r16
    c028:	1000711e 	bne	r2,zero,c1f0 <__muldf3+0x300>
    c02c:	05400204 	movi	r21,8
    c030:	0021883a 	mov	r16,zero
    c034:	002d883a 	mov	r22,zero
    c038:	01400084 	movi	r5,2
    c03c:	003fcb06 	br	bf6c <__alt_data_end+0xfffebf6c>
    c040:	500d883a 	mov	r6,r10
    c044:	00800084 	movi	r2,2
    c048:	38805926 	beq	r7,r2,c1b0 <__muldf3+0x2c0>
    c04c:	008000c4 	movi	r2,3
    c050:	3881bb26 	beq	r7,r2,c740 <__muldf3+0x850>
    c054:	00800044 	movi	r2,1
    c058:	3881961e 	bne	r7,r2,c6b4 <__muldf3+0x7c4>
    c05c:	3027883a 	mov	r19,r6
    c060:	0005883a 	mov	r2,zero
    c064:	0021883a 	mov	r16,zero
    c068:	002d883a 	mov	r22,zero
    c06c:	1004953a 	slli	r2,r2,20
    c070:	98c03fcc 	andi	r3,r19,255
    c074:	04400434 	movhi	r17,16
    c078:	8c7fffc4 	addi	r17,r17,-1
    c07c:	180697fa 	slli	r3,r3,31
    c080:	8460703a 	and	r16,r16,r17
    c084:	80a0b03a 	or	r16,r16,r2
    c088:	80c6b03a 	or	r3,r16,r3
    c08c:	b005883a 	mov	r2,r22
    c090:	dfc01117 	ldw	ra,68(sp)
    c094:	df001017 	ldw	fp,64(sp)
    c098:	ddc00f17 	ldw	r23,60(sp)
    c09c:	dd800e17 	ldw	r22,56(sp)
    c0a0:	dd400d17 	ldw	r21,52(sp)
    c0a4:	dd000c17 	ldw	r20,48(sp)
    c0a8:	dcc00b17 	ldw	r19,44(sp)
    c0ac:	dc800a17 	ldw	r18,40(sp)
    c0b0:	dc400917 	ldw	r17,36(sp)
    c0b4:	dc000817 	ldw	r16,32(sp)
    c0b8:	dec01204 	addi	sp,sp,72
    c0bc:	f800283a 	ret
    c0c0:	2404b03a 	or	r2,r4,r16
    c0c4:	202b883a 	mov	r21,r4
    c0c8:	10004426 	beq	r2,zero,c1dc <__muldf3+0x2ec>
    c0cc:	80015126 	beq	r16,zero,c614 <__muldf3+0x724>
    c0d0:	8009883a 	mov	r4,r16
    c0d4:	d9800715 	stw	r6,28(sp)
    c0d8:	d9c00215 	stw	r7,8(sp)
    c0dc:	da400415 	stw	r9,16(sp)
    c0e0:	000d25c0 	call	d25c <__clzsi2>
    c0e4:	d9800717 	ldw	r6,28(sp)
    c0e8:	d9c00217 	ldw	r7,8(sp)
    c0ec:	da400417 	ldw	r9,16(sp)
    c0f0:	113ffd44 	addi	r4,r2,-11
    c0f4:	00c00704 	movi	r3,28
    c0f8:	19014216 	blt	r3,r4,c604 <__muldf3+0x714>
    c0fc:	00c00744 	movi	r3,29
    c100:	15bffe04 	addi	r22,r2,-8
    c104:	1907c83a 	sub	r3,r3,r4
    c108:	85a0983a 	sll	r16,r16,r22
    c10c:	a8c6d83a 	srl	r3,r21,r3
    c110:	adac983a 	sll	r22,r21,r22
    c114:	1c20b03a 	or	r16,r3,r16
    c118:	1080fcc4 	addi	r2,r2,1011
    c11c:	00a9c83a 	sub	r20,zero,r2
    c120:	002b883a 	mov	r21,zero
    c124:	000b883a 	mov	r5,zero
    c128:	003f9006 	br	bf6c <__alt_data_end+0xfffebf6c>
    c12c:	3446b03a 	or	r3,r6,r17
    c130:	1800281e 	bne	r3,zero,c1d4 <__muldf3+0x2e4>
    c134:	0023883a 	mov	r17,zero
    c138:	0025883a 	mov	r18,zero
    c13c:	01c00084 	movi	r7,2
    c140:	003f9c06 	br	bfb4 <__alt_data_end+0xfffebfb4>
    c144:	3446b03a 	or	r3,r6,r17
    c148:	18001e26 	beq	r3,zero,c1c4 <__muldf3+0x2d4>
    c14c:	88012126 	beq	r17,zero,c5d4 <__muldf3+0x6e4>
    c150:	8809883a 	mov	r4,r17
    c154:	d9400215 	stw	r5,8(sp)
    c158:	d9800715 	stw	r6,28(sp)
    c15c:	da400415 	stw	r9,16(sp)
    c160:	da800315 	stw	r10,12(sp)
    c164:	000d25c0 	call	d25c <__clzsi2>
    c168:	d9400217 	ldw	r5,8(sp)
    c16c:	d9800717 	ldw	r6,28(sp)
    c170:	da400417 	ldw	r9,16(sp)
    c174:	da800317 	ldw	r10,12(sp)
    c178:	113ffd44 	addi	r4,r2,-11
    c17c:	00c00704 	movi	r3,28
    c180:	19011016 	blt	r3,r4,c5c4 <__muldf3+0x6d4>
    c184:	00c00744 	movi	r3,29
    c188:	14bffe04 	addi	r18,r2,-8
    c18c:	1907c83a 	sub	r3,r3,r4
    c190:	8ca2983a 	sll	r17,r17,r18
    c194:	30c6d83a 	srl	r3,r6,r3
    c198:	34a4983a 	sll	r18,r6,r18
    c19c:	1c62b03a 	or	r17,r3,r17
    c1a0:	1080fcc4 	addi	r2,r2,1011
    c1a4:	0085c83a 	sub	r2,zero,r2
    c1a8:	000f883a 	mov	r7,zero
    c1ac:	003f8106 	br	bfb4 <__alt_data_end+0xfffebfb4>
    c1b0:	3027883a 	mov	r19,r6
    c1b4:	0081ffc4 	movi	r2,2047
    c1b8:	0021883a 	mov	r16,zero
    c1bc:	002d883a 	mov	r22,zero
    c1c0:	003faa06 	br	c06c <__alt_data_end+0xfffec06c>
    c1c4:	0023883a 	mov	r17,zero
    c1c8:	0025883a 	mov	r18,zero
    c1cc:	01c00044 	movi	r7,1
    c1d0:	003f7806 	br	bfb4 <__alt_data_end+0xfffebfb4>
    c1d4:	01c000c4 	movi	r7,3
    c1d8:	003f7606 	br	bfb4 <__alt_data_end+0xfffebfb4>
    c1dc:	05400104 	movi	r21,4
    c1e0:	0021883a 	mov	r16,zero
    c1e4:	002d883a 	mov	r22,zero
    c1e8:	01400044 	movi	r5,1
    c1ec:	003f5f06 	br	bf6c <__alt_data_end+0xfffebf6c>
    c1f0:	05400304 	movi	r21,12
    c1f4:	014000c4 	movi	r5,3
    c1f8:	003f5c06 	br	bf6c <__alt_data_end+0xfffebf6c>
    c1fc:	04000434 	movhi	r16,16
    c200:	0027883a 	mov	r19,zero
    c204:	843fffc4 	addi	r16,r16,-1
    c208:	05bfffc4 	movi	r22,-1
    c20c:	0081ffc4 	movi	r2,2047
    c210:	003f9606 	br	c06c <__alt_data_end+0xfffec06c>
    c214:	8023883a 	mov	r17,r16
    c218:	b025883a 	mov	r18,r22
    c21c:	280f883a 	mov	r7,r5
    c220:	003f8806 	br	c044 <__alt_data_end+0xfffec044>
    c224:	8023883a 	mov	r17,r16
    c228:	b025883a 	mov	r18,r22
    c22c:	480d883a 	mov	r6,r9
    c230:	280f883a 	mov	r7,r5
    c234:	003f8306 	br	c044 <__alt_data_end+0xfffec044>
    c238:	b026d43a 	srli	r19,r22,16
    c23c:	902ed43a 	srli	r23,r18,16
    c240:	b5bfffcc 	andi	r22,r22,65535
    c244:	94bfffcc 	andi	r18,r18,65535
    c248:	b00b883a 	mov	r5,r22
    c24c:	9009883a 	mov	r4,r18
    c250:	d8c00515 	stw	r3,20(sp)
    c254:	d9800715 	stw	r6,28(sp)
    c258:	da000615 	stw	r8,24(sp)
    c25c:	000a9f40 	call	a9f4 <__mulsi3>
    c260:	980b883a 	mov	r5,r19
    c264:	9009883a 	mov	r4,r18
    c268:	1029883a 	mov	r20,r2
    c26c:	000a9f40 	call	a9f4 <__mulsi3>
    c270:	b80b883a 	mov	r5,r23
    c274:	9809883a 	mov	r4,r19
    c278:	102b883a 	mov	r21,r2
    c27c:	000a9f40 	call	a9f4 <__mulsi3>
    c280:	b809883a 	mov	r4,r23
    c284:	b00b883a 	mov	r5,r22
    c288:	1039883a 	mov	fp,r2
    c28c:	000a9f40 	call	a9f4 <__mulsi3>
    c290:	a008d43a 	srli	r4,r20,16
    c294:	1545883a 	add	r2,r2,r21
    c298:	d8c00517 	ldw	r3,20(sp)
    c29c:	2085883a 	add	r2,r4,r2
    c2a0:	d9800717 	ldw	r6,28(sp)
    c2a4:	da000617 	ldw	r8,24(sp)
    c2a8:	1540022e 	bgeu	r2,r21,c2b4 <__muldf3+0x3c4>
    c2ac:	01000074 	movhi	r4,1
    c2b0:	e139883a 	add	fp,fp,r4
    c2b4:	100e943a 	slli	r7,r2,16
    c2b8:	1004d43a 	srli	r2,r2,16
    c2bc:	882ad43a 	srli	r21,r17,16
    c2c0:	a53fffcc 	andi	r20,r20,65535
    c2c4:	8c7fffcc 	andi	r17,r17,65535
    c2c8:	3d29883a 	add	r20,r7,r20
    c2cc:	b00b883a 	mov	r5,r22
    c2d0:	8809883a 	mov	r4,r17
    c2d4:	d8c00515 	stw	r3,20(sp)
    c2d8:	d9800715 	stw	r6,28(sp)
    c2dc:	da000615 	stw	r8,24(sp)
    c2e0:	dd000115 	stw	r20,4(sp)
    c2e4:	d8800015 	stw	r2,0(sp)
    c2e8:	000a9f40 	call	a9f4 <__mulsi3>
    c2ec:	980b883a 	mov	r5,r19
    c2f0:	8809883a 	mov	r4,r17
    c2f4:	d8800215 	stw	r2,8(sp)
    c2f8:	000a9f40 	call	a9f4 <__mulsi3>
    c2fc:	9809883a 	mov	r4,r19
    c300:	a80b883a 	mov	r5,r21
    c304:	1029883a 	mov	r20,r2
    c308:	000a9f40 	call	a9f4 <__mulsi3>
    c30c:	b00b883a 	mov	r5,r22
    c310:	a809883a 	mov	r4,r21
    c314:	d8800415 	stw	r2,16(sp)
    c318:	000a9f40 	call	a9f4 <__mulsi3>
    c31c:	d9c00217 	ldw	r7,8(sp)
    c320:	1505883a 	add	r2,r2,r20
    c324:	d8c00517 	ldw	r3,20(sp)
    c328:	3826d43a 	srli	r19,r7,16
    c32c:	d9800717 	ldw	r6,28(sp)
    c330:	da000617 	ldw	r8,24(sp)
    c334:	9885883a 	add	r2,r19,r2
    c338:	da400417 	ldw	r9,16(sp)
    c33c:	1500022e 	bgeu	r2,r20,c348 <__muldf3+0x458>
    c340:	01000074 	movhi	r4,1
    c344:	4913883a 	add	r9,r9,r4
    c348:	1028d43a 	srli	r20,r2,16
    c34c:	1004943a 	slli	r2,r2,16
    c350:	802cd43a 	srli	r22,r16,16
    c354:	843fffcc 	andi	r16,r16,65535
    c358:	3cffffcc 	andi	r19,r7,65535
    c35c:	9009883a 	mov	r4,r18
    c360:	800b883a 	mov	r5,r16
    c364:	a269883a 	add	r20,r20,r9
    c368:	d8c00515 	stw	r3,20(sp)
    c36c:	d9800715 	stw	r6,28(sp)
    c370:	da000615 	stw	r8,24(sp)
    c374:	14e7883a 	add	r19,r2,r19
    c378:	000a9f40 	call	a9f4 <__mulsi3>
    c37c:	9009883a 	mov	r4,r18
    c380:	b00b883a 	mov	r5,r22
    c384:	d8800315 	stw	r2,12(sp)
    c388:	000a9f40 	call	a9f4 <__mulsi3>
    c38c:	b809883a 	mov	r4,r23
    c390:	b00b883a 	mov	r5,r22
    c394:	d8800215 	stw	r2,8(sp)
    c398:	000a9f40 	call	a9f4 <__mulsi3>
    c39c:	b80b883a 	mov	r5,r23
    c3a0:	8009883a 	mov	r4,r16
    c3a4:	d8800415 	stw	r2,16(sp)
    c3a8:	000a9f40 	call	a9f4 <__mulsi3>
    c3ac:	da800317 	ldw	r10,12(sp)
    c3b0:	d9c00217 	ldw	r7,8(sp)
    c3b4:	d9000017 	ldw	r4,0(sp)
    c3b8:	502ed43a 	srli	r23,r10,16
    c3bc:	11c5883a 	add	r2,r2,r7
    c3c0:	24e5883a 	add	r18,r4,r19
    c3c4:	b885883a 	add	r2,r23,r2
    c3c8:	d8c00517 	ldw	r3,20(sp)
    c3cc:	d9800717 	ldw	r6,28(sp)
    c3d0:	da000617 	ldw	r8,24(sp)
    c3d4:	da400417 	ldw	r9,16(sp)
    c3d8:	11c0022e 	bgeu	r2,r7,c3e4 <__muldf3+0x4f4>
    c3dc:	01000074 	movhi	r4,1
    c3e0:	4913883a 	add	r9,r9,r4
    c3e4:	100ed43a 	srli	r7,r2,16
    c3e8:	1004943a 	slli	r2,r2,16
    c3ec:	55ffffcc 	andi	r23,r10,65535
    c3f0:	3a53883a 	add	r9,r7,r9
    c3f4:	8809883a 	mov	r4,r17
    c3f8:	800b883a 	mov	r5,r16
    c3fc:	d8c00515 	stw	r3,20(sp)
    c400:	d9800715 	stw	r6,28(sp)
    c404:	da000615 	stw	r8,24(sp)
    c408:	da400415 	stw	r9,16(sp)
    c40c:	15ef883a 	add	r23,r2,r23
    c410:	000a9f40 	call	a9f4 <__mulsi3>
    c414:	8809883a 	mov	r4,r17
    c418:	b00b883a 	mov	r5,r22
    c41c:	d8800215 	stw	r2,8(sp)
    c420:	000a9f40 	call	a9f4 <__mulsi3>
    c424:	b00b883a 	mov	r5,r22
    c428:	a809883a 	mov	r4,r21
    c42c:	d8800315 	stw	r2,12(sp)
    c430:	000a9f40 	call	a9f4 <__mulsi3>
    c434:	8009883a 	mov	r4,r16
    c438:	a80b883a 	mov	r5,r21
    c43c:	1023883a 	mov	r17,r2
    c440:	000a9f40 	call	a9f4 <__mulsi3>
    c444:	d9c00217 	ldw	r7,8(sp)
    c448:	da800317 	ldw	r10,12(sp)
    c44c:	d8c00517 	ldw	r3,20(sp)
    c450:	3808d43a 	srli	r4,r7,16
    c454:	1285883a 	add	r2,r2,r10
    c458:	d9800717 	ldw	r6,28(sp)
    c45c:	2085883a 	add	r2,r4,r2
    c460:	da000617 	ldw	r8,24(sp)
    c464:	da400417 	ldw	r9,16(sp)
    c468:	1280022e 	bgeu	r2,r10,c474 <__muldf3+0x584>
    c46c:	01000074 	movhi	r4,1
    c470:	8923883a 	add	r17,r17,r4
    c474:	1008943a 	slli	r4,r2,16
    c478:	39ffffcc 	andi	r7,r7,65535
    c47c:	e4b9883a 	add	fp,fp,r18
    c480:	21cf883a 	add	r7,r4,r7
    c484:	e4e7803a 	cmpltu	r19,fp,r19
    c488:	3d0f883a 	add	r7,r7,r20
    c48c:	bf39883a 	add	fp,r23,fp
    c490:	99c9883a 	add	r4,r19,r7
    c494:	e5ef803a 	cmpltu	r23,fp,r23
    c498:	490b883a 	add	r5,r9,r4
    c49c:	1004d43a 	srli	r2,r2,16
    c4a0:	b965883a 	add	r18,r23,r5
    c4a4:	24c9803a 	cmpltu	r4,r4,r19
    c4a8:	3d29803a 	cmpltu	r20,r7,r20
    c4ac:	a128b03a 	or	r20,r20,r4
    c4b0:	95ef803a 	cmpltu	r23,r18,r23
    c4b4:	2a53803a 	cmpltu	r9,r5,r9
    c4b8:	a0a9883a 	add	r20,r20,r2
    c4bc:	4deeb03a 	or	r23,r9,r23
    c4c0:	a5ef883a 	add	r23,r20,r23
    c4c4:	bc63883a 	add	r17,r23,r17
    c4c8:	e004927a 	slli	r2,fp,9
    c4cc:	d9000117 	ldw	r4,4(sp)
    c4d0:	882e927a 	slli	r23,r17,9
    c4d4:	9022d5fa 	srli	r17,r18,23
    c4d8:	e038d5fa 	srli	fp,fp,23
    c4dc:	1104b03a 	or	r2,r2,r4
    c4e0:	9024927a 	slli	r18,r18,9
    c4e4:	1004c03a 	cmpne	r2,r2,zero
    c4e8:	bc62b03a 	or	r17,r23,r17
    c4ec:	1738b03a 	or	fp,r2,fp
    c4f0:	8880402c 	andhi	r2,r17,256
    c4f4:	e4a4b03a 	or	r18,fp,r18
    c4f8:	10000726 	beq	r2,zero,c518 <__muldf3+0x628>
    c4fc:	9006d07a 	srli	r3,r18,1
    c500:	880497fa 	slli	r2,r17,31
    c504:	9480004c 	andi	r18,r18,1
    c508:	8822d07a 	srli	r17,r17,1
    c50c:	1ca4b03a 	or	r18,r3,r18
    c510:	14a4b03a 	or	r18,r2,r18
    c514:	4007883a 	mov	r3,r8
    c518:	1880ffc4 	addi	r2,r3,1023
    c51c:	0080460e 	bge	zero,r2,c638 <__muldf3+0x748>
    c520:	910001cc 	andi	r4,r18,7
    c524:	20000726 	beq	r4,zero,c544 <__muldf3+0x654>
    c528:	910003cc 	andi	r4,r18,15
    c52c:	01400104 	movi	r5,4
    c530:	21400426 	beq	r4,r5,c544 <__muldf3+0x654>
    c534:	9149883a 	add	r4,r18,r5
    c538:	24a5803a 	cmpltu	r18,r4,r18
    c53c:	8ca3883a 	add	r17,r17,r18
    c540:	2025883a 	mov	r18,r4
    c544:	8900402c 	andhi	r4,r17,256
    c548:	20000426 	beq	r4,zero,c55c <__muldf3+0x66c>
    c54c:	18810004 	addi	r2,r3,1024
    c550:	00ffc034 	movhi	r3,65280
    c554:	18ffffc4 	addi	r3,r3,-1
    c558:	88e2703a 	and	r17,r17,r3
    c55c:	00c1ff84 	movi	r3,2046
    c560:	18bf1316 	blt	r3,r2,c1b0 <__alt_data_end+0xfffec1b0>
    c564:	882c977a 	slli	r22,r17,29
    c568:	9024d0fa 	srli	r18,r18,3
    c56c:	8822927a 	slli	r17,r17,9
    c570:	1081ffcc 	andi	r2,r2,2047
    c574:	b4acb03a 	or	r22,r22,r18
    c578:	8820d33a 	srli	r16,r17,12
    c57c:	3027883a 	mov	r19,r6
    c580:	003eba06 	br	c06c <__alt_data_end+0xfffec06c>
    c584:	8080022c 	andhi	r2,r16,8
    c588:	10000926 	beq	r2,zero,c5b0 <__muldf3+0x6c0>
    c58c:	8880022c 	andhi	r2,r17,8
    c590:	1000071e 	bne	r2,zero,c5b0 <__muldf3+0x6c0>
    c594:	00800434 	movhi	r2,16
    c598:	8c000234 	orhi	r16,r17,8
    c59c:	10bfffc4 	addi	r2,r2,-1
    c5a0:	e027883a 	mov	r19,fp
    c5a4:	80a0703a 	and	r16,r16,r2
    c5a8:	902d883a 	mov	r22,r18
    c5ac:	003f1706 	br	c20c <__alt_data_end+0xfffec20c>
    c5b0:	00800434 	movhi	r2,16
    c5b4:	84000234 	orhi	r16,r16,8
    c5b8:	10bfffc4 	addi	r2,r2,-1
    c5bc:	80a0703a 	and	r16,r16,r2
    c5c0:	003f1206 	br	c20c <__alt_data_end+0xfffec20c>
    c5c4:	147ff604 	addi	r17,r2,-40
    c5c8:	3462983a 	sll	r17,r6,r17
    c5cc:	0025883a 	mov	r18,zero
    c5d0:	003ef306 	br	c1a0 <__alt_data_end+0xfffec1a0>
    c5d4:	3009883a 	mov	r4,r6
    c5d8:	d9400215 	stw	r5,8(sp)
    c5dc:	d9800715 	stw	r6,28(sp)
    c5e0:	da400415 	stw	r9,16(sp)
    c5e4:	da800315 	stw	r10,12(sp)
    c5e8:	000d25c0 	call	d25c <__clzsi2>
    c5ec:	10800804 	addi	r2,r2,32
    c5f0:	da800317 	ldw	r10,12(sp)
    c5f4:	da400417 	ldw	r9,16(sp)
    c5f8:	d9800717 	ldw	r6,28(sp)
    c5fc:	d9400217 	ldw	r5,8(sp)
    c600:	003edd06 	br	c178 <__alt_data_end+0xfffec178>
    c604:	143ff604 	addi	r16,r2,-40
    c608:	ac20983a 	sll	r16,r21,r16
    c60c:	002d883a 	mov	r22,zero
    c610:	003ec106 	br	c118 <__alt_data_end+0xfffec118>
    c614:	d9800715 	stw	r6,28(sp)
    c618:	d9c00215 	stw	r7,8(sp)
    c61c:	da400415 	stw	r9,16(sp)
    c620:	000d25c0 	call	d25c <__clzsi2>
    c624:	10800804 	addi	r2,r2,32
    c628:	da400417 	ldw	r9,16(sp)
    c62c:	d9c00217 	ldw	r7,8(sp)
    c630:	d9800717 	ldw	r6,28(sp)
    c634:	003eae06 	br	c0f0 <__alt_data_end+0xfffec0f0>
    c638:	00c00044 	movi	r3,1
    c63c:	1887c83a 	sub	r3,r3,r2
    c640:	01000e04 	movi	r4,56
    c644:	20fe8516 	blt	r4,r3,c05c <__alt_data_end+0xfffec05c>
    c648:	010007c4 	movi	r4,31
    c64c:	20c01b16 	blt	r4,r3,c6bc <__muldf3+0x7cc>
    c650:	00800804 	movi	r2,32
    c654:	10c5c83a 	sub	r2,r2,r3
    c658:	888a983a 	sll	r5,r17,r2
    c65c:	90c8d83a 	srl	r4,r18,r3
    c660:	9084983a 	sll	r2,r18,r2
    c664:	88e2d83a 	srl	r17,r17,r3
    c668:	2906b03a 	or	r3,r5,r4
    c66c:	1004c03a 	cmpne	r2,r2,zero
    c670:	1886b03a 	or	r3,r3,r2
    c674:	188001cc 	andi	r2,r3,7
    c678:	10000726 	beq	r2,zero,c698 <__muldf3+0x7a8>
    c67c:	188003cc 	andi	r2,r3,15
    c680:	01000104 	movi	r4,4
    c684:	11000426 	beq	r2,r4,c698 <__muldf3+0x7a8>
    c688:	1805883a 	mov	r2,r3
    c68c:	10c00104 	addi	r3,r2,4
    c690:	1885803a 	cmpltu	r2,r3,r2
    c694:	88a3883a 	add	r17,r17,r2
    c698:	8880202c 	andhi	r2,r17,128
    c69c:	10001c26 	beq	r2,zero,c710 <__muldf3+0x820>
    c6a0:	3027883a 	mov	r19,r6
    c6a4:	00800044 	movi	r2,1
    c6a8:	0021883a 	mov	r16,zero
    c6ac:	002d883a 	mov	r22,zero
    c6b0:	003e6e06 	br	c06c <__alt_data_end+0xfffec06c>
    c6b4:	4007883a 	mov	r3,r8
    c6b8:	003f9706 	br	c518 <__alt_data_end+0xfffec518>
    c6bc:	017ff844 	movi	r5,-31
    c6c0:	2885c83a 	sub	r2,r5,r2
    c6c4:	888ad83a 	srl	r5,r17,r2
    c6c8:	00800804 	movi	r2,32
    c6cc:	18801a26 	beq	r3,r2,c738 <__muldf3+0x848>
    c6d0:	01001004 	movi	r4,64
    c6d4:	20c7c83a 	sub	r3,r4,r3
    c6d8:	88e2983a 	sll	r17,r17,r3
    c6dc:	8ca4b03a 	or	r18,r17,r18
    c6e0:	9004c03a 	cmpne	r2,r18,zero
    c6e4:	2884b03a 	or	r2,r5,r2
    c6e8:	144001cc 	andi	r17,r2,7
    c6ec:	88000d1e 	bne	r17,zero,c724 <__muldf3+0x834>
    c6f0:	0021883a 	mov	r16,zero
    c6f4:	102cd0fa 	srli	r22,r2,3
    c6f8:	3027883a 	mov	r19,r6
    c6fc:	0005883a 	mov	r2,zero
    c700:	b46cb03a 	or	r22,r22,r17
    c704:	003e5906 	br	c06c <__alt_data_end+0xfffec06c>
    c708:	1007883a 	mov	r3,r2
    c70c:	0023883a 	mov	r17,zero
    c710:	8820927a 	slli	r16,r17,9
    c714:	1805883a 	mov	r2,r3
    c718:	8822977a 	slli	r17,r17,29
    c71c:	8020d33a 	srli	r16,r16,12
    c720:	003ff406 	br	c6f4 <__alt_data_end+0xfffec6f4>
    c724:	10c003cc 	andi	r3,r2,15
    c728:	01000104 	movi	r4,4
    c72c:	193ff626 	beq	r3,r4,c708 <__alt_data_end+0xfffec708>
    c730:	0023883a 	mov	r17,zero
    c734:	003fd506 	br	c68c <__alt_data_end+0xfffec68c>
    c738:	0023883a 	mov	r17,zero
    c73c:	003fe706 	br	c6dc <__alt_data_end+0xfffec6dc>
    c740:	00800434 	movhi	r2,16
    c744:	8c000234 	orhi	r16,r17,8
    c748:	10bfffc4 	addi	r2,r2,-1
    c74c:	3027883a 	mov	r19,r6
    c750:	80a0703a 	and	r16,r16,r2
    c754:	902d883a 	mov	r22,r18
    c758:	003eac06 	br	c20c <__alt_data_end+0xfffec20c>

0000c75c <__subdf3>:
    c75c:	02000434 	movhi	r8,16
    c760:	423fffc4 	addi	r8,r8,-1
    c764:	defffb04 	addi	sp,sp,-20
    c768:	2a14703a 	and	r10,r5,r8
    c76c:	3812d53a 	srli	r9,r7,20
    c770:	3a10703a 	and	r8,r7,r8
    c774:	2006d77a 	srli	r3,r4,29
    c778:	3004d77a 	srli	r2,r6,29
    c77c:	dc000015 	stw	r16,0(sp)
    c780:	501490fa 	slli	r10,r10,3
    c784:	2820d53a 	srli	r16,r5,20
    c788:	401090fa 	slli	r8,r8,3
    c78c:	dc800215 	stw	r18,8(sp)
    c790:	dc400115 	stw	r17,4(sp)
    c794:	dfc00415 	stw	ra,16(sp)
    c798:	202290fa 	slli	r17,r4,3
    c79c:	dcc00315 	stw	r19,12(sp)
    c7a0:	4a41ffcc 	andi	r9,r9,2047
    c7a4:	0101ffc4 	movi	r4,2047
    c7a8:	2824d7fa 	srli	r18,r5,31
    c7ac:	8401ffcc 	andi	r16,r16,2047
    c7b0:	50c6b03a 	or	r3,r10,r3
    c7b4:	380ed7fa 	srli	r7,r7,31
    c7b8:	408ab03a 	or	r5,r8,r2
    c7bc:	300c90fa 	slli	r6,r6,3
    c7c0:	49009626 	beq	r9,r4,ca1c <__subdf3+0x2c0>
    c7c4:	39c0005c 	xori	r7,r7,1
    c7c8:	8245c83a 	sub	r2,r16,r9
    c7cc:	3c807426 	beq	r7,r18,c9a0 <__subdf3+0x244>
    c7d0:	0080af0e 	bge	zero,r2,ca90 <__subdf3+0x334>
    c7d4:	48002a1e 	bne	r9,zero,c880 <__subdf3+0x124>
    c7d8:	2988b03a 	or	r4,r5,r6
    c7dc:	20009a1e 	bne	r4,zero,ca48 <__subdf3+0x2ec>
    c7e0:	888001cc 	andi	r2,r17,7
    c7e4:	10000726 	beq	r2,zero,c804 <__subdf3+0xa8>
    c7e8:	888003cc 	andi	r2,r17,15
    c7ec:	01000104 	movi	r4,4
    c7f0:	11000426 	beq	r2,r4,c804 <__subdf3+0xa8>
    c7f4:	890b883a 	add	r5,r17,r4
    c7f8:	2c63803a 	cmpltu	r17,r5,r17
    c7fc:	1c47883a 	add	r3,r3,r17
    c800:	2823883a 	mov	r17,r5
    c804:	1880202c 	andhi	r2,r3,128
    c808:	10005926 	beq	r2,zero,c970 <__subdf3+0x214>
    c80c:	84000044 	addi	r16,r16,1
    c810:	0081ffc4 	movi	r2,2047
    c814:	8080be26 	beq	r16,r2,cb10 <__subdf3+0x3b4>
    c818:	017fe034 	movhi	r5,65408
    c81c:	297fffc4 	addi	r5,r5,-1
    c820:	1946703a 	and	r3,r3,r5
    c824:	1804977a 	slli	r2,r3,29
    c828:	1806927a 	slli	r3,r3,9
    c82c:	8822d0fa 	srli	r17,r17,3
    c830:	8401ffcc 	andi	r16,r16,2047
    c834:	180ad33a 	srli	r5,r3,12
    c838:	9100004c 	andi	r4,r18,1
    c83c:	1444b03a 	or	r2,r2,r17
    c840:	80c1ffcc 	andi	r3,r16,2047
    c844:	1820953a 	slli	r16,r3,20
    c848:	20c03fcc 	andi	r3,r4,255
    c84c:	180897fa 	slli	r4,r3,31
    c850:	00c00434 	movhi	r3,16
    c854:	18ffffc4 	addi	r3,r3,-1
    c858:	28c6703a 	and	r3,r5,r3
    c85c:	1c06b03a 	or	r3,r3,r16
    c860:	1906b03a 	or	r3,r3,r4
    c864:	dfc00417 	ldw	ra,16(sp)
    c868:	dcc00317 	ldw	r19,12(sp)
    c86c:	dc800217 	ldw	r18,8(sp)
    c870:	dc400117 	ldw	r17,4(sp)
    c874:	dc000017 	ldw	r16,0(sp)
    c878:	dec00504 	addi	sp,sp,20
    c87c:	f800283a 	ret
    c880:	0101ffc4 	movi	r4,2047
    c884:	813fd626 	beq	r16,r4,c7e0 <__alt_data_end+0xfffec7e0>
    c888:	29402034 	orhi	r5,r5,128
    c88c:	01000e04 	movi	r4,56
    c890:	2080a316 	blt	r4,r2,cb20 <__subdf3+0x3c4>
    c894:	010007c4 	movi	r4,31
    c898:	2080c616 	blt	r4,r2,cbb4 <__subdf3+0x458>
    c89c:	01000804 	movi	r4,32
    c8a0:	2089c83a 	sub	r4,r4,r2
    c8a4:	2910983a 	sll	r8,r5,r4
    c8a8:	308ed83a 	srl	r7,r6,r2
    c8ac:	3108983a 	sll	r4,r6,r4
    c8b0:	2884d83a 	srl	r2,r5,r2
    c8b4:	41ccb03a 	or	r6,r8,r7
    c8b8:	2008c03a 	cmpne	r4,r4,zero
    c8bc:	310cb03a 	or	r6,r6,r4
    c8c0:	898dc83a 	sub	r6,r17,r6
    c8c4:	89a3803a 	cmpltu	r17,r17,r6
    c8c8:	1887c83a 	sub	r3,r3,r2
    c8cc:	1c47c83a 	sub	r3,r3,r17
    c8d0:	3023883a 	mov	r17,r6
    c8d4:	1880202c 	andhi	r2,r3,128
    c8d8:	10002326 	beq	r2,zero,c968 <__subdf3+0x20c>
    c8dc:	04c02034 	movhi	r19,128
    c8e0:	9cffffc4 	addi	r19,r19,-1
    c8e4:	1ce6703a 	and	r19,r3,r19
    c8e8:	98007a26 	beq	r19,zero,cad4 <__subdf3+0x378>
    c8ec:	9809883a 	mov	r4,r19
    c8f0:	000d25c0 	call	d25c <__clzsi2>
    c8f4:	113ffe04 	addi	r4,r2,-8
    c8f8:	00c007c4 	movi	r3,31
    c8fc:	19007b16 	blt	r3,r4,caec <__subdf3+0x390>
    c900:	00800804 	movi	r2,32
    c904:	1105c83a 	sub	r2,r2,r4
    c908:	8884d83a 	srl	r2,r17,r2
    c90c:	9906983a 	sll	r3,r19,r4
    c910:	8922983a 	sll	r17,r17,r4
    c914:	10c4b03a 	or	r2,r2,r3
    c918:	24007816 	blt	r4,r16,cafc <__subdf3+0x3a0>
    c91c:	2421c83a 	sub	r16,r4,r16
    c920:	80c00044 	addi	r3,r16,1
    c924:	010007c4 	movi	r4,31
    c928:	20c09516 	blt	r4,r3,cb80 <__subdf3+0x424>
    c92c:	01400804 	movi	r5,32
    c930:	28cbc83a 	sub	r5,r5,r3
    c934:	88c8d83a 	srl	r4,r17,r3
    c938:	8962983a 	sll	r17,r17,r5
    c93c:	114a983a 	sll	r5,r2,r5
    c940:	10c6d83a 	srl	r3,r2,r3
    c944:	8804c03a 	cmpne	r2,r17,zero
    c948:	290ab03a 	or	r5,r5,r4
    c94c:	28a2b03a 	or	r17,r5,r2
    c950:	0021883a 	mov	r16,zero
    c954:	003fa206 	br	c7e0 <__alt_data_end+0xfffec7e0>
    c958:	2090b03a 	or	r8,r4,r2
    c95c:	40018e26 	beq	r8,zero,cf98 <__subdf3+0x83c>
    c960:	1007883a 	mov	r3,r2
    c964:	2023883a 	mov	r17,r4
    c968:	888001cc 	andi	r2,r17,7
    c96c:	103f9e1e 	bne	r2,zero,c7e8 <__alt_data_end+0xfffec7e8>
    c970:	1804977a 	slli	r2,r3,29
    c974:	8822d0fa 	srli	r17,r17,3
    c978:	1810d0fa 	srli	r8,r3,3
    c97c:	9100004c 	andi	r4,r18,1
    c980:	1444b03a 	or	r2,r2,r17
    c984:	00c1ffc4 	movi	r3,2047
    c988:	80c02826 	beq	r16,r3,ca2c <__subdf3+0x2d0>
    c98c:	01400434 	movhi	r5,16
    c990:	297fffc4 	addi	r5,r5,-1
    c994:	80e0703a 	and	r16,r16,r3
    c998:	414a703a 	and	r5,r8,r5
    c99c:	003fa806 	br	c840 <__alt_data_end+0xfffec840>
    c9a0:	0080630e 	bge	zero,r2,cb30 <__subdf3+0x3d4>
    c9a4:	48003026 	beq	r9,zero,ca68 <__subdf3+0x30c>
    c9a8:	0101ffc4 	movi	r4,2047
    c9ac:	813f8c26 	beq	r16,r4,c7e0 <__alt_data_end+0xfffec7e0>
    c9b0:	29402034 	orhi	r5,r5,128
    c9b4:	01000e04 	movi	r4,56
    c9b8:	2080a90e 	bge	r4,r2,cc60 <__subdf3+0x504>
    c9bc:	298cb03a 	or	r6,r5,r6
    c9c0:	3012c03a 	cmpne	r9,r6,zero
    c9c4:	0005883a 	mov	r2,zero
    c9c8:	4c53883a 	add	r9,r9,r17
    c9cc:	4c63803a 	cmpltu	r17,r9,r17
    c9d0:	10c7883a 	add	r3,r2,r3
    c9d4:	88c7883a 	add	r3,r17,r3
    c9d8:	4823883a 	mov	r17,r9
    c9dc:	1880202c 	andhi	r2,r3,128
    c9e0:	1000d026 	beq	r2,zero,cd24 <__subdf3+0x5c8>
    c9e4:	84000044 	addi	r16,r16,1
    c9e8:	0081ffc4 	movi	r2,2047
    c9ec:	8080fe26 	beq	r16,r2,cde8 <__subdf3+0x68c>
    c9f0:	00bfe034 	movhi	r2,65408
    c9f4:	10bfffc4 	addi	r2,r2,-1
    c9f8:	1886703a 	and	r3,r3,r2
    c9fc:	880ad07a 	srli	r5,r17,1
    ca00:	180497fa 	slli	r2,r3,31
    ca04:	8900004c 	andi	r4,r17,1
    ca08:	2922b03a 	or	r17,r5,r4
    ca0c:	1806d07a 	srli	r3,r3,1
    ca10:	1462b03a 	or	r17,r2,r17
    ca14:	3825883a 	mov	r18,r7
    ca18:	003f7106 	br	c7e0 <__alt_data_end+0xfffec7e0>
    ca1c:	2984b03a 	or	r2,r5,r6
    ca20:	103f6826 	beq	r2,zero,c7c4 <__alt_data_end+0xfffec7c4>
    ca24:	39c03fcc 	andi	r7,r7,255
    ca28:	003f6706 	br	c7c8 <__alt_data_end+0xfffec7c8>
    ca2c:	4086b03a 	or	r3,r8,r2
    ca30:	18015226 	beq	r3,zero,cf7c <__subdf3+0x820>
    ca34:	00c00434 	movhi	r3,16
    ca38:	41400234 	orhi	r5,r8,8
    ca3c:	18ffffc4 	addi	r3,r3,-1
    ca40:	28ca703a 	and	r5,r5,r3
    ca44:	003f7e06 	br	c840 <__alt_data_end+0xfffec840>
    ca48:	10bfffc4 	addi	r2,r2,-1
    ca4c:	1000491e 	bne	r2,zero,cb74 <__subdf3+0x418>
    ca50:	898fc83a 	sub	r7,r17,r6
    ca54:	89e3803a 	cmpltu	r17,r17,r7
    ca58:	1947c83a 	sub	r3,r3,r5
    ca5c:	1c47c83a 	sub	r3,r3,r17
    ca60:	3823883a 	mov	r17,r7
    ca64:	003f9b06 	br	c8d4 <__alt_data_end+0xfffec8d4>
    ca68:	2988b03a 	or	r4,r5,r6
    ca6c:	203f5c26 	beq	r4,zero,c7e0 <__alt_data_end+0xfffec7e0>
    ca70:	10bfffc4 	addi	r2,r2,-1
    ca74:	1000931e 	bne	r2,zero,ccc4 <__subdf3+0x568>
    ca78:	898d883a 	add	r6,r17,r6
    ca7c:	3463803a 	cmpltu	r17,r6,r17
    ca80:	1947883a 	add	r3,r3,r5
    ca84:	88c7883a 	add	r3,r17,r3
    ca88:	3023883a 	mov	r17,r6
    ca8c:	003fd306 	br	c9dc <__alt_data_end+0xfffec9dc>
    ca90:	1000541e 	bne	r2,zero,cbe4 <__subdf3+0x488>
    ca94:	80800044 	addi	r2,r16,1
    ca98:	1081ffcc 	andi	r2,r2,2047
    ca9c:	01000044 	movi	r4,1
    caa0:	2080a20e 	bge	r4,r2,cd2c <__subdf3+0x5d0>
    caa4:	8989c83a 	sub	r4,r17,r6
    caa8:	8905803a 	cmpltu	r2,r17,r4
    caac:	1967c83a 	sub	r19,r3,r5
    cab0:	98a7c83a 	sub	r19,r19,r2
    cab4:	9880202c 	andhi	r2,r19,128
    cab8:	10006326 	beq	r2,zero,cc48 <__subdf3+0x4ec>
    cabc:	3463c83a 	sub	r17,r6,r17
    cac0:	28c7c83a 	sub	r3,r5,r3
    cac4:	344d803a 	cmpltu	r6,r6,r17
    cac8:	19a7c83a 	sub	r19,r3,r6
    cacc:	3825883a 	mov	r18,r7
    cad0:	983f861e 	bne	r19,zero,c8ec <__alt_data_end+0xfffec8ec>
    cad4:	8809883a 	mov	r4,r17
    cad8:	000d25c0 	call	d25c <__clzsi2>
    cadc:	10800804 	addi	r2,r2,32
    cae0:	113ffe04 	addi	r4,r2,-8
    cae4:	00c007c4 	movi	r3,31
    cae8:	193f850e 	bge	r3,r4,c900 <__alt_data_end+0xfffec900>
    caec:	10bff604 	addi	r2,r2,-40
    caf0:	8884983a 	sll	r2,r17,r2
    caf4:	0023883a 	mov	r17,zero
    caf8:	243f880e 	bge	r4,r16,c91c <__alt_data_end+0xfffec91c>
    cafc:	00ffe034 	movhi	r3,65408
    cb00:	18ffffc4 	addi	r3,r3,-1
    cb04:	8121c83a 	sub	r16,r16,r4
    cb08:	10c6703a 	and	r3,r2,r3
    cb0c:	003f3406 	br	c7e0 <__alt_data_end+0xfffec7e0>
    cb10:	9100004c 	andi	r4,r18,1
    cb14:	000b883a 	mov	r5,zero
    cb18:	0005883a 	mov	r2,zero
    cb1c:	003f4806 	br	c840 <__alt_data_end+0xfffec840>
    cb20:	298cb03a 	or	r6,r5,r6
    cb24:	300cc03a 	cmpne	r6,r6,zero
    cb28:	0005883a 	mov	r2,zero
    cb2c:	003f6406 	br	c8c0 <__alt_data_end+0xfffec8c0>
    cb30:	10009a1e 	bne	r2,zero,cd9c <__subdf3+0x640>
    cb34:	82400044 	addi	r9,r16,1
    cb38:	4881ffcc 	andi	r2,r9,2047
    cb3c:	02800044 	movi	r10,1
    cb40:	5080670e 	bge	r10,r2,cce0 <__subdf3+0x584>
    cb44:	0081ffc4 	movi	r2,2047
    cb48:	4880af26 	beq	r9,r2,ce08 <__subdf3+0x6ac>
    cb4c:	898d883a 	add	r6,r17,r6
    cb50:	1945883a 	add	r2,r3,r5
    cb54:	3447803a 	cmpltu	r3,r6,r17
    cb58:	1887883a 	add	r3,r3,r2
    cb5c:	182297fa 	slli	r17,r3,31
    cb60:	300cd07a 	srli	r6,r6,1
    cb64:	1806d07a 	srli	r3,r3,1
    cb68:	4821883a 	mov	r16,r9
    cb6c:	89a2b03a 	or	r17,r17,r6
    cb70:	003f1b06 	br	c7e0 <__alt_data_end+0xfffec7e0>
    cb74:	0101ffc4 	movi	r4,2047
    cb78:	813f441e 	bne	r16,r4,c88c <__alt_data_end+0xfffec88c>
    cb7c:	003f1806 	br	c7e0 <__alt_data_end+0xfffec7e0>
    cb80:	843ff844 	addi	r16,r16,-31
    cb84:	01400804 	movi	r5,32
    cb88:	1408d83a 	srl	r4,r2,r16
    cb8c:	19405026 	beq	r3,r5,ccd0 <__subdf3+0x574>
    cb90:	01401004 	movi	r5,64
    cb94:	28c7c83a 	sub	r3,r5,r3
    cb98:	10c4983a 	sll	r2,r2,r3
    cb9c:	88a2b03a 	or	r17,r17,r2
    cba0:	8822c03a 	cmpne	r17,r17,zero
    cba4:	2462b03a 	or	r17,r4,r17
    cba8:	0007883a 	mov	r3,zero
    cbac:	0021883a 	mov	r16,zero
    cbb0:	003f6d06 	br	c968 <__alt_data_end+0xfffec968>
    cbb4:	11fff804 	addi	r7,r2,-32
    cbb8:	01000804 	movi	r4,32
    cbbc:	29ced83a 	srl	r7,r5,r7
    cbc0:	11004526 	beq	r2,r4,ccd8 <__subdf3+0x57c>
    cbc4:	01001004 	movi	r4,64
    cbc8:	2089c83a 	sub	r4,r4,r2
    cbcc:	2904983a 	sll	r2,r5,r4
    cbd0:	118cb03a 	or	r6,r2,r6
    cbd4:	300cc03a 	cmpne	r6,r6,zero
    cbd8:	398cb03a 	or	r6,r7,r6
    cbdc:	0005883a 	mov	r2,zero
    cbe0:	003f3706 	br	c8c0 <__alt_data_end+0xfffec8c0>
    cbe4:	80002a26 	beq	r16,zero,cc90 <__subdf3+0x534>
    cbe8:	0101ffc4 	movi	r4,2047
    cbec:	49006626 	beq	r9,r4,cd88 <__subdf3+0x62c>
    cbf0:	0085c83a 	sub	r2,zero,r2
    cbf4:	18c02034 	orhi	r3,r3,128
    cbf8:	01000e04 	movi	r4,56
    cbfc:	20807e16 	blt	r4,r2,cdf8 <__subdf3+0x69c>
    cc00:	010007c4 	movi	r4,31
    cc04:	2080e716 	blt	r4,r2,cfa4 <__subdf3+0x848>
    cc08:	01000804 	movi	r4,32
    cc0c:	2089c83a 	sub	r4,r4,r2
    cc10:	1914983a 	sll	r10,r3,r4
    cc14:	8890d83a 	srl	r8,r17,r2
    cc18:	8908983a 	sll	r4,r17,r4
    cc1c:	1884d83a 	srl	r2,r3,r2
    cc20:	5222b03a 	or	r17,r10,r8
    cc24:	2006c03a 	cmpne	r3,r4,zero
    cc28:	88e2b03a 	or	r17,r17,r3
    cc2c:	3463c83a 	sub	r17,r6,r17
    cc30:	2885c83a 	sub	r2,r5,r2
    cc34:	344d803a 	cmpltu	r6,r6,r17
    cc38:	1187c83a 	sub	r3,r2,r6
    cc3c:	4821883a 	mov	r16,r9
    cc40:	3825883a 	mov	r18,r7
    cc44:	003f2306 	br	c8d4 <__alt_data_end+0xfffec8d4>
    cc48:	24d0b03a 	or	r8,r4,r19
    cc4c:	40001b1e 	bne	r8,zero,ccbc <__subdf3+0x560>
    cc50:	0005883a 	mov	r2,zero
    cc54:	0009883a 	mov	r4,zero
    cc58:	0021883a 	mov	r16,zero
    cc5c:	003f4906 	br	c984 <__alt_data_end+0xfffec984>
    cc60:	010007c4 	movi	r4,31
    cc64:	20803a16 	blt	r4,r2,cd50 <__subdf3+0x5f4>
    cc68:	01000804 	movi	r4,32
    cc6c:	2089c83a 	sub	r4,r4,r2
    cc70:	2912983a 	sll	r9,r5,r4
    cc74:	3090d83a 	srl	r8,r6,r2
    cc78:	3108983a 	sll	r4,r6,r4
    cc7c:	2884d83a 	srl	r2,r5,r2
    cc80:	4a12b03a 	or	r9,r9,r8
    cc84:	2008c03a 	cmpne	r4,r4,zero
    cc88:	4912b03a 	or	r9,r9,r4
    cc8c:	003f4e06 	br	c9c8 <__alt_data_end+0xfffec9c8>
    cc90:	1c48b03a 	or	r4,r3,r17
    cc94:	20003c26 	beq	r4,zero,cd88 <__subdf3+0x62c>
    cc98:	0084303a 	nor	r2,zero,r2
    cc9c:	1000381e 	bne	r2,zero,cd80 <__subdf3+0x624>
    cca0:	3463c83a 	sub	r17,r6,r17
    cca4:	28c5c83a 	sub	r2,r5,r3
    cca8:	344d803a 	cmpltu	r6,r6,r17
    ccac:	1187c83a 	sub	r3,r2,r6
    ccb0:	4821883a 	mov	r16,r9
    ccb4:	3825883a 	mov	r18,r7
    ccb8:	003f0606 	br	c8d4 <__alt_data_end+0xfffec8d4>
    ccbc:	2023883a 	mov	r17,r4
    ccc0:	003f0906 	br	c8e8 <__alt_data_end+0xfffec8e8>
    ccc4:	0101ffc4 	movi	r4,2047
    ccc8:	813f3a1e 	bne	r16,r4,c9b4 <__alt_data_end+0xfffec9b4>
    cccc:	003ec406 	br	c7e0 <__alt_data_end+0xfffec7e0>
    ccd0:	0005883a 	mov	r2,zero
    ccd4:	003fb106 	br	cb9c <__alt_data_end+0xfffecb9c>
    ccd8:	0005883a 	mov	r2,zero
    ccdc:	003fbc06 	br	cbd0 <__alt_data_end+0xfffecbd0>
    cce0:	1c44b03a 	or	r2,r3,r17
    cce4:	80008e1e 	bne	r16,zero,cf20 <__subdf3+0x7c4>
    cce8:	1000c826 	beq	r2,zero,d00c <__subdf3+0x8b0>
    ccec:	2984b03a 	or	r2,r5,r6
    ccf0:	103ebb26 	beq	r2,zero,c7e0 <__alt_data_end+0xfffec7e0>
    ccf4:	8989883a 	add	r4,r17,r6
    ccf8:	1945883a 	add	r2,r3,r5
    ccfc:	2447803a 	cmpltu	r3,r4,r17
    cd00:	1887883a 	add	r3,r3,r2
    cd04:	1880202c 	andhi	r2,r3,128
    cd08:	2023883a 	mov	r17,r4
    cd0c:	103f1626 	beq	r2,zero,c968 <__alt_data_end+0xfffec968>
    cd10:	00bfe034 	movhi	r2,65408
    cd14:	10bfffc4 	addi	r2,r2,-1
    cd18:	5021883a 	mov	r16,r10
    cd1c:	1886703a 	and	r3,r3,r2
    cd20:	003eaf06 	br	c7e0 <__alt_data_end+0xfffec7e0>
    cd24:	3825883a 	mov	r18,r7
    cd28:	003f0f06 	br	c968 <__alt_data_end+0xfffec968>
    cd2c:	1c44b03a 	or	r2,r3,r17
    cd30:	8000251e 	bne	r16,zero,cdc8 <__subdf3+0x66c>
    cd34:	1000661e 	bne	r2,zero,ced0 <__subdf3+0x774>
    cd38:	2990b03a 	or	r8,r5,r6
    cd3c:	40009626 	beq	r8,zero,cf98 <__subdf3+0x83c>
    cd40:	2807883a 	mov	r3,r5
    cd44:	3023883a 	mov	r17,r6
    cd48:	3825883a 	mov	r18,r7
    cd4c:	003ea406 	br	c7e0 <__alt_data_end+0xfffec7e0>
    cd50:	127ff804 	addi	r9,r2,-32
    cd54:	01000804 	movi	r4,32
    cd58:	2a52d83a 	srl	r9,r5,r9
    cd5c:	11008c26 	beq	r2,r4,cf90 <__subdf3+0x834>
    cd60:	01001004 	movi	r4,64
    cd64:	2085c83a 	sub	r2,r4,r2
    cd68:	2884983a 	sll	r2,r5,r2
    cd6c:	118cb03a 	or	r6,r2,r6
    cd70:	300cc03a 	cmpne	r6,r6,zero
    cd74:	4992b03a 	or	r9,r9,r6
    cd78:	0005883a 	mov	r2,zero
    cd7c:	003f1206 	br	c9c8 <__alt_data_end+0xfffec9c8>
    cd80:	0101ffc4 	movi	r4,2047
    cd84:	493f9c1e 	bne	r9,r4,cbf8 <__alt_data_end+0xfffecbf8>
    cd88:	2807883a 	mov	r3,r5
    cd8c:	3023883a 	mov	r17,r6
    cd90:	4821883a 	mov	r16,r9
    cd94:	3825883a 	mov	r18,r7
    cd98:	003e9106 	br	c7e0 <__alt_data_end+0xfffec7e0>
    cd9c:	80001f1e 	bne	r16,zero,ce1c <__subdf3+0x6c0>
    cda0:	1c48b03a 	or	r4,r3,r17
    cda4:	20005a26 	beq	r4,zero,cf10 <__subdf3+0x7b4>
    cda8:	0084303a 	nor	r2,zero,r2
    cdac:	1000561e 	bne	r2,zero,cf08 <__subdf3+0x7ac>
    cdb0:	89a3883a 	add	r17,r17,r6
    cdb4:	1945883a 	add	r2,r3,r5
    cdb8:	898d803a 	cmpltu	r6,r17,r6
    cdbc:	3087883a 	add	r3,r6,r2
    cdc0:	4821883a 	mov	r16,r9
    cdc4:	003f0506 	br	c9dc <__alt_data_end+0xfffec9dc>
    cdc8:	10002b1e 	bne	r2,zero,ce78 <__subdf3+0x71c>
    cdcc:	2984b03a 	or	r2,r5,r6
    cdd0:	10008026 	beq	r2,zero,cfd4 <__subdf3+0x878>
    cdd4:	2807883a 	mov	r3,r5
    cdd8:	3023883a 	mov	r17,r6
    cddc:	3825883a 	mov	r18,r7
    cde0:	0401ffc4 	movi	r16,2047
    cde4:	003e7e06 	br	c7e0 <__alt_data_end+0xfffec7e0>
    cde8:	3809883a 	mov	r4,r7
    cdec:	0011883a 	mov	r8,zero
    cdf0:	0005883a 	mov	r2,zero
    cdf4:	003ee306 	br	c984 <__alt_data_end+0xfffec984>
    cdf8:	1c62b03a 	or	r17,r3,r17
    cdfc:	8822c03a 	cmpne	r17,r17,zero
    ce00:	0005883a 	mov	r2,zero
    ce04:	003f8906 	br	cc2c <__alt_data_end+0xfffecc2c>
    ce08:	3809883a 	mov	r4,r7
    ce0c:	4821883a 	mov	r16,r9
    ce10:	0011883a 	mov	r8,zero
    ce14:	0005883a 	mov	r2,zero
    ce18:	003eda06 	br	c984 <__alt_data_end+0xfffec984>
    ce1c:	0101ffc4 	movi	r4,2047
    ce20:	49003b26 	beq	r9,r4,cf10 <__subdf3+0x7b4>
    ce24:	0085c83a 	sub	r2,zero,r2
    ce28:	18c02034 	orhi	r3,r3,128
    ce2c:	01000e04 	movi	r4,56
    ce30:	20806e16 	blt	r4,r2,cfec <__subdf3+0x890>
    ce34:	010007c4 	movi	r4,31
    ce38:	20807716 	blt	r4,r2,d018 <__subdf3+0x8bc>
    ce3c:	01000804 	movi	r4,32
    ce40:	2089c83a 	sub	r4,r4,r2
    ce44:	1914983a 	sll	r10,r3,r4
    ce48:	8890d83a 	srl	r8,r17,r2
    ce4c:	8908983a 	sll	r4,r17,r4
    ce50:	1884d83a 	srl	r2,r3,r2
    ce54:	5222b03a 	or	r17,r10,r8
    ce58:	2006c03a 	cmpne	r3,r4,zero
    ce5c:	88e2b03a 	or	r17,r17,r3
    ce60:	89a3883a 	add	r17,r17,r6
    ce64:	1145883a 	add	r2,r2,r5
    ce68:	898d803a 	cmpltu	r6,r17,r6
    ce6c:	3087883a 	add	r3,r6,r2
    ce70:	4821883a 	mov	r16,r9
    ce74:	003ed906 	br	c9dc <__alt_data_end+0xfffec9dc>
    ce78:	2984b03a 	or	r2,r5,r6
    ce7c:	10004226 	beq	r2,zero,cf88 <__subdf3+0x82c>
    ce80:	1808d0fa 	srli	r4,r3,3
    ce84:	8822d0fa 	srli	r17,r17,3
    ce88:	1806977a 	slli	r3,r3,29
    ce8c:	2080022c 	andhi	r2,r4,8
    ce90:	1c62b03a 	or	r17,r3,r17
    ce94:	10000826 	beq	r2,zero,ceb8 <__subdf3+0x75c>
    ce98:	2812d0fa 	srli	r9,r5,3
    ce9c:	4880022c 	andhi	r2,r9,8
    cea0:	1000051e 	bne	r2,zero,ceb8 <__subdf3+0x75c>
    cea4:	300cd0fa 	srli	r6,r6,3
    cea8:	2804977a 	slli	r2,r5,29
    ceac:	4809883a 	mov	r4,r9
    ceb0:	3825883a 	mov	r18,r7
    ceb4:	11a2b03a 	or	r17,r2,r6
    ceb8:	8806d77a 	srli	r3,r17,29
    cebc:	200890fa 	slli	r4,r4,3
    cec0:	882290fa 	slli	r17,r17,3
    cec4:	0401ffc4 	movi	r16,2047
    cec8:	1906b03a 	or	r3,r3,r4
    cecc:	003e4406 	br	c7e0 <__alt_data_end+0xfffec7e0>
    ced0:	2984b03a 	or	r2,r5,r6
    ced4:	103e4226 	beq	r2,zero,c7e0 <__alt_data_end+0xfffec7e0>
    ced8:	8989c83a 	sub	r4,r17,r6
    cedc:	8911803a 	cmpltu	r8,r17,r4
    cee0:	1945c83a 	sub	r2,r3,r5
    cee4:	1205c83a 	sub	r2,r2,r8
    cee8:	1200202c 	andhi	r8,r2,128
    ceec:	403e9a26 	beq	r8,zero,c958 <__alt_data_end+0xfffec958>
    cef0:	3463c83a 	sub	r17,r6,r17
    cef4:	28c5c83a 	sub	r2,r5,r3
    cef8:	344d803a 	cmpltu	r6,r6,r17
    cefc:	1187c83a 	sub	r3,r2,r6
    cf00:	3825883a 	mov	r18,r7
    cf04:	003e3606 	br	c7e0 <__alt_data_end+0xfffec7e0>
    cf08:	0101ffc4 	movi	r4,2047
    cf0c:	493fc71e 	bne	r9,r4,ce2c <__alt_data_end+0xfffece2c>
    cf10:	2807883a 	mov	r3,r5
    cf14:	3023883a 	mov	r17,r6
    cf18:	4821883a 	mov	r16,r9
    cf1c:	003e3006 	br	c7e0 <__alt_data_end+0xfffec7e0>
    cf20:	10003626 	beq	r2,zero,cffc <__subdf3+0x8a0>
    cf24:	2984b03a 	or	r2,r5,r6
    cf28:	10001726 	beq	r2,zero,cf88 <__subdf3+0x82c>
    cf2c:	1808d0fa 	srli	r4,r3,3
    cf30:	8822d0fa 	srli	r17,r17,3
    cf34:	1806977a 	slli	r3,r3,29
    cf38:	2080022c 	andhi	r2,r4,8
    cf3c:	1c62b03a 	or	r17,r3,r17
    cf40:	10000726 	beq	r2,zero,cf60 <__subdf3+0x804>
    cf44:	2812d0fa 	srli	r9,r5,3
    cf48:	4880022c 	andhi	r2,r9,8
    cf4c:	1000041e 	bne	r2,zero,cf60 <__subdf3+0x804>
    cf50:	300cd0fa 	srli	r6,r6,3
    cf54:	2804977a 	slli	r2,r5,29
    cf58:	4809883a 	mov	r4,r9
    cf5c:	11a2b03a 	or	r17,r2,r6
    cf60:	8806d77a 	srli	r3,r17,29
    cf64:	200890fa 	slli	r4,r4,3
    cf68:	882290fa 	slli	r17,r17,3
    cf6c:	3825883a 	mov	r18,r7
    cf70:	1906b03a 	or	r3,r3,r4
    cf74:	0401ffc4 	movi	r16,2047
    cf78:	003e1906 	br	c7e0 <__alt_data_end+0xfffec7e0>
    cf7c:	000b883a 	mov	r5,zero
    cf80:	0005883a 	mov	r2,zero
    cf84:	003e2e06 	br	c840 <__alt_data_end+0xfffec840>
    cf88:	0401ffc4 	movi	r16,2047
    cf8c:	003e1406 	br	c7e0 <__alt_data_end+0xfffec7e0>
    cf90:	0005883a 	mov	r2,zero
    cf94:	003f7506 	br	cd6c <__alt_data_end+0xfffecd6c>
    cf98:	0005883a 	mov	r2,zero
    cf9c:	0009883a 	mov	r4,zero
    cfa0:	003e7806 	br	c984 <__alt_data_end+0xfffec984>
    cfa4:	123ff804 	addi	r8,r2,-32
    cfa8:	01000804 	movi	r4,32
    cfac:	1a10d83a 	srl	r8,r3,r8
    cfb0:	11002526 	beq	r2,r4,d048 <__subdf3+0x8ec>
    cfb4:	01001004 	movi	r4,64
    cfb8:	2085c83a 	sub	r2,r4,r2
    cfbc:	1884983a 	sll	r2,r3,r2
    cfc0:	1444b03a 	or	r2,r2,r17
    cfc4:	1004c03a 	cmpne	r2,r2,zero
    cfc8:	40a2b03a 	or	r17,r8,r2
    cfcc:	0005883a 	mov	r2,zero
    cfd0:	003f1606 	br	cc2c <__alt_data_end+0xfffecc2c>
    cfd4:	02000434 	movhi	r8,16
    cfd8:	0009883a 	mov	r4,zero
    cfdc:	423fffc4 	addi	r8,r8,-1
    cfe0:	00bfffc4 	movi	r2,-1
    cfe4:	0401ffc4 	movi	r16,2047
    cfe8:	003e6606 	br	c984 <__alt_data_end+0xfffec984>
    cfec:	1c62b03a 	or	r17,r3,r17
    cff0:	8822c03a 	cmpne	r17,r17,zero
    cff4:	0005883a 	mov	r2,zero
    cff8:	003f9906 	br	ce60 <__alt_data_end+0xfffece60>
    cffc:	2807883a 	mov	r3,r5
    d000:	3023883a 	mov	r17,r6
    d004:	0401ffc4 	movi	r16,2047
    d008:	003df506 	br	c7e0 <__alt_data_end+0xfffec7e0>
    d00c:	2807883a 	mov	r3,r5
    d010:	3023883a 	mov	r17,r6
    d014:	003df206 	br	c7e0 <__alt_data_end+0xfffec7e0>
    d018:	123ff804 	addi	r8,r2,-32
    d01c:	01000804 	movi	r4,32
    d020:	1a10d83a 	srl	r8,r3,r8
    d024:	11000a26 	beq	r2,r4,d050 <__subdf3+0x8f4>
    d028:	01001004 	movi	r4,64
    d02c:	2085c83a 	sub	r2,r4,r2
    d030:	1884983a 	sll	r2,r3,r2
    d034:	1444b03a 	or	r2,r2,r17
    d038:	1004c03a 	cmpne	r2,r2,zero
    d03c:	40a2b03a 	or	r17,r8,r2
    d040:	0005883a 	mov	r2,zero
    d044:	003f8606 	br	ce60 <__alt_data_end+0xfffece60>
    d048:	0005883a 	mov	r2,zero
    d04c:	003fdc06 	br	cfc0 <__alt_data_end+0xfffecfc0>
    d050:	0005883a 	mov	r2,zero
    d054:	003ff706 	br	d034 <__alt_data_end+0xfffed034>

0000d058 <__fixdfsi>:
    d058:	280cd53a 	srli	r6,r5,20
    d05c:	00c00434 	movhi	r3,16
    d060:	18ffffc4 	addi	r3,r3,-1
    d064:	3181ffcc 	andi	r6,r6,2047
    d068:	01c0ff84 	movi	r7,1022
    d06c:	28c6703a 	and	r3,r5,r3
    d070:	280ad7fa 	srli	r5,r5,31
    d074:	3980120e 	bge	r7,r6,d0c0 <__fixdfsi+0x68>
    d078:	00810744 	movi	r2,1053
    d07c:	11800c16 	blt	r2,r6,d0b0 <__fixdfsi+0x58>
    d080:	00810cc4 	movi	r2,1075
    d084:	1185c83a 	sub	r2,r2,r6
    d088:	01c007c4 	movi	r7,31
    d08c:	18c00434 	orhi	r3,r3,16
    d090:	38800d16 	blt	r7,r2,d0c8 <__fixdfsi+0x70>
    d094:	31befb44 	addi	r6,r6,-1043
    d098:	2084d83a 	srl	r2,r4,r2
    d09c:	1986983a 	sll	r3,r3,r6
    d0a0:	1884b03a 	or	r2,r3,r2
    d0a4:	28000726 	beq	r5,zero,d0c4 <__fixdfsi+0x6c>
    d0a8:	0085c83a 	sub	r2,zero,r2
    d0ac:	f800283a 	ret
    d0b0:	00a00034 	movhi	r2,32768
    d0b4:	10bfffc4 	addi	r2,r2,-1
    d0b8:	2885883a 	add	r2,r5,r2
    d0bc:	f800283a 	ret
    d0c0:	0005883a 	mov	r2,zero
    d0c4:	f800283a 	ret
    d0c8:	008104c4 	movi	r2,1043
    d0cc:	1185c83a 	sub	r2,r2,r6
    d0d0:	1884d83a 	srl	r2,r3,r2
    d0d4:	003ff306 	br	d0a4 <__alt_data_end+0xfffed0a4>

0000d0d8 <__floatsidf>:
    d0d8:	defffd04 	addi	sp,sp,-12
    d0dc:	dfc00215 	stw	ra,8(sp)
    d0e0:	dc400115 	stw	r17,4(sp)
    d0e4:	dc000015 	stw	r16,0(sp)
    d0e8:	20002b26 	beq	r4,zero,d198 <__floatsidf+0xc0>
    d0ec:	2023883a 	mov	r17,r4
    d0f0:	2020d7fa 	srli	r16,r4,31
    d0f4:	20002d16 	blt	r4,zero,d1ac <__floatsidf+0xd4>
    d0f8:	8809883a 	mov	r4,r17
    d0fc:	000d25c0 	call	d25c <__clzsi2>
    d100:	01410784 	movi	r5,1054
    d104:	288bc83a 	sub	r5,r5,r2
    d108:	01010cc4 	movi	r4,1075
    d10c:	2149c83a 	sub	r4,r4,r5
    d110:	00c007c4 	movi	r3,31
    d114:	1900160e 	bge	r3,r4,d170 <__floatsidf+0x98>
    d118:	00c104c4 	movi	r3,1043
    d11c:	1947c83a 	sub	r3,r3,r5
    d120:	88c6983a 	sll	r3,r17,r3
    d124:	00800434 	movhi	r2,16
    d128:	10bfffc4 	addi	r2,r2,-1
    d12c:	1886703a 	and	r3,r3,r2
    d130:	2941ffcc 	andi	r5,r5,2047
    d134:	800d883a 	mov	r6,r16
    d138:	0005883a 	mov	r2,zero
    d13c:	280a953a 	slli	r5,r5,20
    d140:	31803fcc 	andi	r6,r6,255
    d144:	01000434 	movhi	r4,16
    d148:	300c97fa 	slli	r6,r6,31
    d14c:	213fffc4 	addi	r4,r4,-1
    d150:	1906703a 	and	r3,r3,r4
    d154:	1946b03a 	or	r3,r3,r5
    d158:	1986b03a 	or	r3,r3,r6
    d15c:	dfc00217 	ldw	ra,8(sp)
    d160:	dc400117 	ldw	r17,4(sp)
    d164:	dc000017 	ldw	r16,0(sp)
    d168:	dec00304 	addi	sp,sp,12
    d16c:	f800283a 	ret
    d170:	00c002c4 	movi	r3,11
    d174:	1887c83a 	sub	r3,r3,r2
    d178:	88c6d83a 	srl	r3,r17,r3
    d17c:	8904983a 	sll	r2,r17,r4
    d180:	01000434 	movhi	r4,16
    d184:	213fffc4 	addi	r4,r4,-1
    d188:	2941ffcc 	andi	r5,r5,2047
    d18c:	1906703a 	and	r3,r3,r4
    d190:	800d883a 	mov	r6,r16
    d194:	003fe906 	br	d13c <__alt_data_end+0xfffed13c>
    d198:	000d883a 	mov	r6,zero
    d19c:	000b883a 	mov	r5,zero
    d1a0:	0007883a 	mov	r3,zero
    d1a4:	0005883a 	mov	r2,zero
    d1a8:	003fe406 	br	d13c <__alt_data_end+0xfffed13c>
    d1ac:	0123c83a 	sub	r17,zero,r4
    d1b0:	003fd106 	br	d0f8 <__alt_data_end+0xfffed0f8>

0000d1b4 <__floatunsidf>:
    d1b4:	defffe04 	addi	sp,sp,-8
    d1b8:	dc000015 	stw	r16,0(sp)
    d1bc:	dfc00115 	stw	ra,4(sp)
    d1c0:	2021883a 	mov	r16,r4
    d1c4:	20002226 	beq	r4,zero,d250 <__floatunsidf+0x9c>
    d1c8:	000d25c0 	call	d25c <__clzsi2>
    d1cc:	01010784 	movi	r4,1054
    d1d0:	2089c83a 	sub	r4,r4,r2
    d1d4:	01810cc4 	movi	r6,1075
    d1d8:	310dc83a 	sub	r6,r6,r4
    d1dc:	00c007c4 	movi	r3,31
    d1e0:	1980120e 	bge	r3,r6,d22c <__floatunsidf+0x78>
    d1e4:	00c104c4 	movi	r3,1043
    d1e8:	1907c83a 	sub	r3,r3,r4
    d1ec:	80ca983a 	sll	r5,r16,r3
    d1f0:	00800434 	movhi	r2,16
    d1f4:	10bfffc4 	addi	r2,r2,-1
    d1f8:	2101ffcc 	andi	r4,r4,2047
    d1fc:	0021883a 	mov	r16,zero
    d200:	288a703a 	and	r5,r5,r2
    d204:	2008953a 	slli	r4,r4,20
    d208:	00c00434 	movhi	r3,16
    d20c:	18ffffc4 	addi	r3,r3,-1
    d210:	28c6703a 	and	r3,r5,r3
    d214:	8005883a 	mov	r2,r16
    d218:	1906b03a 	or	r3,r3,r4
    d21c:	dfc00117 	ldw	ra,4(sp)
    d220:	dc000017 	ldw	r16,0(sp)
    d224:	dec00204 	addi	sp,sp,8
    d228:	f800283a 	ret
    d22c:	00c002c4 	movi	r3,11
    d230:	188bc83a 	sub	r5,r3,r2
    d234:	814ad83a 	srl	r5,r16,r5
    d238:	00c00434 	movhi	r3,16
    d23c:	18ffffc4 	addi	r3,r3,-1
    d240:	81a0983a 	sll	r16,r16,r6
    d244:	2101ffcc 	andi	r4,r4,2047
    d248:	28ca703a 	and	r5,r5,r3
    d24c:	003fed06 	br	d204 <__alt_data_end+0xfffed204>
    d250:	0009883a 	mov	r4,zero
    d254:	000b883a 	mov	r5,zero
    d258:	003fea06 	br	d204 <__alt_data_end+0xfffed204>

0000d25c <__clzsi2>:
    d25c:	00bfffd4 	movui	r2,65535
    d260:	11000536 	bltu	r2,r4,d278 <__clzsi2+0x1c>
    d264:	00803fc4 	movi	r2,255
    d268:	11000f36 	bltu	r2,r4,d2a8 <__clzsi2+0x4c>
    d26c:	00800804 	movi	r2,32
    d270:	0007883a 	mov	r3,zero
    d274:	00000506 	br	d28c <__clzsi2+0x30>
    d278:	00804034 	movhi	r2,256
    d27c:	10bfffc4 	addi	r2,r2,-1
    d280:	11000c2e 	bgeu	r2,r4,d2b4 <__clzsi2+0x58>
    d284:	00800204 	movi	r2,8
    d288:	00c00604 	movi	r3,24
    d28c:	20c8d83a 	srl	r4,r4,r3
    d290:	00c00074 	movhi	r3,1
    d294:	18feab04 	addi	r3,r3,-1364
    d298:	1909883a 	add	r4,r3,r4
    d29c:	20c00003 	ldbu	r3,0(r4)
    d2a0:	10c5c83a 	sub	r2,r2,r3
    d2a4:	f800283a 	ret
    d2a8:	00800604 	movi	r2,24
    d2ac:	00c00204 	movi	r3,8
    d2b0:	003ff606 	br	d28c <__alt_data_end+0xfffed28c>
    d2b4:	00800404 	movi	r2,16
    d2b8:	1007883a 	mov	r3,r2
    d2bc:	003ff306 	br	d28c <__alt_data_end+0xfffed28c>

0000d2c0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d2c0:	defffe04 	addi	sp,sp,-8
    d2c4:	dfc00115 	stw	ra,4(sp)
    d2c8:	df000015 	stw	fp,0(sp)
    d2cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d2d0:	d0a00b17 	ldw	r2,-32724(gp)
    d2d4:	10000326 	beq	r2,zero,d2e4 <alt_get_errno+0x24>
    d2d8:	d0a00b17 	ldw	r2,-32724(gp)
    d2dc:	103ee83a 	callr	r2
    d2e0:	00000106 	br	d2e8 <alt_get_errno+0x28>
    d2e4:	d0a6d104 	addi	r2,gp,-25788
}
    d2e8:	e037883a 	mov	sp,fp
    d2ec:	dfc00117 	ldw	ra,4(sp)
    d2f0:	df000017 	ldw	fp,0(sp)
    d2f4:	dec00204 	addi	sp,sp,8
    d2f8:	f800283a 	ret

0000d2fc <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    d2fc:	defffb04 	addi	sp,sp,-20
    d300:	dfc00415 	stw	ra,16(sp)
    d304:	df000315 	stw	fp,12(sp)
    d308:	df000304 	addi	fp,sp,12
    d30c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    d310:	e0bfff17 	ldw	r2,-4(fp)
    d314:	10000816 	blt	r2,zero,d338 <close+0x3c>
    d318:	01400304 	movi	r5,12
    d31c:	e13fff17 	ldw	r4,-4(fp)
    d320:	000a9f40 	call	a9f4 <__mulsi3>
    d324:	1007883a 	mov	r3,r2
    d328:	00800074 	movhi	r2,1
    d32c:	10812b04 	addi	r2,r2,1196
    d330:	1885883a 	add	r2,r3,r2
    d334:	00000106 	br	d33c <close+0x40>
    d338:	0005883a 	mov	r2,zero
    d33c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    d340:	e0bffd17 	ldw	r2,-12(fp)
    d344:	10001926 	beq	r2,zero,d3ac <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d348:	e0bffd17 	ldw	r2,-12(fp)
    d34c:	10800017 	ldw	r2,0(r2)
    d350:	10800417 	ldw	r2,16(r2)
    d354:	10000626 	beq	r2,zero,d370 <close+0x74>
    d358:	e0bffd17 	ldw	r2,-12(fp)
    d35c:	10800017 	ldw	r2,0(r2)
    d360:	10800417 	ldw	r2,16(r2)
    d364:	e13ffd17 	ldw	r4,-12(fp)
    d368:	103ee83a 	callr	r2
    d36c:	00000106 	br	d374 <close+0x78>
    d370:	0005883a 	mov	r2,zero
    d374:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d378:	e13fff17 	ldw	r4,-4(fp)
    d37c:	000d9e40 	call	d9e4 <alt_release_fd>
    if (rval < 0)
    d380:	e0bffe17 	ldw	r2,-8(fp)
    d384:	1000070e 	bge	r2,zero,d3a4 <close+0xa8>
    {
      ALT_ERRNO = -rval;
    d388:	000d2c00 	call	d2c0 <alt_get_errno>
    d38c:	1007883a 	mov	r3,r2
    d390:	e0bffe17 	ldw	r2,-8(fp)
    d394:	0085c83a 	sub	r2,zero,r2
    d398:	18800015 	stw	r2,0(r3)
      return -1;
    d39c:	00bfffc4 	movi	r2,-1
    d3a0:	00000706 	br	d3c0 <close+0xc4>
    }
    return 0;
    d3a4:	0005883a 	mov	r2,zero
    d3a8:	00000506 	br	d3c0 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d3ac:	000d2c00 	call	d2c0 <alt_get_errno>
    d3b0:	1007883a 	mov	r3,r2
    d3b4:	00801444 	movi	r2,81
    d3b8:	18800015 	stw	r2,0(r3)
    return -1;
    d3bc:	00bfffc4 	movi	r2,-1
  }
}
    d3c0:	e037883a 	mov	sp,fp
    d3c4:	dfc00117 	ldw	ra,4(sp)
    d3c8:	df000017 	ldw	fp,0(sp)
    d3cc:	dec00204 	addi	sp,sp,8
    d3d0:	f800283a 	ret

0000d3d4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    d3d4:	defffc04 	addi	sp,sp,-16
    d3d8:	df000315 	stw	fp,12(sp)
    d3dc:	df000304 	addi	fp,sp,12
    d3e0:	e13ffd15 	stw	r4,-12(fp)
    d3e4:	e17ffe15 	stw	r5,-8(fp)
    d3e8:	e1bfff15 	stw	r6,-4(fp)
  return len;
    d3ec:	e0bfff17 	ldw	r2,-4(fp)
}
    d3f0:	e037883a 	mov	sp,fp
    d3f4:	df000017 	ldw	fp,0(sp)
    d3f8:	dec00104 	addi	sp,sp,4
    d3fc:	f800283a 	ret

0000d400 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d400:	defffe04 	addi	sp,sp,-8
    d404:	dfc00115 	stw	ra,4(sp)
    d408:	df000015 	stw	fp,0(sp)
    d40c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d410:	d0a00b17 	ldw	r2,-32724(gp)
    d414:	10000326 	beq	r2,zero,d424 <alt_get_errno+0x24>
    d418:	d0a00b17 	ldw	r2,-32724(gp)
    d41c:	103ee83a 	callr	r2
    d420:	00000106 	br	d428 <alt_get_errno+0x28>
    d424:	d0a6d104 	addi	r2,gp,-25788
}
    d428:	e037883a 	mov	sp,fp
    d42c:	dfc00117 	ldw	ra,4(sp)
    d430:	df000017 	ldw	fp,0(sp)
    d434:	dec00204 	addi	sp,sp,8
    d438:	f800283a 	ret

0000d43c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    d43c:	defffb04 	addi	sp,sp,-20
    d440:	dfc00415 	stw	ra,16(sp)
    d444:	df000315 	stw	fp,12(sp)
    d448:	df000304 	addi	fp,sp,12
    d44c:	e13ffe15 	stw	r4,-8(fp)
    d450:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d454:	e0bffe17 	ldw	r2,-8(fp)
    d458:	10000816 	blt	r2,zero,d47c <fstat+0x40>
    d45c:	01400304 	movi	r5,12
    d460:	e13ffe17 	ldw	r4,-8(fp)
    d464:	000a9f40 	call	a9f4 <__mulsi3>
    d468:	1007883a 	mov	r3,r2
    d46c:	00800074 	movhi	r2,1
    d470:	10812b04 	addi	r2,r2,1196
    d474:	1885883a 	add	r2,r3,r2
    d478:	00000106 	br	d480 <fstat+0x44>
    d47c:	0005883a 	mov	r2,zero
    d480:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
    d484:	e0bffd17 	ldw	r2,-12(fp)
    d488:	10001026 	beq	r2,zero,d4cc <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    d48c:	e0bffd17 	ldw	r2,-12(fp)
    d490:	10800017 	ldw	r2,0(r2)
    d494:	10800817 	ldw	r2,32(r2)
    d498:	10000726 	beq	r2,zero,d4b8 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
    d49c:	e0bffd17 	ldw	r2,-12(fp)
    d4a0:	10800017 	ldw	r2,0(r2)
    d4a4:	10800817 	ldw	r2,32(r2)
    d4a8:	e17fff17 	ldw	r5,-4(fp)
    d4ac:	e13ffd17 	ldw	r4,-12(fp)
    d4b0:	103ee83a 	callr	r2
    d4b4:	00000a06 	br	d4e0 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d4b8:	e0bfff17 	ldw	r2,-4(fp)
    d4bc:	00c80004 	movi	r3,8192
    d4c0:	10c00115 	stw	r3,4(r2)
      return 0;
    d4c4:	0005883a 	mov	r2,zero
    d4c8:	00000506 	br	d4e0 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d4cc:	000d4000 	call	d400 <alt_get_errno>
    d4d0:	1007883a 	mov	r3,r2
    d4d4:	00801444 	movi	r2,81
    d4d8:	18800015 	stw	r2,0(r3)
    return -1;
    d4dc:	00bfffc4 	movi	r2,-1
  }
}
    d4e0:	e037883a 	mov	sp,fp
    d4e4:	dfc00117 	ldw	ra,4(sp)
    d4e8:	df000017 	ldw	fp,0(sp)
    d4ec:	dec00204 	addi	sp,sp,8
    d4f0:	f800283a 	ret

0000d4f4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d4f4:	defffe04 	addi	sp,sp,-8
    d4f8:	dfc00115 	stw	ra,4(sp)
    d4fc:	df000015 	stw	fp,0(sp)
    d500:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d504:	d0a00b17 	ldw	r2,-32724(gp)
    d508:	10000326 	beq	r2,zero,d518 <alt_get_errno+0x24>
    d50c:	d0a00b17 	ldw	r2,-32724(gp)
    d510:	103ee83a 	callr	r2
    d514:	00000106 	br	d51c <alt_get_errno+0x28>
    d518:	d0a6d104 	addi	r2,gp,-25788
}
    d51c:	e037883a 	mov	sp,fp
    d520:	dfc00117 	ldw	ra,4(sp)
    d524:	df000017 	ldw	fp,0(sp)
    d528:	dec00204 	addi	sp,sp,8
    d52c:	f800283a 	ret

0000d530 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d530:	deffed04 	addi	sp,sp,-76
    d534:	dfc01215 	stw	ra,72(sp)
    d538:	df001115 	stw	fp,68(sp)
    d53c:	df001104 	addi	fp,sp,68
    d540:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d544:	e0bfff17 	ldw	r2,-4(fp)
    d548:	10000816 	blt	r2,zero,d56c <isatty+0x3c>
    d54c:	01400304 	movi	r5,12
    d550:	e13fff17 	ldw	r4,-4(fp)
    d554:	000a9f40 	call	a9f4 <__mulsi3>
    d558:	1007883a 	mov	r3,r2
    d55c:	00800074 	movhi	r2,1
    d560:	10812b04 	addi	r2,r2,1196
    d564:	1885883a 	add	r2,r3,r2
    d568:	00000106 	br	d570 <isatty+0x40>
    d56c:	0005883a 	mov	r2,zero
    d570:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
    d574:	e0bfef17 	ldw	r2,-68(fp)
    d578:	10000e26 	beq	r2,zero,d5b4 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d57c:	e0bfef17 	ldw	r2,-68(fp)
    d580:	10800017 	ldw	r2,0(r2)
    d584:	10800817 	ldw	r2,32(r2)
    d588:	1000021e 	bne	r2,zero,d594 <isatty+0x64>
    {
      return 1;
    d58c:	00800044 	movi	r2,1
    d590:	00000d06 	br	d5c8 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d594:	e0bff004 	addi	r2,fp,-64
    d598:	100b883a 	mov	r5,r2
    d59c:	e13fff17 	ldw	r4,-4(fp)
    d5a0:	000d43c0 	call	d43c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d5a4:	e0bff117 	ldw	r2,-60(fp)
    d5a8:	10880020 	cmpeqi	r2,r2,8192
    d5ac:	10803fcc 	andi	r2,r2,255
    d5b0:	00000506 	br	d5c8 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d5b4:	000d4f40 	call	d4f4 <alt_get_errno>
    d5b8:	1007883a 	mov	r3,r2
    d5bc:	00801444 	movi	r2,81
    d5c0:	18800015 	stw	r2,0(r3)
    return 0;
    d5c4:	0005883a 	mov	r2,zero
  }
}
    d5c8:	e037883a 	mov	sp,fp
    d5cc:	dfc00117 	ldw	ra,4(sp)
    d5d0:	df000017 	ldw	fp,0(sp)
    d5d4:	dec00204 	addi	sp,sp,8
    d5d8:	f800283a 	ret

0000d5dc <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d5dc:	defffc04 	addi	sp,sp,-16
    d5e0:	df000315 	stw	fp,12(sp)
    d5e4:	df000304 	addi	fp,sp,12
    d5e8:	e13ffd15 	stw	r4,-12(fp)
    d5ec:	e17ffe15 	stw	r5,-8(fp)
    d5f0:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    d5f4:	e0fffe17 	ldw	r3,-8(fp)
    d5f8:	e0bffd17 	ldw	r2,-12(fp)
    d5fc:	18800c26 	beq	r3,r2,d630 <alt_load_section+0x54>
  {
    while( to != end )
    d600:	00000806 	br	d624 <alt_load_section+0x48>
    {
      *to++ = *from++;
    d604:	e0bffe17 	ldw	r2,-8(fp)
    d608:	10c00104 	addi	r3,r2,4
    d60c:	e0fffe15 	stw	r3,-8(fp)
    d610:	e0fffd17 	ldw	r3,-12(fp)
    d614:	19000104 	addi	r4,r3,4
    d618:	e13ffd15 	stw	r4,-12(fp)
    d61c:	18c00017 	ldw	r3,0(r3)
    d620:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d624:	e0fffe17 	ldw	r3,-8(fp)
    d628:	e0bfff17 	ldw	r2,-4(fp)
    d62c:	18bff51e 	bne	r3,r2,d604 <__alt_data_end+0xfffed604>
    {
      *to++ = *from++;
    }
  }
}
    d630:	0001883a 	nop
    d634:	e037883a 	mov	sp,fp
    d638:	df000017 	ldw	fp,0(sp)
    d63c:	dec00104 	addi	sp,sp,4
    d640:	f800283a 	ret

0000d644 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d644:	defffe04 	addi	sp,sp,-8
    d648:	dfc00115 	stw	ra,4(sp)
    d64c:	df000015 	stw	fp,0(sp)
    d650:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d654:	01800074 	movhi	r6,1
    d658:	3185b304 	addi	r6,r6,5836
    d65c:	01400074 	movhi	r5,1
    d660:	297ef804 	addi	r5,r5,-1056
    d664:	01000074 	movhi	r4,1
    d668:	2105b304 	addi	r4,r4,5836
    d66c:	000d5dc0 	call	d5dc <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d670:	01800034 	movhi	r6,0
    d674:	31807004 	addi	r6,r6,448
    d678:	01400034 	movhi	r5,0
    d67c:	29400804 	addi	r5,r5,32
    d680:	01000034 	movhi	r4,0
    d684:	21000804 	addi	r4,r4,32
    d688:	000d5dc0 	call	d5dc <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d68c:	01800074 	movhi	r6,1
    d690:	31bef804 	addi	r6,r6,-1056
    d694:	01400074 	movhi	r5,1
    d698:	297e3204 	addi	r5,r5,-1848
    d69c:	01000074 	movhi	r4,1
    d6a0:	213e3204 	addi	r4,r4,-1848
    d6a4:	000d5dc0 	call	d5dc <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d6a8:	000e8ac0 	call	e8ac <alt_dcache_flush_all>
  alt_icache_flush_all();
    d6ac:	000ea6c0 	call	ea6c <alt_icache_flush_all>
}
    d6b0:	0001883a 	nop
    d6b4:	e037883a 	mov	sp,fp
    d6b8:	dfc00117 	ldw	ra,4(sp)
    d6bc:	df000017 	ldw	fp,0(sp)
    d6c0:	dec00204 	addi	sp,sp,8
    d6c4:	f800283a 	ret

0000d6c8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d6c8:	defffe04 	addi	sp,sp,-8
    d6cc:	dfc00115 	stw	ra,4(sp)
    d6d0:	df000015 	stw	fp,0(sp)
    d6d4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d6d8:	d0a00b17 	ldw	r2,-32724(gp)
    d6dc:	10000326 	beq	r2,zero,d6ec <alt_get_errno+0x24>
    d6e0:	d0a00b17 	ldw	r2,-32724(gp)
    d6e4:	103ee83a 	callr	r2
    d6e8:	00000106 	br	d6f0 <alt_get_errno+0x28>
    d6ec:	d0a6d104 	addi	r2,gp,-25788
}
    d6f0:	e037883a 	mov	sp,fp
    d6f4:	dfc00117 	ldw	ra,4(sp)
    d6f8:	df000017 	ldw	fp,0(sp)
    d6fc:	dec00204 	addi	sp,sp,8
    d700:	f800283a 	ret

0000d704 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d704:	defff904 	addi	sp,sp,-28
    d708:	dfc00615 	stw	ra,24(sp)
    d70c:	df000515 	stw	fp,20(sp)
    d710:	df000504 	addi	fp,sp,20
    d714:	e13ffd15 	stw	r4,-12(fp)
    d718:	e17ffe15 	stw	r5,-8(fp)
    d71c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    d720:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d724:	e0bffd17 	ldw	r2,-12(fp)
    d728:	10000816 	blt	r2,zero,d74c <lseek+0x48>
    d72c:	01400304 	movi	r5,12
    d730:	e13ffd17 	ldw	r4,-12(fp)
    d734:	000a9f40 	call	a9f4 <__mulsi3>
    d738:	1007883a 	mov	r3,r2
    d73c:	00800074 	movhi	r2,1
    d740:	10812b04 	addi	r2,r2,1196
    d744:	1885883a 	add	r2,r3,r2
    d748:	00000106 	br	d750 <lseek+0x4c>
    d74c:	0005883a 	mov	r2,zero
    d750:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
    d754:	e0bffc17 	ldw	r2,-16(fp)
    d758:	10001026 	beq	r2,zero,d79c <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    d75c:	e0bffc17 	ldw	r2,-16(fp)
    d760:	10800017 	ldw	r2,0(r2)
    d764:	10800717 	ldw	r2,28(r2)
    d768:	10000926 	beq	r2,zero,d790 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    d76c:	e0bffc17 	ldw	r2,-16(fp)
    d770:	10800017 	ldw	r2,0(r2)
    d774:	10800717 	ldw	r2,28(r2)
    d778:	e1bfff17 	ldw	r6,-4(fp)
    d77c:	e17ffe17 	ldw	r5,-8(fp)
    d780:	e13ffc17 	ldw	r4,-16(fp)
    d784:	103ee83a 	callr	r2
    d788:	e0bffb15 	stw	r2,-20(fp)
    d78c:	00000506 	br	d7a4 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    d790:	00bfde84 	movi	r2,-134
    d794:	e0bffb15 	stw	r2,-20(fp)
    d798:	00000206 	br	d7a4 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
    d79c:	00bfebc4 	movi	r2,-81
    d7a0:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
    d7a4:	e0bffb17 	ldw	r2,-20(fp)
    d7a8:	1000070e 	bge	r2,zero,d7c8 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
    d7ac:	000d6c80 	call	d6c8 <alt_get_errno>
    d7b0:	1007883a 	mov	r3,r2
    d7b4:	e0bffb17 	ldw	r2,-20(fp)
    d7b8:	0085c83a 	sub	r2,zero,r2
    d7bc:	18800015 	stw	r2,0(r3)
    rc = -1;
    d7c0:	00bfffc4 	movi	r2,-1
    d7c4:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
    d7c8:	e0bffb17 	ldw	r2,-20(fp)
}
    d7cc:	e037883a 	mov	sp,fp
    d7d0:	dfc00117 	ldw	ra,4(sp)
    d7d4:	df000017 	ldw	fp,0(sp)
    d7d8:	dec00204 	addi	sp,sp,8
    d7dc:	f800283a 	ret

0000d7e0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    d7e0:	defffd04 	addi	sp,sp,-12
    d7e4:	dfc00215 	stw	ra,8(sp)
    d7e8:	df000115 	stw	fp,4(sp)
    d7ec:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    d7f0:	0009883a 	mov	r4,zero
    d7f4:	000dc880 	call	dc88 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    d7f8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    d7fc:	000dcc00 	call	dcc0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    d800:	01800074 	movhi	r6,1
    d804:	31beee04 	addi	r6,r6,-1096
    d808:	01400074 	movhi	r5,1
    d80c:	297eee04 	addi	r5,r5,-1096
    d810:	01000074 	movhi	r4,1
    d814:	213eee04 	addi	r4,r4,-1096
    d818:	000ee100 	call	ee10 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    d81c:	000e9ac0 	call	e9ac <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    d820:	01000074 	movhi	r4,1
    d824:	213a8304 	addi	r4,r4,-5620
    d828:	000f5340 	call	f534 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    d82c:	d0a6d217 	ldw	r2,-25784(gp)
    d830:	d0e6d317 	ldw	r3,-25780(gp)
    d834:	d126d417 	ldw	r4,-25776(gp)
    d838:	200d883a 	mov	r6,r4
    d83c:	180b883a 	mov	r5,r3
    d840:	1009883a 	mov	r4,r2
    d844:	00001fc0 	call	1fc <main>
    d848:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    d84c:	01000044 	movi	r4,1
    d850:	000d2fc0 	call	d2fc <close>
  exit (result);
    d854:	e13fff17 	ldw	r4,-4(fp)
    d858:	000f5480 	call	f548 <exit>

0000d85c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    d85c:	defffe04 	addi	sp,sp,-8
    d860:	df000115 	stw	fp,4(sp)
    d864:	df000104 	addi	fp,sp,4
    d868:	e13fff15 	stw	r4,-4(fp)
}
    d86c:	0001883a 	nop
    d870:	e037883a 	mov	sp,fp
    d874:	df000017 	ldw	fp,0(sp)
    d878:	dec00104 	addi	sp,sp,4
    d87c:	f800283a 	ret

0000d880 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    d880:	defffe04 	addi	sp,sp,-8
    d884:	df000115 	stw	fp,4(sp)
    d888:	df000104 	addi	fp,sp,4
    d88c:	e13fff15 	stw	r4,-4(fp)
}
    d890:	0001883a 	nop
    d894:	e037883a 	mov	sp,fp
    d898:	df000017 	ldw	fp,0(sp)
    d89c:	dec00104 	addi	sp,sp,4
    d8a0:	f800283a 	ret

0000d8a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d8a4:	defffe04 	addi	sp,sp,-8
    d8a8:	dfc00115 	stw	ra,4(sp)
    d8ac:	df000015 	stw	fp,0(sp)
    d8b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d8b4:	d0a00b17 	ldw	r2,-32724(gp)
    d8b8:	10000326 	beq	r2,zero,d8c8 <alt_get_errno+0x24>
    d8bc:	d0a00b17 	ldw	r2,-32724(gp)
    d8c0:	103ee83a 	callr	r2
    d8c4:	00000106 	br	d8cc <alt_get_errno+0x28>
    d8c8:	d0a6d104 	addi	r2,gp,-25788
}
    d8cc:	e037883a 	mov	sp,fp
    d8d0:	dfc00117 	ldw	ra,4(sp)
    d8d4:	df000017 	ldw	fp,0(sp)
    d8d8:	dec00204 	addi	sp,sp,8
    d8dc:	f800283a 	ret

0000d8e0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    d8e0:	defff904 	addi	sp,sp,-28
    d8e4:	dfc00615 	stw	ra,24(sp)
    d8e8:	df000515 	stw	fp,20(sp)
    d8ec:	df000504 	addi	fp,sp,20
    d8f0:	e13ffd15 	stw	r4,-12(fp)
    d8f4:	e17ffe15 	stw	r5,-8(fp)
    d8f8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d8fc:	e0bffd17 	ldw	r2,-12(fp)
    d900:	10000816 	blt	r2,zero,d924 <read+0x44>
    d904:	01400304 	movi	r5,12
    d908:	e13ffd17 	ldw	r4,-12(fp)
    d90c:	000a9f40 	call	a9f4 <__mulsi3>
    d910:	1007883a 	mov	r3,r2
    d914:	00800074 	movhi	r2,1
    d918:	10812b04 	addi	r2,r2,1196
    d91c:	1885883a 	add	r2,r3,r2
    d920:	00000106 	br	d928 <read+0x48>
    d924:	0005883a 	mov	r2,zero
    d928:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    d92c:	e0bffb17 	ldw	r2,-20(fp)
    d930:	10002226 	beq	r2,zero,d9bc <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d934:	e0bffb17 	ldw	r2,-20(fp)
    d938:	10800217 	ldw	r2,8(r2)
    d93c:	108000cc 	andi	r2,r2,3
    d940:	10800060 	cmpeqi	r2,r2,1
    d944:	1000181e 	bne	r2,zero,d9a8 <read+0xc8>
        (fd->dev->read))
    d948:	e0bffb17 	ldw	r2,-20(fp)
    d94c:	10800017 	ldw	r2,0(r2)
    d950:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d954:	10001426 	beq	r2,zero,d9a8 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    d958:	e0bffb17 	ldw	r2,-20(fp)
    d95c:	10800017 	ldw	r2,0(r2)
    d960:	10800517 	ldw	r2,20(r2)
    d964:	e0ffff17 	ldw	r3,-4(fp)
    d968:	180d883a 	mov	r6,r3
    d96c:	e17ffe17 	ldw	r5,-8(fp)
    d970:	e13ffb17 	ldw	r4,-20(fp)
    d974:	103ee83a 	callr	r2
    d978:	e0bffc15 	stw	r2,-16(fp)
    d97c:	e0bffc17 	ldw	r2,-16(fp)
    d980:	1000070e 	bge	r2,zero,d9a0 <read+0xc0>
        {
          ALT_ERRNO = -rval;
    d984:	000d8a40 	call	d8a4 <alt_get_errno>
    d988:	1007883a 	mov	r3,r2
    d98c:	e0bffc17 	ldw	r2,-16(fp)
    d990:	0085c83a 	sub	r2,zero,r2
    d994:	18800015 	stw	r2,0(r3)
          return -1;
    d998:	00bfffc4 	movi	r2,-1
    d99c:	00000c06 	br	d9d0 <read+0xf0>
        }
        return rval;
    d9a0:	e0bffc17 	ldw	r2,-16(fp)
    d9a4:	00000a06 	br	d9d0 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
    d9a8:	000d8a40 	call	d8a4 <alt_get_errno>
    d9ac:	1007883a 	mov	r3,r2
    d9b0:	00800344 	movi	r2,13
    d9b4:	18800015 	stw	r2,0(r3)
    d9b8:	00000406 	br	d9cc <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    d9bc:	000d8a40 	call	d8a4 <alt_get_errno>
    d9c0:	1007883a 	mov	r3,r2
    d9c4:	00801444 	movi	r2,81
    d9c8:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d9cc:	00bfffc4 	movi	r2,-1
}
    d9d0:	e037883a 	mov	sp,fp
    d9d4:	dfc00117 	ldw	ra,4(sp)
    d9d8:	df000017 	ldw	fp,0(sp)
    d9dc:	dec00204 	addi	sp,sp,8
    d9e0:	f800283a 	ret

0000d9e4 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    d9e4:	defffc04 	addi	sp,sp,-16
    d9e8:	dfc00315 	stw	ra,12(sp)
    d9ec:	df000215 	stw	fp,8(sp)
    d9f0:	dc000115 	stw	r16,4(sp)
    d9f4:	df000204 	addi	fp,sp,8
    d9f8:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
    d9fc:	e0bffe17 	ldw	r2,-8(fp)
    da00:	108000d0 	cmplti	r2,r2,3
    da04:	1000111e 	bne	r2,zero,da4c <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
    da08:	04000074 	movhi	r16,1
    da0c:	84012b04 	addi	r16,r16,1196
    da10:	e0bffe17 	ldw	r2,-8(fp)
    da14:	01400304 	movi	r5,12
    da18:	1009883a 	mov	r4,r2
    da1c:	000a9f40 	call	a9f4 <__mulsi3>
    da20:	8085883a 	add	r2,r16,r2
    da24:	10800204 	addi	r2,r2,8
    da28:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    da2c:	04000074 	movhi	r16,1
    da30:	84012b04 	addi	r16,r16,1196
    da34:	e0bffe17 	ldw	r2,-8(fp)
    da38:	01400304 	movi	r5,12
    da3c:	1009883a 	mov	r4,r2
    da40:	000a9f40 	call	a9f4 <__mulsi3>
    da44:	8085883a 	add	r2,r16,r2
    da48:	10000015 	stw	zero,0(r2)
  }
}
    da4c:	0001883a 	nop
    da50:	e6ffff04 	addi	sp,fp,-4
    da54:	dfc00217 	ldw	ra,8(sp)
    da58:	df000117 	ldw	fp,4(sp)
    da5c:	dc000017 	ldw	r16,0(sp)
    da60:	dec00304 	addi	sp,sp,12
    da64:	f800283a 	ret

0000da68 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    da68:	defff904 	addi	sp,sp,-28
    da6c:	df000615 	stw	fp,24(sp)
    da70:	df000604 	addi	fp,sp,24
    da74:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    da78:	0005303a 	rdctl	r2,status
    da7c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    da80:	e0fffe17 	ldw	r3,-8(fp)
    da84:	00bfff84 	movi	r2,-2
    da88:	1884703a 	and	r2,r3,r2
    da8c:	1001703a 	wrctl	status,r2
  
  return context;
    da90:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    da94:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    da98:	d0a00c17 	ldw	r2,-32720(gp)
    da9c:	10c000c4 	addi	r3,r2,3
    daa0:	00bfff04 	movi	r2,-4
    daa4:	1884703a 	and	r2,r3,r2
    daa8:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    daac:	d0e00c17 	ldw	r3,-32720(gp)
    dab0:	e0bfff17 	ldw	r2,-4(fp)
    dab4:	1887883a 	add	r3,r3,r2
    dab8:	008000b4 	movhi	r2,2
    dabc:	10800004 	addi	r2,r2,0
    dac0:	10c0062e 	bgeu	r2,r3,dadc <sbrk+0x74>
    dac4:	e0bffb17 	ldw	r2,-20(fp)
    dac8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    dacc:	e0bffa17 	ldw	r2,-24(fp)
    dad0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    dad4:	00bfffc4 	movi	r2,-1
    dad8:	00000b06 	br	db08 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    dadc:	d0a00c17 	ldw	r2,-32720(gp)
    dae0:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
    dae4:	d0e00c17 	ldw	r3,-32720(gp)
    dae8:	e0bfff17 	ldw	r2,-4(fp)
    daec:	1885883a 	add	r2,r3,r2
    daf0:	d0a00c15 	stw	r2,-32720(gp)
    daf4:	e0bffb17 	ldw	r2,-20(fp)
    daf8:	e0bffc15 	stw	r2,-16(fp)
    dafc:	e0bffc17 	ldw	r2,-16(fp)
    db00:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    db04:	e0bffd17 	ldw	r2,-12(fp)
} 
    db08:	e037883a 	mov	sp,fp
    db0c:	df000017 	ldw	fp,0(sp)
    db10:	dec00104 	addi	sp,sp,4
    db14:	f800283a 	ret

0000db18 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    db18:	defffe04 	addi	sp,sp,-8
    db1c:	dfc00115 	stw	ra,4(sp)
    db20:	df000015 	stw	fp,0(sp)
    db24:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    db28:	d0a00b17 	ldw	r2,-32724(gp)
    db2c:	10000326 	beq	r2,zero,db3c <alt_get_errno+0x24>
    db30:	d0a00b17 	ldw	r2,-32724(gp)
    db34:	103ee83a 	callr	r2
    db38:	00000106 	br	db40 <alt_get_errno+0x28>
    db3c:	d0a6d104 	addi	r2,gp,-25788
}
    db40:	e037883a 	mov	sp,fp
    db44:	dfc00117 	ldw	ra,4(sp)
    db48:	df000017 	ldw	fp,0(sp)
    db4c:	dec00204 	addi	sp,sp,8
    db50:	f800283a 	ret

0000db54 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    db54:	defff904 	addi	sp,sp,-28
    db58:	dfc00615 	stw	ra,24(sp)
    db5c:	df000515 	stw	fp,20(sp)
    db60:	df000504 	addi	fp,sp,20
    db64:	e13ffd15 	stw	r4,-12(fp)
    db68:	e17ffe15 	stw	r5,-8(fp)
    db6c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    db70:	e0bffd17 	ldw	r2,-12(fp)
    db74:	10000816 	blt	r2,zero,db98 <write+0x44>
    db78:	01400304 	movi	r5,12
    db7c:	e13ffd17 	ldw	r4,-12(fp)
    db80:	000a9f40 	call	a9f4 <__mulsi3>
    db84:	1007883a 	mov	r3,r2
    db88:	00800074 	movhi	r2,1
    db8c:	10812b04 	addi	r2,r2,1196
    db90:	1885883a 	add	r2,r3,r2
    db94:	00000106 	br	db9c <write+0x48>
    db98:	0005883a 	mov	r2,zero
    db9c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    dba0:	e0bffb17 	ldw	r2,-20(fp)
    dba4:	10002126 	beq	r2,zero,dc2c <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    dba8:	e0bffb17 	ldw	r2,-20(fp)
    dbac:	10800217 	ldw	r2,8(r2)
    dbb0:	108000cc 	andi	r2,r2,3
    dbb4:	10001826 	beq	r2,zero,dc18 <write+0xc4>
    dbb8:	e0bffb17 	ldw	r2,-20(fp)
    dbbc:	10800017 	ldw	r2,0(r2)
    dbc0:	10800617 	ldw	r2,24(r2)
    dbc4:	10001426 	beq	r2,zero,dc18 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    dbc8:	e0bffb17 	ldw	r2,-20(fp)
    dbcc:	10800017 	ldw	r2,0(r2)
    dbd0:	10800617 	ldw	r2,24(r2)
    dbd4:	e0ffff17 	ldw	r3,-4(fp)
    dbd8:	180d883a 	mov	r6,r3
    dbdc:	e17ffe17 	ldw	r5,-8(fp)
    dbe0:	e13ffb17 	ldw	r4,-20(fp)
    dbe4:	103ee83a 	callr	r2
    dbe8:	e0bffc15 	stw	r2,-16(fp)
    dbec:	e0bffc17 	ldw	r2,-16(fp)
    dbf0:	1000070e 	bge	r2,zero,dc10 <write+0xbc>
      {
        ALT_ERRNO = -rval;
    dbf4:	000db180 	call	db18 <alt_get_errno>
    dbf8:	1007883a 	mov	r3,r2
    dbfc:	e0bffc17 	ldw	r2,-16(fp)
    dc00:	0085c83a 	sub	r2,zero,r2
    dc04:	18800015 	stw	r2,0(r3)
        return -1;
    dc08:	00bfffc4 	movi	r2,-1
    dc0c:	00000c06 	br	dc40 <write+0xec>
      }
      return rval;
    dc10:	e0bffc17 	ldw	r2,-16(fp)
    dc14:	00000a06 	br	dc40 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
    dc18:	000db180 	call	db18 <alt_get_errno>
    dc1c:	1007883a 	mov	r3,r2
    dc20:	00800344 	movi	r2,13
    dc24:	18800015 	stw	r2,0(r3)
    dc28:	00000406 	br	dc3c <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    dc2c:	000db180 	call	db18 <alt_get_errno>
    dc30:	1007883a 	mov	r3,r2
    dc34:	00801444 	movi	r2,81
    dc38:	18800015 	stw	r2,0(r3)
  }
  return -1;
    dc3c:	00bfffc4 	movi	r2,-1
}
    dc40:	e037883a 	mov	sp,fp
    dc44:	dfc00117 	ldw	ra,4(sp)
    dc48:	df000017 	ldw	fp,0(sp)
    dc4c:	dec00204 	addi	sp,sp,8
    dc50:	f800283a 	ret

0000dc54 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    dc54:	defffd04 	addi	sp,sp,-12
    dc58:	dfc00215 	stw	ra,8(sp)
    dc5c:	df000115 	stw	fp,4(sp)
    dc60:	df000104 	addi	fp,sp,4
    dc64:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    dc68:	d1600804 	addi	r5,gp,-32736
    dc6c:	e13fff17 	ldw	r4,-4(fp)
    dc70:	000e9080 	call	e908 <alt_dev_llist_insert>
}
    dc74:	e037883a 	mov	sp,fp
    dc78:	dfc00117 	ldw	ra,4(sp)
    dc7c:	df000017 	ldw	fp,0(sp)
    dc80:	dec00204 	addi	sp,sp,8
    dc84:	f800283a 	ret

0000dc88 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    dc88:	defffd04 	addi	sp,sp,-12
    dc8c:	dfc00215 	stw	ra,8(sp)
    dc90:	df000115 	stw	fp,4(sp)
    dc94:	df000104 	addi	fp,sp,4
    dc98:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
    dc9c:	000f2b40 	call	f2b4 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    dca0:	00800044 	movi	r2,1
    dca4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    dca8:	0001883a 	nop
    dcac:	e037883a 	mov	sp,fp
    dcb0:	dfc00117 	ldw	ra,4(sp)
    dcb4:	df000017 	ldw	fp,0(sp)
    dcb8:	dec00204 	addi	sp,sp,8
    dcbc:	f800283a 	ret

0000dcc0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    dcc0:	defffe04 	addi	sp,sp,-8
    dcc4:	dfc00115 	stw	ra,4(sp)
    dcc8:	df000015 	stw	fp,0(sp)
    dccc:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    dcd0:	000d883a 	mov	r6,zero
    dcd4:	000b883a 	mov	r5,zero
    dcd8:	01000074 	movhi	r4,1
    dcdc:	21019504 	addi	r4,r4,1620
    dce0:	000de7c0 	call	de7c <altera_avalon_jtag_uart_init>
    dce4:	01000074 	movhi	r4,1
    dce8:	21018b04 	addi	r4,r4,1580
    dcec:	000dc540 	call	dc54 <alt_dev_reg>
    ALTERA_AVALON_PERFORMANCE_COUNTER_INIT ( PERFORMANCE_COUNTER_0, performance_counter_0);
    dcf0:	00c00044 	movi	r3,1
    dcf4:	008000b4 	movhi	r2,2
    dcf8:	10841004 	addi	r2,r2,4160
    dcfc:	10c00035 	stwio	r3,0(r2)
}
    dd00:	0001883a 	nop
    dd04:	e037883a 	mov	sp,fp
    dd08:	dfc00117 	ldw	ra,4(sp)
    dd0c:	df000017 	ldw	fp,0(sp)
    dd10:	dec00204 	addi	sp,sp,8
    dd14:	f800283a 	ret

0000dd18 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    dd18:	defffa04 	addi	sp,sp,-24
    dd1c:	dfc00515 	stw	ra,20(sp)
    dd20:	df000415 	stw	fp,16(sp)
    dd24:	df000404 	addi	fp,sp,16
    dd28:	e13ffd15 	stw	r4,-12(fp)
    dd2c:	e17ffe15 	stw	r5,-8(fp)
    dd30:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    dd34:	e0bffd17 	ldw	r2,-12(fp)
    dd38:	10800017 	ldw	r2,0(r2)
    dd3c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    dd40:	e0bffc17 	ldw	r2,-16(fp)
    dd44:	10c00a04 	addi	r3,r2,40
    dd48:	e0bffd17 	ldw	r2,-12(fp)
    dd4c:	10800217 	ldw	r2,8(r2)
    dd50:	100f883a 	mov	r7,r2
    dd54:	e1bfff17 	ldw	r6,-4(fp)
    dd58:	e17ffe17 	ldw	r5,-8(fp)
    dd5c:	1809883a 	mov	r4,r3
    dd60:	000e3400 	call	e340 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    dd64:	e037883a 	mov	sp,fp
    dd68:	dfc00117 	ldw	ra,4(sp)
    dd6c:	df000017 	ldw	fp,0(sp)
    dd70:	dec00204 	addi	sp,sp,8
    dd74:	f800283a 	ret

0000dd78 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    dd78:	defffa04 	addi	sp,sp,-24
    dd7c:	dfc00515 	stw	ra,20(sp)
    dd80:	df000415 	stw	fp,16(sp)
    dd84:	df000404 	addi	fp,sp,16
    dd88:	e13ffd15 	stw	r4,-12(fp)
    dd8c:	e17ffe15 	stw	r5,-8(fp)
    dd90:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    dd94:	e0bffd17 	ldw	r2,-12(fp)
    dd98:	10800017 	ldw	r2,0(r2)
    dd9c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    dda0:	e0bffc17 	ldw	r2,-16(fp)
    dda4:	10c00a04 	addi	r3,r2,40
    dda8:	e0bffd17 	ldw	r2,-12(fp)
    ddac:	10800217 	ldw	r2,8(r2)
    ddb0:	100f883a 	mov	r7,r2
    ddb4:	e1bfff17 	ldw	r6,-4(fp)
    ddb8:	e17ffe17 	ldw	r5,-8(fp)
    ddbc:	1809883a 	mov	r4,r3
    ddc0:	000e55c0 	call	e55c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    ddc4:	e037883a 	mov	sp,fp
    ddc8:	dfc00117 	ldw	ra,4(sp)
    ddcc:	df000017 	ldw	fp,0(sp)
    ddd0:	dec00204 	addi	sp,sp,8
    ddd4:	f800283a 	ret

0000ddd8 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    ddd8:	defffc04 	addi	sp,sp,-16
    dddc:	dfc00315 	stw	ra,12(sp)
    dde0:	df000215 	stw	fp,8(sp)
    dde4:	df000204 	addi	fp,sp,8
    dde8:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    ddec:	e0bfff17 	ldw	r2,-4(fp)
    ddf0:	10800017 	ldw	r2,0(r2)
    ddf4:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    ddf8:	e0bffe17 	ldw	r2,-8(fp)
    ddfc:	10c00a04 	addi	r3,r2,40
    de00:	e0bfff17 	ldw	r2,-4(fp)
    de04:	10800217 	ldw	r2,8(r2)
    de08:	100b883a 	mov	r5,r2
    de0c:	1809883a 	mov	r4,r3
    de10:	000e1e80 	call	e1e8 <altera_avalon_jtag_uart_close>
}
    de14:	e037883a 	mov	sp,fp
    de18:	dfc00117 	ldw	ra,4(sp)
    de1c:	df000017 	ldw	fp,0(sp)
    de20:	dec00204 	addi	sp,sp,8
    de24:	f800283a 	ret

0000de28 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    de28:	defffa04 	addi	sp,sp,-24
    de2c:	dfc00515 	stw	ra,20(sp)
    de30:	df000415 	stw	fp,16(sp)
    de34:	df000404 	addi	fp,sp,16
    de38:	e13ffd15 	stw	r4,-12(fp)
    de3c:	e17ffe15 	stw	r5,-8(fp)
    de40:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    de44:	e0bffd17 	ldw	r2,-12(fp)
    de48:	10800017 	ldw	r2,0(r2)
    de4c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    de50:	e0bffc17 	ldw	r2,-16(fp)
    de54:	10800a04 	addi	r2,r2,40
    de58:	e1bfff17 	ldw	r6,-4(fp)
    de5c:	e17ffe17 	ldw	r5,-8(fp)
    de60:	1009883a 	mov	r4,r2
    de64:	000e2500 	call	e250 <altera_avalon_jtag_uart_ioctl>
}
    de68:	e037883a 	mov	sp,fp
    de6c:	dfc00117 	ldw	ra,4(sp)
    de70:	df000017 	ldw	fp,0(sp)
    de74:	dec00204 	addi	sp,sp,8
    de78:	f800283a 	ret

0000de7c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    de7c:	defffa04 	addi	sp,sp,-24
    de80:	dfc00515 	stw	ra,20(sp)
    de84:	df000415 	stw	fp,16(sp)
    de88:	df000404 	addi	fp,sp,16
    de8c:	e13ffd15 	stw	r4,-12(fp)
    de90:	e17ffe15 	stw	r5,-8(fp)
    de94:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    de98:	e0bffd17 	ldw	r2,-12(fp)
    de9c:	00c00044 	movi	r3,1
    dea0:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    dea4:	e0bffd17 	ldw	r2,-12(fp)
    dea8:	10800017 	ldw	r2,0(r2)
    deac:	10800104 	addi	r2,r2,4
    deb0:	1007883a 	mov	r3,r2
    deb4:	e0bffd17 	ldw	r2,-12(fp)
    deb8:	10800817 	ldw	r2,32(r2)
    debc:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    dec0:	e0bffe17 	ldw	r2,-8(fp)
    dec4:	e0ffff17 	ldw	r3,-4(fp)
    dec8:	d8000015 	stw	zero,0(sp)
    decc:	e1fffd17 	ldw	r7,-12(fp)
    ded0:	01800074 	movhi	r6,1
    ded4:	31b7cf04 	addi	r6,r6,-8388
    ded8:	180b883a 	mov	r5,r3
    dedc:	1009883a 	mov	r4,r2
    dee0:	000ea8c0 	call	ea8c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    dee4:	e0bffd17 	ldw	r2,-12(fp)
    dee8:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    deec:	e0bffd17 	ldw	r2,-12(fp)
    def0:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    def4:	d0e6d617 	ldw	r3,-25768(gp)
    def8:	e1fffd17 	ldw	r7,-12(fp)
    defc:	01800074 	movhi	r6,1
    df00:	31b85204 	addi	r6,r6,-7864
    df04:	180b883a 	mov	r5,r3
    df08:	1009883a 	mov	r4,r2
    df0c:	000e7800 	call	e780 <alt_alarm_start>
    df10:	1000040e 	bge	r2,zero,df24 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    df14:	e0fffd17 	ldw	r3,-12(fp)
    df18:	00a00034 	movhi	r2,32768
    df1c:	10bfffc4 	addi	r2,r2,-1
    df20:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    df24:	0001883a 	nop
    df28:	e037883a 	mov	sp,fp
    df2c:	dfc00117 	ldw	ra,4(sp)
    df30:	df000017 	ldw	fp,0(sp)
    df34:	dec00204 	addi	sp,sp,8
    df38:	f800283a 	ret

0000df3c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    df3c:	defff804 	addi	sp,sp,-32
    df40:	df000715 	stw	fp,28(sp)
    df44:	df000704 	addi	fp,sp,28
    df48:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    df4c:	e0bfff17 	ldw	r2,-4(fp)
    df50:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
    df54:	e0bffb17 	ldw	r2,-20(fp)
    df58:	10800017 	ldw	r2,0(r2)
    df5c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    df60:	e0bffc17 	ldw	r2,-16(fp)
    df64:	10800104 	addi	r2,r2,4
    df68:	10800037 	ldwio	r2,0(r2)
    df6c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    df70:	e0bffd17 	ldw	r2,-12(fp)
    df74:	1080c00c 	andi	r2,r2,768
    df78:	10006d26 	beq	r2,zero,e130 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    df7c:	e0bffd17 	ldw	r2,-12(fp)
    df80:	1080400c 	andi	r2,r2,256
    df84:	10003526 	beq	r2,zero,e05c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    df88:	00800074 	movhi	r2,1
    df8c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    df90:	e0bffb17 	ldw	r2,-20(fp)
    df94:	10800a17 	ldw	r2,40(r2)
    df98:	10800044 	addi	r2,r2,1
    df9c:	1081ffcc 	andi	r2,r2,2047
    dfa0:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
    dfa4:	e0bffb17 	ldw	r2,-20(fp)
    dfa8:	10c00b17 	ldw	r3,44(r2)
    dfac:	e0bffe17 	ldw	r2,-8(fp)
    dfb0:	18801526 	beq	r3,r2,e008 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    dfb4:	e0bffc17 	ldw	r2,-16(fp)
    dfb8:	10800037 	ldwio	r2,0(r2)
    dfbc:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    dfc0:	e0bff917 	ldw	r2,-28(fp)
    dfc4:	10a0000c 	andi	r2,r2,32768
    dfc8:	10001126 	beq	r2,zero,e010 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    dfcc:	e0bffb17 	ldw	r2,-20(fp)
    dfd0:	10800a17 	ldw	r2,40(r2)
    dfd4:	e0fff917 	ldw	r3,-28(fp)
    dfd8:	1809883a 	mov	r4,r3
    dfdc:	e0fffb17 	ldw	r3,-20(fp)
    dfe0:	1885883a 	add	r2,r3,r2
    dfe4:	10800e04 	addi	r2,r2,56
    dfe8:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    dfec:	e0bffb17 	ldw	r2,-20(fp)
    dff0:	10800a17 	ldw	r2,40(r2)
    dff4:	10800044 	addi	r2,r2,1
    dff8:	10c1ffcc 	andi	r3,r2,2047
    dffc:	e0bffb17 	ldw	r2,-20(fp)
    e000:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
    e004:	003fe206 	br	df90 <__alt_data_end+0xfffedf90>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
    e008:	0001883a 	nop
    e00c:	00000106 	br	e014 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
    e010:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    e014:	e0bff917 	ldw	r2,-28(fp)
    e018:	10bfffec 	andhi	r2,r2,65535
    e01c:	10000f26 	beq	r2,zero,e05c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e020:	e0bffb17 	ldw	r2,-20(fp)
    e024:	10c00817 	ldw	r3,32(r2)
    e028:	00bfff84 	movi	r2,-2
    e02c:	1886703a 	and	r3,r3,r2
    e030:	e0bffb17 	ldw	r2,-20(fp)
    e034:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    e038:	e0bffc17 	ldw	r2,-16(fp)
    e03c:	10800104 	addi	r2,r2,4
    e040:	1007883a 	mov	r3,r2
    e044:	e0bffb17 	ldw	r2,-20(fp)
    e048:	10800817 	ldw	r2,32(r2)
    e04c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e050:	e0bffc17 	ldw	r2,-16(fp)
    e054:	10800104 	addi	r2,r2,4
    e058:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    e05c:	e0bffd17 	ldw	r2,-12(fp)
    e060:	1080800c 	andi	r2,r2,512
    e064:	103fbe26 	beq	r2,zero,df60 <__alt_data_end+0xfffedf60>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    e068:	e0bffd17 	ldw	r2,-12(fp)
    e06c:	1004d43a 	srli	r2,r2,16
    e070:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    e074:	00001406 	br	e0c8 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    e078:	e0bffc17 	ldw	r2,-16(fp)
    e07c:	e0fffb17 	ldw	r3,-20(fp)
    e080:	18c00d17 	ldw	r3,52(r3)
    e084:	e13ffb17 	ldw	r4,-20(fp)
    e088:	20c7883a 	add	r3,r4,r3
    e08c:	18c20e04 	addi	r3,r3,2104
    e090:	18c00003 	ldbu	r3,0(r3)
    e094:	18c03fcc 	andi	r3,r3,255
    e098:	18c0201c 	xori	r3,r3,128
    e09c:	18ffe004 	addi	r3,r3,-128
    e0a0:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e0a4:	e0bffb17 	ldw	r2,-20(fp)
    e0a8:	10800d17 	ldw	r2,52(r2)
    e0ac:	10800044 	addi	r2,r2,1
    e0b0:	10c1ffcc 	andi	r3,r2,2047
    e0b4:	e0bffb17 	ldw	r2,-20(fp)
    e0b8:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    e0bc:	e0bffa17 	ldw	r2,-24(fp)
    e0c0:	10bfffc4 	addi	r2,r2,-1
    e0c4:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    e0c8:	e0bffa17 	ldw	r2,-24(fp)
    e0cc:	10000526 	beq	r2,zero,e0e4 <altera_avalon_jtag_uart_irq+0x1a8>
    e0d0:	e0bffb17 	ldw	r2,-20(fp)
    e0d4:	10c00d17 	ldw	r3,52(r2)
    e0d8:	e0bffb17 	ldw	r2,-20(fp)
    e0dc:	10800c17 	ldw	r2,48(r2)
    e0e0:	18bfe51e 	bne	r3,r2,e078 <__alt_data_end+0xfffee078>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
    e0e4:	e0bffa17 	ldw	r2,-24(fp)
    e0e8:	103f9d26 	beq	r2,zero,df60 <__alt_data_end+0xfffedf60>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e0ec:	e0bffb17 	ldw	r2,-20(fp)
    e0f0:	10c00817 	ldw	r3,32(r2)
    e0f4:	00bfff44 	movi	r2,-3
    e0f8:	1886703a 	and	r3,r3,r2
    e0fc:	e0bffb17 	ldw	r2,-20(fp)
    e100:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e104:	e0bffb17 	ldw	r2,-20(fp)
    e108:	10800017 	ldw	r2,0(r2)
    e10c:	10800104 	addi	r2,r2,4
    e110:	1007883a 	mov	r3,r2
    e114:	e0bffb17 	ldw	r2,-20(fp)
    e118:	10800817 	ldw	r2,32(r2)
    e11c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    e120:	e0bffc17 	ldw	r2,-16(fp)
    e124:	10800104 	addi	r2,r2,4
    e128:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
    e12c:	003f8c06 	br	df60 <__alt_data_end+0xfffedf60>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
    e130:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
    e134:	0001883a 	nop
    e138:	e037883a 	mov	sp,fp
    e13c:	df000017 	ldw	fp,0(sp)
    e140:	dec00104 	addi	sp,sp,4
    e144:	f800283a 	ret

0000e148 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    e148:	defff804 	addi	sp,sp,-32
    e14c:	df000715 	stw	fp,28(sp)
    e150:	df000704 	addi	fp,sp,28
    e154:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    e158:	e0bffb17 	ldw	r2,-20(fp)
    e15c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    e160:	e0bff917 	ldw	r2,-28(fp)
    e164:	10800017 	ldw	r2,0(r2)
    e168:	10800104 	addi	r2,r2,4
    e16c:	10800037 	ldwio	r2,0(r2)
    e170:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    e174:	e0bffa17 	ldw	r2,-24(fp)
    e178:	1081000c 	andi	r2,r2,1024
    e17c:	10000b26 	beq	r2,zero,e1ac <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    e180:	e0bff917 	ldw	r2,-28(fp)
    e184:	10800017 	ldw	r2,0(r2)
    e188:	10800104 	addi	r2,r2,4
    e18c:	1007883a 	mov	r3,r2
    e190:	e0bff917 	ldw	r2,-28(fp)
    e194:	10800817 	ldw	r2,32(r2)
    e198:	10810014 	ori	r2,r2,1024
    e19c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    e1a0:	e0bff917 	ldw	r2,-28(fp)
    e1a4:	10000915 	stw	zero,36(r2)
    e1a8:	00000a06 	br	e1d4 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    e1ac:	e0bff917 	ldw	r2,-28(fp)
    e1b0:	10c00917 	ldw	r3,36(r2)
    e1b4:	00a00034 	movhi	r2,32768
    e1b8:	10bfff04 	addi	r2,r2,-4
    e1bc:	10c00536 	bltu	r2,r3,e1d4 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    e1c0:	e0bff917 	ldw	r2,-28(fp)
    e1c4:	10800917 	ldw	r2,36(r2)
    e1c8:	10c00044 	addi	r3,r2,1
    e1cc:	e0bff917 	ldw	r2,-28(fp)
    e1d0:	10c00915 	stw	r3,36(r2)
    e1d4:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    e1d8:	e037883a 	mov	sp,fp
    e1dc:	df000017 	ldw	fp,0(sp)
    e1e0:	dec00104 	addi	sp,sp,4
    e1e4:	f800283a 	ret

0000e1e8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    e1e8:	defffd04 	addi	sp,sp,-12
    e1ec:	df000215 	stw	fp,8(sp)
    e1f0:	df000204 	addi	fp,sp,8
    e1f4:	e13ffe15 	stw	r4,-8(fp)
    e1f8:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e1fc:	00000506 	br	e214 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    e200:	e0bfff17 	ldw	r2,-4(fp)
    e204:	1090000c 	andi	r2,r2,16384
    e208:	10000226 	beq	r2,zero,e214 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    e20c:	00bffd44 	movi	r2,-11
    e210:	00000b06 	br	e240 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    e214:	e0bffe17 	ldw	r2,-8(fp)
    e218:	10c00d17 	ldw	r3,52(r2)
    e21c:	e0bffe17 	ldw	r2,-8(fp)
    e220:	10800c17 	ldw	r2,48(r2)
    e224:	18800526 	beq	r3,r2,e23c <altera_avalon_jtag_uart_close+0x54>
    e228:	e0bffe17 	ldw	r2,-8(fp)
    e22c:	10c00917 	ldw	r3,36(r2)
    e230:	e0bffe17 	ldw	r2,-8(fp)
    e234:	10800117 	ldw	r2,4(r2)
    e238:	18bff136 	bltu	r3,r2,e200 <__alt_data_end+0xfffee200>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    e23c:	0005883a 	mov	r2,zero
}
    e240:	e037883a 	mov	sp,fp
    e244:	df000017 	ldw	fp,0(sp)
    e248:	dec00104 	addi	sp,sp,4
    e24c:	f800283a 	ret

0000e250 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    e250:	defffa04 	addi	sp,sp,-24
    e254:	df000515 	stw	fp,20(sp)
    e258:	df000504 	addi	fp,sp,20
    e25c:	e13ffd15 	stw	r4,-12(fp)
    e260:	e17ffe15 	stw	r5,-8(fp)
    e264:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
    e268:	00bff9c4 	movi	r2,-25
    e26c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
    e270:	e0bffe17 	ldw	r2,-8(fp)
    e274:	10da8060 	cmpeqi	r3,r2,27137
    e278:	1800031e 	bne	r3,zero,e288 <altera_avalon_jtag_uart_ioctl+0x38>
    e27c:	109a80a0 	cmpeqi	r2,r2,27138
    e280:	1000181e 	bne	r2,zero,e2e4 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
    e284:	00002906 	br	e32c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    e288:	e0bffd17 	ldw	r2,-12(fp)
    e28c:	10c00117 	ldw	r3,4(r2)
    e290:	00a00034 	movhi	r2,32768
    e294:	10bfffc4 	addi	r2,r2,-1
    e298:	18802126 	beq	r3,r2,e320 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
    e29c:	e0bfff17 	ldw	r2,-4(fp)
    e2a0:	10800017 	ldw	r2,0(r2)
    e2a4:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    e2a8:	e0bffc17 	ldw	r2,-16(fp)
    e2ac:	10800090 	cmplti	r2,r2,2
    e2b0:	1000061e 	bne	r2,zero,e2cc <altera_avalon_jtag_uart_ioctl+0x7c>
    e2b4:	e0fffc17 	ldw	r3,-16(fp)
    e2b8:	00a00034 	movhi	r2,32768
    e2bc:	10bfffc4 	addi	r2,r2,-1
    e2c0:	18800226 	beq	r3,r2,e2cc <altera_avalon_jtag_uart_ioctl+0x7c>
    e2c4:	e0bffc17 	ldw	r2,-16(fp)
    e2c8:	00000206 	br	e2d4 <altera_avalon_jtag_uart_ioctl+0x84>
    e2cc:	00a00034 	movhi	r2,32768
    e2d0:	10bfff84 	addi	r2,r2,-2
    e2d4:	e0fffd17 	ldw	r3,-12(fp)
    e2d8:	18800115 	stw	r2,4(r3)
      rc = 0;
    e2dc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e2e0:	00000f06 	br	e320 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    e2e4:	e0bffd17 	ldw	r2,-12(fp)
    e2e8:	10c00117 	ldw	r3,4(r2)
    e2ec:	00a00034 	movhi	r2,32768
    e2f0:	10bfffc4 	addi	r2,r2,-1
    e2f4:	18800c26 	beq	r3,r2,e328 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    e2f8:	e0bffd17 	ldw	r2,-12(fp)
    e2fc:	10c00917 	ldw	r3,36(r2)
    e300:	e0bffd17 	ldw	r2,-12(fp)
    e304:	10800117 	ldw	r2,4(r2)
    e308:	1885803a 	cmpltu	r2,r3,r2
    e30c:	10c03fcc 	andi	r3,r2,255
    e310:	e0bfff17 	ldw	r2,-4(fp)
    e314:	10c00015 	stw	r3,0(r2)
      rc = 0;
    e318:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e31c:	00000206 	br	e328 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
    e320:	0001883a 	nop
    e324:	00000106 	br	e32c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
    e328:	0001883a 	nop

  default:
    break;
  }

  return rc;
    e32c:	e0bffb17 	ldw	r2,-20(fp)
}
    e330:	e037883a 	mov	sp,fp
    e334:	df000017 	ldw	fp,0(sp)
    e338:	dec00104 	addi	sp,sp,4
    e33c:	f800283a 	ret

0000e340 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    e340:	defff304 	addi	sp,sp,-52
    e344:	dfc00c15 	stw	ra,48(sp)
    e348:	df000b15 	stw	fp,44(sp)
    e34c:	df000b04 	addi	fp,sp,44
    e350:	e13ffc15 	stw	r4,-16(fp)
    e354:	e17ffd15 	stw	r5,-12(fp)
    e358:	e1bffe15 	stw	r6,-8(fp)
    e35c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
    e360:	e0bffd17 	ldw	r2,-12(fp)
    e364:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e368:	00004706 	br	e488 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    e36c:	e0bffc17 	ldw	r2,-16(fp)
    e370:	10800a17 	ldw	r2,40(r2)
    e374:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
    e378:	e0bffc17 	ldw	r2,-16(fp)
    e37c:	10800b17 	ldw	r2,44(r2)
    e380:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
    e384:	e0fff717 	ldw	r3,-36(fp)
    e388:	e0bff817 	ldw	r2,-32(fp)
    e38c:	18800536 	bltu	r3,r2,e3a4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    e390:	e0fff717 	ldw	r3,-36(fp)
    e394:	e0bff817 	ldw	r2,-32(fp)
    e398:	1885c83a 	sub	r2,r3,r2
    e39c:	e0bff615 	stw	r2,-40(fp)
    e3a0:	00000406 	br	e3b4 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    e3a4:	00c20004 	movi	r3,2048
    e3a8:	e0bff817 	ldw	r2,-32(fp)
    e3ac:	1885c83a 	sub	r2,r3,r2
    e3b0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    e3b4:	e0bff617 	ldw	r2,-40(fp)
    e3b8:	10001e26 	beq	r2,zero,e434 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
    e3bc:	e0fffe17 	ldw	r3,-8(fp)
    e3c0:	e0bff617 	ldw	r2,-40(fp)
    e3c4:	1880022e 	bgeu	r3,r2,e3d0 <altera_avalon_jtag_uart_read+0x90>
        n = space;
    e3c8:	e0bffe17 	ldw	r2,-8(fp)
    e3cc:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    e3d0:	e0bffc17 	ldw	r2,-16(fp)
    e3d4:	10c00e04 	addi	r3,r2,56
    e3d8:	e0bff817 	ldw	r2,-32(fp)
    e3dc:	1885883a 	add	r2,r3,r2
    e3e0:	e1bff617 	ldw	r6,-40(fp)
    e3e4:	100b883a 	mov	r5,r2
    e3e8:	e13ff517 	ldw	r4,-44(fp)
    e3ec:	0005f740 	call	5f74 <memcpy>
      ptr   += n;
    e3f0:	e0fff517 	ldw	r3,-44(fp)
    e3f4:	e0bff617 	ldw	r2,-40(fp)
    e3f8:	1885883a 	add	r2,r3,r2
    e3fc:	e0bff515 	stw	r2,-44(fp)
      space -= n;
    e400:	e0fffe17 	ldw	r3,-8(fp)
    e404:	e0bff617 	ldw	r2,-40(fp)
    e408:	1885c83a 	sub	r2,r3,r2
    e40c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e410:	e0fff817 	ldw	r3,-32(fp)
    e414:	e0bff617 	ldw	r2,-40(fp)
    e418:	1885883a 	add	r2,r3,r2
    e41c:	10c1ffcc 	andi	r3,r2,2047
    e420:	e0bffc17 	ldw	r2,-16(fp)
    e424:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    e428:	e0bffe17 	ldw	r2,-8(fp)
    e42c:	00bfcf16 	blt	zero,r2,e36c <__alt_data_end+0xfffee36c>
    e430:	00000106 	br	e438 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
    e434:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
    e438:	e0fff517 	ldw	r3,-44(fp)
    e43c:	e0bffd17 	ldw	r2,-12(fp)
    e440:	1880141e 	bne	r3,r2,e494 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    e444:	e0bfff17 	ldw	r2,-4(fp)
    e448:	1090000c 	andi	r2,r2,16384
    e44c:	1000131e 	bne	r2,zero,e49c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    e450:	0001883a 	nop
    e454:	e0bffc17 	ldw	r2,-16(fp)
    e458:	10c00a17 	ldw	r3,40(r2)
    e45c:	e0bff717 	ldw	r2,-36(fp)
    e460:	1880051e 	bne	r3,r2,e478 <altera_avalon_jtag_uart_read+0x138>
    e464:	e0bffc17 	ldw	r2,-16(fp)
    e468:	10c00917 	ldw	r3,36(r2)
    e46c:	e0bffc17 	ldw	r2,-16(fp)
    e470:	10800117 	ldw	r2,4(r2)
    e474:	18bff736 	bltu	r3,r2,e454 <__alt_data_end+0xfffee454>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    e478:	e0bffc17 	ldw	r2,-16(fp)
    e47c:	10c00a17 	ldw	r3,40(r2)
    e480:	e0bff717 	ldw	r2,-36(fp)
    e484:	18800726 	beq	r3,r2,e4a4 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e488:	e0bffe17 	ldw	r2,-8(fp)
    e48c:	00bfb716 	blt	zero,r2,e36c <__alt_data_end+0xfffee36c>
    e490:	00000506 	br	e4a8 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
    e494:	0001883a 	nop
    e498:	00000306 	br	e4a8 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
    e49c:	0001883a 	nop
    e4a0:	00000106 	br	e4a8 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
    e4a4:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    e4a8:	e0fff517 	ldw	r3,-44(fp)
    e4ac:	e0bffd17 	ldw	r2,-12(fp)
    e4b0:	18801826 	beq	r3,r2,e514 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e4b4:	0005303a 	rdctl	r2,status
    e4b8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e4bc:	e0fffb17 	ldw	r3,-20(fp)
    e4c0:	00bfff84 	movi	r2,-2
    e4c4:	1884703a 	and	r2,r3,r2
    e4c8:	1001703a 	wrctl	status,r2
  
  return context;
    e4cc:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    e4d0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e4d4:	e0bffc17 	ldw	r2,-16(fp)
    e4d8:	10800817 	ldw	r2,32(r2)
    e4dc:	10c00054 	ori	r3,r2,1
    e4e0:	e0bffc17 	ldw	r2,-16(fp)
    e4e4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e4e8:	e0bffc17 	ldw	r2,-16(fp)
    e4ec:	10800017 	ldw	r2,0(r2)
    e4f0:	10800104 	addi	r2,r2,4
    e4f4:	1007883a 	mov	r3,r2
    e4f8:	e0bffc17 	ldw	r2,-16(fp)
    e4fc:	10800817 	ldw	r2,32(r2)
    e500:	18800035 	stwio	r2,0(r3)
    e504:	e0bffa17 	ldw	r2,-24(fp)
    e508:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e50c:	e0bff917 	ldw	r2,-28(fp)
    e510:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    e514:	e0fff517 	ldw	r3,-44(fp)
    e518:	e0bffd17 	ldw	r2,-12(fp)
    e51c:	18800426 	beq	r3,r2,e530 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
    e520:	e0fff517 	ldw	r3,-44(fp)
    e524:	e0bffd17 	ldw	r2,-12(fp)
    e528:	1885c83a 	sub	r2,r3,r2
    e52c:	00000606 	br	e548 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
    e530:	e0bfff17 	ldw	r2,-4(fp)
    e534:	1090000c 	andi	r2,r2,16384
    e538:	10000226 	beq	r2,zero,e544 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
    e53c:	00bffd44 	movi	r2,-11
    e540:	00000106 	br	e548 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
    e544:	00bffec4 	movi	r2,-5
}
    e548:	e037883a 	mov	sp,fp
    e54c:	dfc00117 	ldw	ra,4(sp)
    e550:	df000017 	ldw	fp,0(sp)
    e554:	dec00204 	addi	sp,sp,8
    e558:	f800283a 	ret

0000e55c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    e55c:	defff304 	addi	sp,sp,-52
    e560:	dfc00c15 	stw	ra,48(sp)
    e564:	df000b15 	stw	fp,44(sp)
    e568:	df000b04 	addi	fp,sp,44
    e56c:	e13ffc15 	stw	r4,-16(fp)
    e570:	e17ffd15 	stw	r5,-12(fp)
    e574:	e1bffe15 	stw	r6,-8(fp)
    e578:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    e57c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    e580:	e0bffd17 	ldw	r2,-12(fp)
    e584:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e588:	00003706 	br	e668 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    e58c:	e0bffc17 	ldw	r2,-16(fp)
    e590:	10800c17 	ldw	r2,48(r2)
    e594:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
    e598:	e0bffc17 	ldw	r2,-16(fp)
    e59c:	10800d17 	ldw	r2,52(r2)
    e5a0:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
    e5a4:	e0fff917 	ldw	r3,-28(fp)
    e5a8:	e0bff517 	ldw	r2,-44(fp)
    e5ac:	1880062e 	bgeu	r3,r2,e5c8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    e5b0:	e0fff517 	ldw	r3,-44(fp)
    e5b4:	e0bff917 	ldw	r2,-28(fp)
    e5b8:	1885c83a 	sub	r2,r3,r2
    e5bc:	10bfffc4 	addi	r2,r2,-1
    e5c0:	e0bff615 	stw	r2,-40(fp)
    e5c4:	00000b06 	br	e5f4 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    e5c8:	e0bff517 	ldw	r2,-44(fp)
    e5cc:	10000526 	beq	r2,zero,e5e4 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    e5d0:	00c20004 	movi	r3,2048
    e5d4:	e0bff917 	ldw	r2,-28(fp)
    e5d8:	1885c83a 	sub	r2,r3,r2
    e5dc:	e0bff615 	stw	r2,-40(fp)
    e5e0:	00000406 	br	e5f4 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    e5e4:	00c1ffc4 	movi	r3,2047
    e5e8:	e0bff917 	ldw	r2,-28(fp)
    e5ec:	1885c83a 	sub	r2,r3,r2
    e5f0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    e5f4:	e0bff617 	ldw	r2,-40(fp)
    e5f8:	10001e26 	beq	r2,zero,e674 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
    e5fc:	e0fffe17 	ldw	r3,-8(fp)
    e600:	e0bff617 	ldw	r2,-40(fp)
    e604:	1880022e 	bgeu	r3,r2,e610 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
    e608:	e0bffe17 	ldw	r2,-8(fp)
    e60c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    e610:	e0bffc17 	ldw	r2,-16(fp)
    e614:	10c20e04 	addi	r3,r2,2104
    e618:	e0bff917 	ldw	r2,-28(fp)
    e61c:	1885883a 	add	r2,r3,r2
    e620:	e1bff617 	ldw	r6,-40(fp)
    e624:	e17ffd17 	ldw	r5,-12(fp)
    e628:	1009883a 	mov	r4,r2
    e62c:	0005f740 	call	5f74 <memcpy>
      ptr   += n;
    e630:	e0fffd17 	ldw	r3,-12(fp)
    e634:	e0bff617 	ldw	r2,-40(fp)
    e638:	1885883a 	add	r2,r3,r2
    e63c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
    e640:	e0fffe17 	ldw	r3,-8(fp)
    e644:	e0bff617 	ldw	r2,-40(fp)
    e648:	1885c83a 	sub	r2,r3,r2
    e64c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e650:	e0fff917 	ldw	r3,-28(fp)
    e654:	e0bff617 	ldw	r2,-40(fp)
    e658:	1885883a 	add	r2,r3,r2
    e65c:	10c1ffcc 	andi	r3,r2,2047
    e660:	e0bffc17 	ldw	r2,-16(fp)
    e664:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e668:	e0bffe17 	ldw	r2,-8(fp)
    e66c:	00bfc716 	blt	zero,r2,e58c <__alt_data_end+0xfffee58c>
    e670:	00000106 	br	e678 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
    e674:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e678:	0005303a 	rdctl	r2,status
    e67c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e680:	e0fffb17 	ldw	r3,-20(fp)
    e684:	00bfff84 	movi	r2,-2
    e688:	1884703a 	and	r2,r3,r2
    e68c:	1001703a 	wrctl	status,r2
  
  return context;
    e690:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    e694:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e698:	e0bffc17 	ldw	r2,-16(fp)
    e69c:	10800817 	ldw	r2,32(r2)
    e6a0:	10c00094 	ori	r3,r2,2
    e6a4:	e0bffc17 	ldw	r2,-16(fp)
    e6a8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e6ac:	e0bffc17 	ldw	r2,-16(fp)
    e6b0:	10800017 	ldw	r2,0(r2)
    e6b4:	10800104 	addi	r2,r2,4
    e6b8:	1007883a 	mov	r3,r2
    e6bc:	e0bffc17 	ldw	r2,-16(fp)
    e6c0:	10800817 	ldw	r2,32(r2)
    e6c4:	18800035 	stwio	r2,0(r3)
    e6c8:	e0bffa17 	ldw	r2,-24(fp)
    e6cc:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e6d0:	e0bff817 	ldw	r2,-32(fp)
    e6d4:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    e6d8:	e0bffe17 	ldw	r2,-8(fp)
    e6dc:	0080100e 	bge	zero,r2,e720 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
    e6e0:	e0bfff17 	ldw	r2,-4(fp)
    e6e4:	1090000c 	andi	r2,r2,16384
    e6e8:	1000101e 	bne	r2,zero,e72c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    e6ec:	0001883a 	nop
    e6f0:	e0bffc17 	ldw	r2,-16(fp)
    e6f4:	10c00d17 	ldw	r3,52(r2)
    e6f8:	e0bff517 	ldw	r2,-44(fp)
    e6fc:	1880051e 	bne	r3,r2,e714 <altera_avalon_jtag_uart_write+0x1b8>
    e700:	e0bffc17 	ldw	r2,-16(fp)
    e704:	10c00917 	ldw	r3,36(r2)
    e708:	e0bffc17 	ldw	r2,-16(fp)
    e70c:	10800117 	ldw	r2,4(r2)
    e710:	18bff736 	bltu	r3,r2,e6f0 <__alt_data_end+0xfffee6f0>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    e714:	e0bffc17 	ldw	r2,-16(fp)
    e718:	10800917 	ldw	r2,36(r2)
    e71c:	1000051e 	bne	r2,zero,e734 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
    e720:	e0bffe17 	ldw	r2,-8(fp)
    e724:	00bfd016 	blt	zero,r2,e668 <__alt_data_end+0xfffee668>
    e728:	00000306 	br	e738 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
    e72c:	0001883a 	nop
    e730:	00000106 	br	e738 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
    e734:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e738:	e0fffd17 	ldw	r3,-12(fp)
    e73c:	e0bff717 	ldw	r2,-36(fp)
    e740:	18800426 	beq	r3,r2,e754 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
    e744:	e0fffd17 	ldw	r3,-12(fp)
    e748:	e0bff717 	ldw	r2,-36(fp)
    e74c:	1885c83a 	sub	r2,r3,r2
    e750:	00000606 	br	e76c <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
    e754:	e0bfff17 	ldw	r2,-4(fp)
    e758:	1090000c 	andi	r2,r2,16384
    e75c:	10000226 	beq	r2,zero,e768 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
    e760:	00bffd44 	movi	r2,-11
    e764:	00000106 	br	e76c <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    e768:	00bffec4 	movi	r2,-5
}
    e76c:	e037883a 	mov	sp,fp
    e770:	dfc00117 	ldw	ra,4(sp)
    e774:	df000017 	ldw	fp,0(sp)
    e778:	dec00204 	addi	sp,sp,8
    e77c:	f800283a 	ret

0000e780 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    e780:	defff504 	addi	sp,sp,-44
    e784:	df000a15 	stw	fp,40(sp)
    e788:	df000a04 	addi	fp,sp,40
    e78c:	e13ffc15 	stw	r4,-16(fp)
    e790:	e17ffd15 	stw	r5,-12(fp)
    e794:	e1bffe15 	stw	r6,-8(fp)
    e798:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    e79c:	e03ff615 	stw	zero,-40(fp)
    e7a0:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
    e7a4:	10003c26 	beq	r2,zero,e898 <alt_alarm_start+0x118>
  {
    if (alarm)
    e7a8:	e0bffc17 	ldw	r2,-16(fp)
    e7ac:	10003826 	beq	r2,zero,e890 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
    e7b0:	e0bffc17 	ldw	r2,-16(fp)
    e7b4:	e0fffe17 	ldw	r3,-8(fp)
    e7b8:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    e7bc:	e0bffc17 	ldw	r2,-16(fp)
    e7c0:	e0ffff17 	ldw	r3,-4(fp)
    e7c4:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e7c8:	0005303a 	rdctl	r2,status
    e7cc:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e7d0:	e0fff917 	ldw	r3,-28(fp)
    e7d4:	00bfff84 	movi	r2,-2
    e7d8:	1884703a 	and	r2,r3,r2
    e7dc:	1001703a 	wrctl	status,r2
  
  return context;
    e7e0:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
    e7e4:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    e7e8:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
    e7ec:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    e7f0:	e0fffd17 	ldw	r3,-12(fp)
    e7f4:	e0bff617 	ldw	r2,-40(fp)
    e7f8:	1885883a 	add	r2,r3,r2
    e7fc:	10c00044 	addi	r3,r2,1
    e800:	e0bffc17 	ldw	r2,-16(fp)
    e804:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    e808:	e0bffc17 	ldw	r2,-16(fp)
    e80c:	10c00217 	ldw	r3,8(r2)
    e810:	e0bff617 	ldw	r2,-40(fp)
    e814:	1880042e 	bgeu	r3,r2,e828 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
    e818:	e0bffc17 	ldw	r2,-16(fp)
    e81c:	00c00044 	movi	r3,1
    e820:	10c00405 	stb	r3,16(r2)
    e824:	00000206 	br	e830 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
    e828:	e0bffc17 	ldw	r2,-16(fp)
    e82c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    e830:	e0bffc17 	ldw	r2,-16(fp)
    e834:	d0e00e04 	addi	r3,gp,-32712
    e838:	e0fffa15 	stw	r3,-24(fp)
    e83c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e840:	e0bffb17 	ldw	r2,-20(fp)
    e844:	e0fffa17 	ldw	r3,-24(fp)
    e848:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e84c:	e0bffa17 	ldw	r2,-24(fp)
    e850:	10c00017 	ldw	r3,0(r2)
    e854:	e0bffb17 	ldw	r2,-20(fp)
    e858:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e85c:	e0bffa17 	ldw	r2,-24(fp)
    e860:	10800017 	ldw	r2,0(r2)
    e864:	e0fffb17 	ldw	r3,-20(fp)
    e868:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e86c:	e0bffa17 	ldw	r2,-24(fp)
    e870:	e0fffb17 	ldw	r3,-20(fp)
    e874:	10c00015 	stw	r3,0(r2)
    e878:	e0bff817 	ldw	r2,-32(fp)
    e87c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e880:	e0bff717 	ldw	r2,-36(fp)
    e884:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    e888:	0005883a 	mov	r2,zero
    e88c:	00000306 	br	e89c <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
    e890:	00bffa84 	movi	r2,-22
    e894:	00000106 	br	e89c <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
    e898:	00bfde84 	movi	r2,-134
  }
}
    e89c:	e037883a 	mov	sp,fp
    e8a0:	df000017 	ldw	fp,0(sp)
    e8a4:	dec00104 	addi	sp,sp,4
    e8a8:	f800283a 	ret

0000e8ac <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    e8ac:	deffff04 	addi	sp,sp,-4
    e8b0:	df000015 	stw	fp,0(sp)
    e8b4:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    e8b8:	0001883a 	nop
    e8bc:	e037883a 	mov	sp,fp
    e8c0:	df000017 	ldw	fp,0(sp)
    e8c4:	dec00104 	addi	sp,sp,4
    e8c8:	f800283a 	ret

0000e8cc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    e8cc:	defffe04 	addi	sp,sp,-8
    e8d0:	dfc00115 	stw	ra,4(sp)
    e8d4:	df000015 	stw	fp,0(sp)
    e8d8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e8dc:	d0a00b17 	ldw	r2,-32724(gp)
    e8e0:	10000326 	beq	r2,zero,e8f0 <alt_get_errno+0x24>
    e8e4:	d0a00b17 	ldw	r2,-32724(gp)
    e8e8:	103ee83a 	callr	r2
    e8ec:	00000106 	br	e8f4 <alt_get_errno+0x28>
    e8f0:	d0a6d104 	addi	r2,gp,-25788
}
    e8f4:	e037883a 	mov	sp,fp
    e8f8:	dfc00117 	ldw	ra,4(sp)
    e8fc:	df000017 	ldw	fp,0(sp)
    e900:	dec00204 	addi	sp,sp,8
    e904:	f800283a 	ret

0000e908 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    e908:	defffa04 	addi	sp,sp,-24
    e90c:	dfc00515 	stw	ra,20(sp)
    e910:	df000415 	stw	fp,16(sp)
    e914:	df000404 	addi	fp,sp,16
    e918:	e13ffe15 	stw	r4,-8(fp)
    e91c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    e920:	e0bffe17 	ldw	r2,-8(fp)
    e924:	10000326 	beq	r2,zero,e934 <alt_dev_llist_insert+0x2c>
    e928:	e0bffe17 	ldw	r2,-8(fp)
    e92c:	10800217 	ldw	r2,8(r2)
    e930:	1000061e 	bne	r2,zero,e94c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    e934:	000e8cc0 	call	e8cc <alt_get_errno>
    e938:	1007883a 	mov	r3,r2
    e93c:	00800584 	movi	r2,22
    e940:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    e944:	00bffa84 	movi	r2,-22
    e948:	00001306 	br	e998 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    e94c:	e0bffe17 	ldw	r2,-8(fp)
    e950:	e0ffff17 	ldw	r3,-4(fp)
    e954:	e0fffc15 	stw	r3,-16(fp)
    e958:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e95c:	e0bffd17 	ldw	r2,-12(fp)
    e960:	e0fffc17 	ldw	r3,-16(fp)
    e964:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e968:	e0bffc17 	ldw	r2,-16(fp)
    e96c:	10c00017 	ldw	r3,0(r2)
    e970:	e0bffd17 	ldw	r2,-12(fp)
    e974:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e978:	e0bffc17 	ldw	r2,-16(fp)
    e97c:	10800017 	ldw	r2,0(r2)
    e980:	e0fffd17 	ldw	r3,-12(fp)
    e984:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e988:	e0bffc17 	ldw	r2,-16(fp)
    e98c:	e0fffd17 	ldw	r3,-12(fp)
    e990:	10c00015 	stw	r3,0(r2)

  return 0;  
    e994:	0005883a 	mov	r2,zero
}
    e998:	e037883a 	mov	sp,fp
    e99c:	dfc00117 	ldw	ra,4(sp)
    e9a0:	df000017 	ldw	fp,0(sp)
    e9a4:	dec00204 	addi	sp,sp,8
    e9a8:	f800283a 	ret

0000e9ac <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    e9ac:	defffd04 	addi	sp,sp,-12
    e9b0:	dfc00215 	stw	ra,8(sp)
    e9b4:	df000115 	stw	fp,4(sp)
    e9b8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e9bc:	00800074 	movhi	r2,1
    e9c0:	10be3104 	addi	r2,r2,-1852
    e9c4:	e0bfff15 	stw	r2,-4(fp)
    e9c8:	00000606 	br	e9e4 <_do_ctors+0x38>
        (*ctor) (); 
    e9cc:	e0bfff17 	ldw	r2,-4(fp)
    e9d0:	10800017 	ldw	r2,0(r2)
    e9d4:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e9d8:	e0bfff17 	ldw	r2,-4(fp)
    e9dc:	10bfff04 	addi	r2,r2,-4
    e9e0:	e0bfff15 	stw	r2,-4(fp)
    e9e4:	e0ffff17 	ldw	r3,-4(fp)
    e9e8:	00800074 	movhi	r2,1
    e9ec:	10be3204 	addi	r2,r2,-1848
    e9f0:	18bff62e 	bgeu	r3,r2,e9cc <__alt_data_end+0xfffee9cc>
        (*ctor) (); 
}
    e9f4:	0001883a 	nop
    e9f8:	e037883a 	mov	sp,fp
    e9fc:	dfc00117 	ldw	ra,4(sp)
    ea00:	df000017 	ldw	fp,0(sp)
    ea04:	dec00204 	addi	sp,sp,8
    ea08:	f800283a 	ret

0000ea0c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    ea0c:	defffd04 	addi	sp,sp,-12
    ea10:	dfc00215 	stw	ra,8(sp)
    ea14:	df000115 	stw	fp,4(sp)
    ea18:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    ea1c:	00800074 	movhi	r2,1
    ea20:	10be3104 	addi	r2,r2,-1852
    ea24:	e0bfff15 	stw	r2,-4(fp)
    ea28:	00000606 	br	ea44 <_do_dtors+0x38>
        (*dtor) (); 
    ea2c:	e0bfff17 	ldw	r2,-4(fp)
    ea30:	10800017 	ldw	r2,0(r2)
    ea34:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    ea38:	e0bfff17 	ldw	r2,-4(fp)
    ea3c:	10bfff04 	addi	r2,r2,-4
    ea40:	e0bfff15 	stw	r2,-4(fp)
    ea44:	e0ffff17 	ldw	r3,-4(fp)
    ea48:	00800074 	movhi	r2,1
    ea4c:	10be3204 	addi	r2,r2,-1848
    ea50:	18bff62e 	bgeu	r3,r2,ea2c <__alt_data_end+0xfffeea2c>
        (*dtor) (); 
}
    ea54:	0001883a 	nop
    ea58:	e037883a 	mov	sp,fp
    ea5c:	dfc00117 	ldw	ra,4(sp)
    ea60:	df000017 	ldw	fp,0(sp)
    ea64:	dec00204 	addi	sp,sp,8
    ea68:	f800283a 	ret

0000ea6c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    ea6c:	deffff04 	addi	sp,sp,-4
    ea70:	df000015 	stw	fp,0(sp)
    ea74:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    ea78:	0001883a 	nop
    ea7c:	e037883a 	mov	sp,fp
    ea80:	df000017 	ldw	fp,0(sp)
    ea84:	dec00104 	addi	sp,sp,4
    ea88:	f800283a 	ret

0000ea8c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    ea8c:	defff904 	addi	sp,sp,-28
    ea90:	dfc00615 	stw	ra,24(sp)
    ea94:	df000515 	stw	fp,20(sp)
    ea98:	df000504 	addi	fp,sp,20
    ea9c:	e13ffc15 	stw	r4,-16(fp)
    eaa0:	e17ffd15 	stw	r5,-12(fp)
    eaa4:	e1bffe15 	stw	r6,-8(fp)
    eaa8:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    eaac:	e0800217 	ldw	r2,8(fp)
    eab0:	d8800015 	stw	r2,0(sp)
    eab4:	e1ffff17 	ldw	r7,-4(fp)
    eab8:	e1bffe17 	ldw	r6,-8(fp)
    eabc:	e17ffd17 	ldw	r5,-12(fp)
    eac0:	e13ffc17 	ldw	r4,-16(fp)
    eac4:	000ec3c0 	call	ec3c <alt_iic_isr_register>
}  
    eac8:	e037883a 	mov	sp,fp
    eacc:	dfc00117 	ldw	ra,4(sp)
    ead0:	df000017 	ldw	fp,0(sp)
    ead4:	dec00204 	addi	sp,sp,8
    ead8:	f800283a 	ret

0000eadc <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    eadc:	defff904 	addi	sp,sp,-28
    eae0:	df000615 	stw	fp,24(sp)
    eae4:	df000604 	addi	fp,sp,24
    eae8:	e13ffe15 	stw	r4,-8(fp)
    eaec:	e17fff15 	stw	r5,-4(fp)
    eaf0:	e0bfff17 	ldw	r2,-4(fp)
    eaf4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    eaf8:	0005303a 	rdctl	r2,status
    eafc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    eb00:	e0fffb17 	ldw	r3,-20(fp)
    eb04:	00bfff84 	movi	r2,-2
    eb08:	1884703a 	and	r2,r3,r2
    eb0c:	1001703a 	wrctl	status,r2
  
  return context;
    eb10:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    eb14:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
    eb18:	00c00044 	movi	r3,1
    eb1c:	e0bffa17 	ldw	r2,-24(fp)
    eb20:	1884983a 	sll	r2,r3,r2
    eb24:	1007883a 	mov	r3,r2
    eb28:	d0a6d517 	ldw	r2,-25772(gp)
    eb2c:	1884b03a 	or	r2,r3,r2
    eb30:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    eb34:	d0a6d517 	ldw	r2,-25772(gp)
    eb38:	100170fa 	wrctl	ienable,r2
    eb3c:	e0bffc17 	ldw	r2,-16(fp)
    eb40:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    eb44:	e0bffd17 	ldw	r2,-12(fp)
    eb48:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    eb4c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
    eb50:	0001883a 	nop
}
    eb54:	e037883a 	mov	sp,fp
    eb58:	df000017 	ldw	fp,0(sp)
    eb5c:	dec00104 	addi	sp,sp,4
    eb60:	f800283a 	ret

0000eb64 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    eb64:	defff904 	addi	sp,sp,-28
    eb68:	df000615 	stw	fp,24(sp)
    eb6c:	df000604 	addi	fp,sp,24
    eb70:	e13ffe15 	stw	r4,-8(fp)
    eb74:	e17fff15 	stw	r5,-4(fp)
    eb78:	e0bfff17 	ldw	r2,-4(fp)
    eb7c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    eb80:	0005303a 	rdctl	r2,status
    eb84:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    eb88:	e0fffb17 	ldw	r3,-20(fp)
    eb8c:	00bfff84 	movi	r2,-2
    eb90:	1884703a 	and	r2,r3,r2
    eb94:	1001703a 	wrctl	status,r2
  
  return context;
    eb98:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    eb9c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
    eba0:	00c00044 	movi	r3,1
    eba4:	e0bffa17 	ldw	r2,-24(fp)
    eba8:	1884983a 	sll	r2,r3,r2
    ebac:	0084303a 	nor	r2,zero,r2
    ebb0:	1007883a 	mov	r3,r2
    ebb4:	d0a6d517 	ldw	r2,-25772(gp)
    ebb8:	1884703a 	and	r2,r3,r2
    ebbc:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    ebc0:	d0a6d517 	ldw	r2,-25772(gp)
    ebc4:	100170fa 	wrctl	ienable,r2
    ebc8:	e0bffc17 	ldw	r2,-16(fp)
    ebcc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ebd0:	e0bffd17 	ldw	r2,-12(fp)
    ebd4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    ebd8:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
    ebdc:	0001883a 	nop
}
    ebe0:	e037883a 	mov	sp,fp
    ebe4:	df000017 	ldw	fp,0(sp)
    ebe8:	dec00104 	addi	sp,sp,4
    ebec:	f800283a 	ret

0000ebf0 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    ebf0:	defffc04 	addi	sp,sp,-16
    ebf4:	df000315 	stw	fp,12(sp)
    ebf8:	df000304 	addi	fp,sp,12
    ebfc:	e13ffe15 	stw	r4,-8(fp)
    ec00:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    ec04:	000530fa 	rdctl	r2,ienable
    ec08:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    ec0c:	00c00044 	movi	r3,1
    ec10:	e0bfff17 	ldw	r2,-4(fp)
    ec14:	1884983a 	sll	r2,r3,r2
    ec18:	1007883a 	mov	r3,r2
    ec1c:	e0bffd17 	ldw	r2,-12(fp)
    ec20:	1884703a 	and	r2,r3,r2
    ec24:	1004c03a 	cmpne	r2,r2,zero
    ec28:	10803fcc 	andi	r2,r2,255
}
    ec2c:	e037883a 	mov	sp,fp
    ec30:	df000017 	ldw	fp,0(sp)
    ec34:	dec00104 	addi	sp,sp,4
    ec38:	f800283a 	ret

0000ec3c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    ec3c:	defff504 	addi	sp,sp,-44
    ec40:	dfc00a15 	stw	ra,40(sp)
    ec44:	df000915 	stw	fp,36(sp)
    ec48:	df000904 	addi	fp,sp,36
    ec4c:	e13ffc15 	stw	r4,-16(fp)
    ec50:	e17ffd15 	stw	r5,-12(fp)
    ec54:	e1bffe15 	stw	r6,-8(fp)
    ec58:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
    ec5c:	00bffa84 	movi	r2,-22
    ec60:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    ec64:	e0bffd17 	ldw	r2,-12(fp)
    ec68:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    ec6c:	e0bff817 	ldw	r2,-32(fp)
    ec70:	10800808 	cmpgei	r2,r2,32
    ec74:	1000271e 	bne	r2,zero,ed14 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ec78:	0005303a 	rdctl	r2,status
    ec7c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ec80:	e0fffb17 	ldw	r3,-20(fp)
    ec84:	00bfff84 	movi	r2,-2
    ec88:	1884703a 	and	r2,r3,r2
    ec8c:	1001703a 	wrctl	status,r2
  
  return context;
    ec90:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    ec94:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
    ec98:	00800074 	movhi	r2,1
    ec9c:	108c8504 	addi	r2,r2,12820
    eca0:	e0fff817 	ldw	r3,-32(fp)
    eca4:	180690fa 	slli	r3,r3,3
    eca8:	10c5883a 	add	r2,r2,r3
    ecac:	e0fffe17 	ldw	r3,-8(fp)
    ecb0:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
    ecb4:	00800074 	movhi	r2,1
    ecb8:	108c8504 	addi	r2,r2,12820
    ecbc:	e0fff817 	ldw	r3,-32(fp)
    ecc0:	180690fa 	slli	r3,r3,3
    ecc4:	10c5883a 	add	r2,r2,r3
    ecc8:	10800104 	addi	r2,r2,4
    eccc:	e0ffff17 	ldw	r3,-4(fp)
    ecd0:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    ecd4:	e0bffe17 	ldw	r2,-8(fp)
    ecd8:	10000526 	beq	r2,zero,ecf0 <alt_iic_isr_register+0xb4>
    ecdc:	e0bff817 	ldw	r2,-32(fp)
    ece0:	100b883a 	mov	r5,r2
    ece4:	e13ffc17 	ldw	r4,-16(fp)
    ece8:	000eadc0 	call	eadc <alt_ic_irq_enable>
    ecec:	00000406 	br	ed00 <alt_iic_isr_register+0xc4>
    ecf0:	e0bff817 	ldw	r2,-32(fp)
    ecf4:	100b883a 	mov	r5,r2
    ecf8:	e13ffc17 	ldw	r4,-16(fp)
    ecfc:	000eb640 	call	eb64 <alt_ic_irq_disable>
    ed00:	e0bff715 	stw	r2,-36(fp)
    ed04:	e0bffa17 	ldw	r2,-24(fp)
    ed08:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ed0c:	e0bff917 	ldw	r2,-28(fp)
    ed10:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
    ed14:	e0bff717 	ldw	r2,-36(fp)
}
    ed18:	e037883a 	mov	sp,fp
    ed1c:	dfc00117 	ldw	ra,4(sp)
    ed20:	df000017 	ldw	fp,0(sp)
    ed24:	dec00204 	addi	sp,sp,8
    ed28:	f800283a 	ret

0000ed2c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    ed2c:	defff804 	addi	sp,sp,-32
    ed30:	dfc00715 	stw	ra,28(sp)
    ed34:	df000615 	stw	fp,24(sp)
    ed38:	dc000515 	stw	r16,20(sp)
    ed3c:	df000604 	addi	fp,sp,24
    ed40:	e13ffb15 	stw	r4,-20(fp)
    ed44:	e17ffc15 	stw	r5,-16(fp)
    ed48:	e1bffd15 	stw	r6,-12(fp)
    ed4c:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
    ed50:	e1bffe17 	ldw	r6,-8(fp)
    ed54:	e17ffd17 	ldw	r5,-12(fp)
    ed58:	e13ffc17 	ldw	r4,-16(fp)
    ed5c:	000efb40 	call	efb4 <open>
    ed60:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
    ed64:	e0bffa17 	ldw	r2,-24(fp)
    ed68:	10002216 	blt	r2,zero,edf4 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
    ed6c:	04000074 	movhi	r16,1
    ed70:	84012b04 	addi	r16,r16,1196
    ed74:	e0bffa17 	ldw	r2,-24(fp)
    ed78:	01400304 	movi	r5,12
    ed7c:	1009883a 	mov	r4,r2
    ed80:	000a9f40 	call	a9f4 <__mulsi3>
    ed84:	8085883a 	add	r2,r16,r2
    ed88:	10c00017 	ldw	r3,0(r2)
    ed8c:	e0bffb17 	ldw	r2,-20(fp)
    ed90:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    ed94:	04000074 	movhi	r16,1
    ed98:	84012b04 	addi	r16,r16,1196
    ed9c:	e0bffa17 	ldw	r2,-24(fp)
    eda0:	01400304 	movi	r5,12
    eda4:	1009883a 	mov	r4,r2
    eda8:	000a9f40 	call	a9f4 <__mulsi3>
    edac:	8085883a 	add	r2,r16,r2
    edb0:	10800104 	addi	r2,r2,4
    edb4:	10c00017 	ldw	r3,0(r2)
    edb8:	e0bffb17 	ldw	r2,-20(fp)
    edbc:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    edc0:	04000074 	movhi	r16,1
    edc4:	84012b04 	addi	r16,r16,1196
    edc8:	e0bffa17 	ldw	r2,-24(fp)
    edcc:	01400304 	movi	r5,12
    edd0:	1009883a 	mov	r4,r2
    edd4:	000a9f40 	call	a9f4 <__mulsi3>
    edd8:	8085883a 	add	r2,r16,r2
    eddc:	10800204 	addi	r2,r2,8
    ede0:	10c00017 	ldw	r3,0(r2)
    ede4:	e0bffb17 	ldw	r2,-20(fp)
    ede8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    edec:	e13ffa17 	ldw	r4,-24(fp)
    edf0:	000d9e40 	call	d9e4 <alt_release_fd>
  }
} 
    edf4:	0001883a 	nop
    edf8:	e6ffff04 	addi	sp,fp,-4
    edfc:	dfc00217 	ldw	ra,8(sp)
    ee00:	df000117 	ldw	fp,4(sp)
    ee04:	dc000017 	ldw	r16,0(sp)
    ee08:	dec00304 	addi	sp,sp,12
    ee0c:	f800283a 	ret

0000ee10 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    ee10:	defffb04 	addi	sp,sp,-20
    ee14:	dfc00415 	stw	ra,16(sp)
    ee18:	df000315 	stw	fp,12(sp)
    ee1c:	df000304 	addi	fp,sp,12
    ee20:	e13ffd15 	stw	r4,-12(fp)
    ee24:	e17ffe15 	stw	r5,-8(fp)
    ee28:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    ee2c:	01c07fc4 	movi	r7,511
    ee30:	01800044 	movi	r6,1
    ee34:	e17ffd17 	ldw	r5,-12(fp)
    ee38:	01000074 	movhi	r4,1
    ee3c:	21012e04 	addi	r4,r4,1208
    ee40:	000ed2c0 	call	ed2c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    ee44:	01c07fc4 	movi	r7,511
    ee48:	000d883a 	mov	r6,zero
    ee4c:	e17ffe17 	ldw	r5,-8(fp)
    ee50:	01000074 	movhi	r4,1
    ee54:	21012b04 	addi	r4,r4,1196
    ee58:	000ed2c0 	call	ed2c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    ee5c:	01c07fc4 	movi	r7,511
    ee60:	01800044 	movi	r6,1
    ee64:	e17fff17 	ldw	r5,-4(fp)
    ee68:	01000074 	movhi	r4,1
    ee6c:	21013104 	addi	r4,r4,1220
    ee70:	000ed2c0 	call	ed2c <alt_open_fd>
}  
    ee74:	0001883a 	nop
    ee78:	e037883a 	mov	sp,fp
    ee7c:	dfc00117 	ldw	ra,4(sp)
    ee80:	df000017 	ldw	fp,0(sp)
    ee84:	dec00204 	addi	sp,sp,8
    ee88:	f800283a 	ret

0000ee8c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    ee8c:	defffe04 	addi	sp,sp,-8
    ee90:	dfc00115 	stw	ra,4(sp)
    ee94:	df000015 	stw	fp,0(sp)
    ee98:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    ee9c:	d0a00b17 	ldw	r2,-32724(gp)
    eea0:	10000326 	beq	r2,zero,eeb0 <alt_get_errno+0x24>
    eea4:	d0a00b17 	ldw	r2,-32724(gp)
    eea8:	103ee83a 	callr	r2
    eeac:	00000106 	br	eeb4 <alt_get_errno+0x28>
    eeb0:	d0a6d104 	addi	r2,gp,-25788
}
    eeb4:	e037883a 	mov	sp,fp
    eeb8:	dfc00117 	ldw	ra,4(sp)
    eebc:	df000017 	ldw	fp,0(sp)
    eec0:	dec00204 	addi	sp,sp,8
    eec4:	f800283a 	ret

0000eec8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    eec8:	defffb04 	addi	sp,sp,-20
    eecc:	dfc00415 	stw	ra,16(sp)
    eed0:	df000315 	stw	fp,12(sp)
    eed4:	dc000215 	stw	r16,8(sp)
    eed8:	df000304 	addi	fp,sp,12
    eedc:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    eee0:	e0bffe17 	ldw	r2,-8(fp)
    eee4:	10800217 	ldw	r2,8(r2)
    eee8:	10d00034 	orhi	r3,r2,16384
    eeec:	e0bffe17 	ldw	r2,-8(fp)
    eef0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    eef4:	e03ffd15 	stw	zero,-12(fp)
    eef8:	00002306 	br	ef88 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    eefc:	04000074 	movhi	r16,1
    ef00:	84012b04 	addi	r16,r16,1196
    ef04:	e0bffd17 	ldw	r2,-12(fp)
    ef08:	01400304 	movi	r5,12
    ef0c:	1009883a 	mov	r4,r2
    ef10:	000a9f40 	call	a9f4 <__mulsi3>
    ef14:	8085883a 	add	r2,r16,r2
    ef18:	10c00017 	ldw	r3,0(r2)
    ef1c:	e0bffe17 	ldw	r2,-8(fp)
    ef20:	10800017 	ldw	r2,0(r2)
    ef24:	1880151e 	bne	r3,r2,ef7c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    ef28:	04000074 	movhi	r16,1
    ef2c:	84012b04 	addi	r16,r16,1196
    ef30:	e0bffd17 	ldw	r2,-12(fp)
    ef34:	01400304 	movi	r5,12
    ef38:	1009883a 	mov	r4,r2
    ef3c:	000a9f40 	call	a9f4 <__mulsi3>
    ef40:	8085883a 	add	r2,r16,r2
    ef44:	10800204 	addi	r2,r2,8
    ef48:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    ef4c:	10000b0e 	bge	r2,zero,ef7c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    ef50:	01400304 	movi	r5,12
    ef54:	e13ffd17 	ldw	r4,-12(fp)
    ef58:	000a9f40 	call	a9f4 <__mulsi3>
    ef5c:	1007883a 	mov	r3,r2
    ef60:	00800074 	movhi	r2,1
    ef64:	10812b04 	addi	r2,r2,1196
    ef68:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    ef6c:	e0bffe17 	ldw	r2,-8(fp)
    ef70:	18800226 	beq	r3,r2,ef7c <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
    ef74:	00bffcc4 	movi	r2,-13
    ef78:	00000806 	br	ef9c <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    ef7c:	e0bffd17 	ldw	r2,-12(fp)
    ef80:	10800044 	addi	r2,r2,1
    ef84:	e0bffd15 	stw	r2,-12(fp)
    ef88:	d0a00a17 	ldw	r2,-32728(gp)
    ef8c:	1007883a 	mov	r3,r2
    ef90:	e0bffd17 	ldw	r2,-12(fp)
    ef94:	18bfd92e 	bgeu	r3,r2,eefc <__alt_data_end+0xfffeeefc>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    ef98:	0005883a 	mov	r2,zero
}
    ef9c:	e6ffff04 	addi	sp,fp,-4
    efa0:	dfc00217 	ldw	ra,8(sp)
    efa4:	df000117 	ldw	fp,4(sp)
    efa8:	dc000017 	ldw	r16,0(sp)
    efac:	dec00304 	addi	sp,sp,12
    efb0:	f800283a 	ret

0000efb4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    efb4:	defff604 	addi	sp,sp,-40
    efb8:	dfc00915 	stw	ra,36(sp)
    efbc:	df000815 	stw	fp,32(sp)
    efc0:	df000804 	addi	fp,sp,32
    efc4:	e13ffd15 	stw	r4,-12(fp)
    efc8:	e17ffe15 	stw	r5,-8(fp)
    efcc:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    efd0:	00bfffc4 	movi	r2,-1
    efd4:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
    efd8:	00bffb44 	movi	r2,-19
    efdc:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
    efe0:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    efe4:	d1600804 	addi	r5,gp,-32736
    efe8:	e13ffd17 	ldw	r4,-12(fp)
    efec:	000f2d80 	call	f2d8 <alt_find_dev>
    eff0:	e0bff815 	stw	r2,-32(fp)
    eff4:	e0bff817 	ldw	r2,-32(fp)
    eff8:	1000051e 	bne	r2,zero,f010 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    effc:	e13ffd17 	ldw	r4,-12(fp)
    f000:	000f3680 	call	f368 <alt_find_file>
    f004:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
    f008:	00800044 	movi	r2,1
    f00c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    f010:	e0bff817 	ldw	r2,-32(fp)
    f014:	10002b26 	beq	r2,zero,f0c4 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
    f018:	e13ff817 	ldw	r4,-32(fp)
    f01c:	000f4700 	call	f470 <alt_get_fd>
    f020:	e0bff915 	stw	r2,-28(fp)
    f024:	e0bff917 	ldw	r2,-28(fp)
    f028:	1000030e 	bge	r2,zero,f038 <open+0x84>
    {
      status = index;
    f02c:	e0bff917 	ldw	r2,-28(fp)
    f030:	e0bffa15 	stw	r2,-24(fp)
    f034:	00002506 	br	f0cc <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
    f038:	01400304 	movi	r5,12
    f03c:	e13ff917 	ldw	r4,-28(fp)
    f040:	000a9f40 	call	a9f4 <__mulsi3>
    f044:	1007883a 	mov	r3,r2
    f048:	00800074 	movhi	r2,1
    f04c:	10812b04 	addi	r2,r2,1196
    f050:	1885883a 	add	r2,r3,r2
    f054:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    f058:	e0fffe17 	ldw	r3,-8(fp)
    f05c:	00900034 	movhi	r2,16384
    f060:	10bfffc4 	addi	r2,r2,-1
    f064:	1886703a 	and	r3,r3,r2
    f068:	e0bffc17 	ldw	r2,-16(fp)
    f06c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    f070:	e0bffb17 	ldw	r2,-20(fp)
    f074:	1000051e 	bne	r2,zero,f08c <open+0xd8>
    f078:	e13ffc17 	ldw	r4,-16(fp)
    f07c:	000eec80 	call	eec8 <alt_file_locked>
    f080:	e0bffa15 	stw	r2,-24(fp)
    f084:	e0bffa17 	ldw	r2,-24(fp)
    f088:	10001016 	blt	r2,zero,f0cc <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    f08c:	e0bff817 	ldw	r2,-32(fp)
    f090:	10800317 	ldw	r2,12(r2)
    f094:	10000826 	beq	r2,zero,f0b8 <open+0x104>
    f098:	e0bff817 	ldw	r2,-32(fp)
    f09c:	10800317 	ldw	r2,12(r2)
    f0a0:	e1ffff17 	ldw	r7,-4(fp)
    f0a4:	e1bffe17 	ldw	r6,-8(fp)
    f0a8:	e17ffd17 	ldw	r5,-12(fp)
    f0ac:	e13ffc17 	ldw	r4,-16(fp)
    f0b0:	103ee83a 	callr	r2
    f0b4:	00000106 	br	f0bc <open+0x108>
    f0b8:	0005883a 	mov	r2,zero
    f0bc:	e0bffa15 	stw	r2,-24(fp)
    f0c0:	00000206 	br	f0cc <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
    f0c4:	00bffb44 	movi	r2,-19
    f0c8:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    f0cc:	e0bffa17 	ldw	r2,-24(fp)
    f0d0:	1000090e 	bge	r2,zero,f0f8 <open+0x144>
  {
    alt_release_fd (index);  
    f0d4:	e13ff917 	ldw	r4,-28(fp)
    f0d8:	000d9e40 	call	d9e4 <alt_release_fd>
    ALT_ERRNO = -status;
    f0dc:	000ee8c0 	call	ee8c <alt_get_errno>
    f0e0:	1007883a 	mov	r3,r2
    f0e4:	e0bffa17 	ldw	r2,-24(fp)
    f0e8:	0085c83a 	sub	r2,zero,r2
    f0ec:	18800015 	stw	r2,0(r3)
    return -1;
    f0f0:	00bfffc4 	movi	r2,-1
    f0f4:	00000106 	br	f0fc <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
    f0f8:	e0bff917 	ldw	r2,-28(fp)
}
    f0fc:	e037883a 	mov	sp,fp
    f100:	dfc00117 	ldw	ra,4(sp)
    f104:	df000017 	ldw	fp,0(sp)
    f108:	dec00204 	addi	sp,sp,8
    f10c:	f800283a 	ret

0000f110 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    f110:	defffa04 	addi	sp,sp,-24
    f114:	df000515 	stw	fp,20(sp)
    f118:	df000504 	addi	fp,sp,20
    f11c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    f120:	0005303a 	rdctl	r2,status
    f124:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    f128:	e0fffc17 	ldw	r3,-16(fp)
    f12c:	00bfff84 	movi	r2,-2
    f130:	1884703a 	and	r2,r3,r2
    f134:	1001703a 	wrctl	status,r2
  
  return context;
    f138:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    f13c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
    f140:	e0bfff17 	ldw	r2,-4(fp)
    f144:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    f148:	e0bffd17 	ldw	r2,-12(fp)
    f14c:	10800017 	ldw	r2,0(r2)
    f150:	e0fffd17 	ldw	r3,-12(fp)
    f154:	18c00117 	ldw	r3,4(r3)
    f158:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    f15c:	e0bffd17 	ldw	r2,-12(fp)
    f160:	10800117 	ldw	r2,4(r2)
    f164:	e0fffd17 	ldw	r3,-12(fp)
    f168:	18c00017 	ldw	r3,0(r3)
    f16c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    f170:	e0bffd17 	ldw	r2,-12(fp)
    f174:	e0fffd17 	ldw	r3,-12(fp)
    f178:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    f17c:	e0bffd17 	ldw	r2,-12(fp)
    f180:	e0fffd17 	ldw	r3,-12(fp)
    f184:	10c00015 	stw	r3,0(r2)
    f188:	e0bffb17 	ldw	r2,-20(fp)
    f18c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    f190:	e0bffe17 	ldw	r2,-8(fp)
    f194:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    f198:	0001883a 	nop
    f19c:	e037883a 	mov	sp,fp
    f1a0:	df000017 	ldw	fp,0(sp)
    f1a4:	dec00104 	addi	sp,sp,4
    f1a8:	f800283a 	ret

0000f1ac <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    f1ac:	defffb04 	addi	sp,sp,-20
    f1b0:	dfc00415 	stw	ra,16(sp)
    f1b4:	df000315 	stw	fp,12(sp)
    f1b8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    f1bc:	d0a00e17 	ldw	r2,-32712(gp)
    f1c0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    f1c4:	d0a6d717 	ldw	r2,-25764(gp)
    f1c8:	10800044 	addi	r2,r2,1
    f1cc:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    f1d0:	00002e06 	br	f28c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    f1d4:	e0bffd17 	ldw	r2,-12(fp)
    f1d8:	10800017 	ldw	r2,0(r2)
    f1dc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    f1e0:	e0bffd17 	ldw	r2,-12(fp)
    f1e4:	10800403 	ldbu	r2,16(r2)
    f1e8:	10803fcc 	andi	r2,r2,255
    f1ec:	10000426 	beq	r2,zero,f200 <alt_tick+0x54>
    f1f0:	d0a6d717 	ldw	r2,-25764(gp)
    f1f4:	1000021e 	bne	r2,zero,f200 <alt_tick+0x54>
    {
      alarm->rollover = 0;
    f1f8:	e0bffd17 	ldw	r2,-12(fp)
    f1fc:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    f200:	e0bffd17 	ldw	r2,-12(fp)
    f204:	10800217 	ldw	r2,8(r2)
    f208:	d0e6d717 	ldw	r3,-25764(gp)
    f20c:	18801d36 	bltu	r3,r2,f284 <alt_tick+0xd8>
    f210:	e0bffd17 	ldw	r2,-12(fp)
    f214:	10800403 	ldbu	r2,16(r2)
    f218:	10803fcc 	andi	r2,r2,255
    f21c:	1000191e 	bne	r2,zero,f284 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    f220:	e0bffd17 	ldw	r2,-12(fp)
    f224:	10800317 	ldw	r2,12(r2)
    f228:	e0fffd17 	ldw	r3,-12(fp)
    f22c:	18c00517 	ldw	r3,20(r3)
    f230:	1809883a 	mov	r4,r3
    f234:	103ee83a 	callr	r2
    f238:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    f23c:	e0bfff17 	ldw	r2,-4(fp)
    f240:	1000031e 	bne	r2,zero,f250 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    f244:	e13ffd17 	ldw	r4,-12(fp)
    f248:	000f1100 	call	f110 <alt_alarm_stop>
    f24c:	00000d06 	br	f284 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    f250:	e0bffd17 	ldw	r2,-12(fp)
    f254:	10c00217 	ldw	r3,8(r2)
    f258:	e0bfff17 	ldw	r2,-4(fp)
    f25c:	1887883a 	add	r3,r3,r2
    f260:	e0bffd17 	ldw	r2,-12(fp)
    f264:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    f268:	e0bffd17 	ldw	r2,-12(fp)
    f26c:	10c00217 	ldw	r3,8(r2)
    f270:	d0a6d717 	ldw	r2,-25764(gp)
    f274:	1880032e 	bgeu	r3,r2,f284 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    f278:	e0bffd17 	ldw	r2,-12(fp)
    f27c:	00c00044 	movi	r3,1
    f280:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    f284:	e0bffe17 	ldw	r2,-8(fp)
    f288:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    f28c:	e0fffd17 	ldw	r3,-12(fp)
    f290:	d0a00e04 	addi	r2,gp,-32712
    f294:	18bfcf1e 	bne	r3,r2,f1d4 <__alt_data_end+0xfffef1d4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    f298:	0001883a 	nop
}
    f29c:	0001883a 	nop
    f2a0:	e037883a 	mov	sp,fp
    f2a4:	dfc00117 	ldw	ra,4(sp)
    f2a8:	df000017 	ldw	fp,0(sp)
    f2ac:	dec00204 	addi	sp,sp,8
    f2b0:	f800283a 	ret

0000f2b4 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
    f2b4:	deffff04 	addi	sp,sp,-4
    f2b8:	df000015 	stw	fp,0(sp)
    f2bc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    f2c0:	000170fa 	wrctl	ienable,zero
}
    f2c4:	0001883a 	nop
    f2c8:	e037883a 	mov	sp,fp
    f2cc:	df000017 	ldw	fp,0(sp)
    f2d0:	dec00104 	addi	sp,sp,4
    f2d4:	f800283a 	ret

0000f2d8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    f2d8:	defffa04 	addi	sp,sp,-24
    f2dc:	dfc00515 	stw	ra,20(sp)
    f2e0:	df000415 	stw	fp,16(sp)
    f2e4:	df000404 	addi	fp,sp,16
    f2e8:	e13ffe15 	stw	r4,-8(fp)
    f2ec:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
    f2f0:	e0bfff17 	ldw	r2,-4(fp)
    f2f4:	10800017 	ldw	r2,0(r2)
    f2f8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    f2fc:	e13ffe17 	ldw	r4,-8(fp)
    f300:	00004c00 	call	4c0 <strlen>
    f304:	10800044 	addi	r2,r2,1
    f308:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f30c:	00000d06 	br	f344 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    f310:	e0bffc17 	ldw	r2,-16(fp)
    f314:	10800217 	ldw	r2,8(r2)
    f318:	e0fffd17 	ldw	r3,-12(fp)
    f31c:	180d883a 	mov	r6,r3
    f320:	e17ffe17 	ldw	r5,-8(fp)
    f324:	1009883a 	mov	r4,r2
    f328:	000f5800 	call	f580 <memcmp>
    f32c:	1000021e 	bne	r2,zero,f338 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    f330:	e0bffc17 	ldw	r2,-16(fp)
    f334:	00000706 	br	f354 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    f338:	e0bffc17 	ldw	r2,-16(fp)
    f33c:	10800017 	ldw	r2,0(r2)
    f340:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f344:	e0fffc17 	ldw	r3,-16(fp)
    f348:	e0bfff17 	ldw	r2,-4(fp)
    f34c:	18bff01e 	bne	r3,r2,f310 <__alt_data_end+0xfffef310>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
    f350:	0005883a 	mov	r2,zero
}
    f354:	e037883a 	mov	sp,fp
    f358:	dfc00117 	ldw	ra,4(sp)
    f35c:	df000017 	ldw	fp,0(sp)
    f360:	dec00204 	addi	sp,sp,8
    f364:	f800283a 	ret

0000f368 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    f368:	defffb04 	addi	sp,sp,-20
    f36c:	dfc00415 	stw	ra,16(sp)
    f370:	df000315 	stw	fp,12(sp)
    f374:	df000304 	addi	fp,sp,12
    f378:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    f37c:	d0a00617 	ldw	r2,-32744(gp)
    f380:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    f384:	00003106 	br	f44c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
    f388:	e0bffd17 	ldw	r2,-12(fp)
    f38c:	10800217 	ldw	r2,8(r2)
    f390:	1009883a 	mov	r4,r2
    f394:	00004c00 	call	4c0 <strlen>
    f398:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    f39c:	e0bffd17 	ldw	r2,-12(fp)
    f3a0:	10c00217 	ldw	r3,8(r2)
    f3a4:	e0bffe17 	ldw	r2,-8(fp)
    f3a8:	10bfffc4 	addi	r2,r2,-1
    f3ac:	1885883a 	add	r2,r3,r2
    f3b0:	10800003 	ldbu	r2,0(r2)
    f3b4:	10803fcc 	andi	r2,r2,255
    f3b8:	1080201c 	xori	r2,r2,128
    f3bc:	10bfe004 	addi	r2,r2,-128
    f3c0:	10800bd8 	cmpnei	r2,r2,47
    f3c4:	1000031e 	bne	r2,zero,f3d4 <alt_find_file+0x6c>
    {
      len -= 1;
    f3c8:	e0bffe17 	ldw	r2,-8(fp)
    f3cc:	10bfffc4 	addi	r2,r2,-1
    f3d0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    f3d4:	e0bffe17 	ldw	r2,-8(fp)
    f3d8:	e0ffff17 	ldw	r3,-4(fp)
    f3dc:	1885883a 	add	r2,r3,r2
    f3e0:	10800003 	ldbu	r2,0(r2)
    f3e4:	10803fcc 	andi	r2,r2,255
    f3e8:	1080201c 	xori	r2,r2,128
    f3ec:	10bfe004 	addi	r2,r2,-128
    f3f0:	10800be0 	cmpeqi	r2,r2,47
    f3f4:	1000081e 	bne	r2,zero,f418 <alt_find_file+0xb0>
    f3f8:	e0bffe17 	ldw	r2,-8(fp)
    f3fc:	e0ffff17 	ldw	r3,-4(fp)
    f400:	1885883a 	add	r2,r3,r2
    f404:	10800003 	ldbu	r2,0(r2)
    f408:	10803fcc 	andi	r2,r2,255
    f40c:	1080201c 	xori	r2,r2,128
    f410:	10bfe004 	addi	r2,r2,-128
    f414:	10000a1e 	bne	r2,zero,f440 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    f418:	e0bffd17 	ldw	r2,-12(fp)
    f41c:	10800217 	ldw	r2,8(r2)
    f420:	e0fffe17 	ldw	r3,-8(fp)
    f424:	180d883a 	mov	r6,r3
    f428:	e17fff17 	ldw	r5,-4(fp)
    f42c:	1009883a 	mov	r4,r2
    f430:	000f5800 	call	f580 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    f434:	1000021e 	bne	r2,zero,f440 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
    f438:	e0bffd17 	ldw	r2,-12(fp)
    f43c:	00000706 	br	f45c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
    f440:	e0bffd17 	ldw	r2,-12(fp)
    f444:	10800017 	ldw	r2,0(r2)
    f448:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    f44c:	e0fffd17 	ldw	r3,-12(fp)
    f450:	d0a00604 	addi	r2,gp,-32744
    f454:	18bfcc1e 	bne	r3,r2,f388 <__alt_data_end+0xfffef388>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
    f458:	0005883a 	mov	r2,zero
}
    f45c:	e037883a 	mov	sp,fp
    f460:	dfc00117 	ldw	ra,4(sp)
    f464:	df000017 	ldw	fp,0(sp)
    f468:	dec00204 	addi	sp,sp,8
    f46c:	f800283a 	ret

0000f470 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    f470:	defffa04 	addi	sp,sp,-24
    f474:	dfc00515 	stw	ra,20(sp)
    f478:	df000415 	stw	fp,16(sp)
    f47c:	dc000315 	stw	r16,12(sp)
    f480:	df000404 	addi	fp,sp,16
    f484:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
    f488:	00bffa04 	movi	r2,-24
    f48c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f490:	e03ffc15 	stw	zero,-16(fp)
    f494:	00001d06 	br	f50c <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
    f498:	04000074 	movhi	r16,1
    f49c:	84012b04 	addi	r16,r16,1196
    f4a0:	e0bffc17 	ldw	r2,-16(fp)
    f4a4:	01400304 	movi	r5,12
    f4a8:	1009883a 	mov	r4,r2
    f4ac:	000a9f40 	call	a9f4 <__mulsi3>
    f4b0:	8085883a 	add	r2,r16,r2
    f4b4:	10800017 	ldw	r2,0(r2)
    f4b8:	1000111e 	bne	r2,zero,f500 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
    f4bc:	04000074 	movhi	r16,1
    f4c0:	84012b04 	addi	r16,r16,1196
    f4c4:	e0bffc17 	ldw	r2,-16(fp)
    f4c8:	01400304 	movi	r5,12
    f4cc:	1009883a 	mov	r4,r2
    f4d0:	000a9f40 	call	a9f4 <__mulsi3>
    f4d4:	8085883a 	add	r2,r16,r2
    f4d8:	e0fffe17 	ldw	r3,-8(fp)
    f4dc:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
    f4e0:	d0e00a17 	ldw	r3,-32728(gp)
    f4e4:	e0bffc17 	ldw	r2,-16(fp)
    f4e8:	1880020e 	bge	r3,r2,f4f4 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
    f4ec:	e0bffc17 	ldw	r2,-16(fp)
    f4f0:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
    f4f4:	e0bffc17 	ldw	r2,-16(fp)
    f4f8:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
    f4fc:	00000606 	br	f518 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f500:	e0bffc17 	ldw	r2,-16(fp)
    f504:	10800044 	addi	r2,r2,1
    f508:	e0bffc15 	stw	r2,-16(fp)
    f50c:	e0bffc17 	ldw	r2,-16(fp)
    f510:	10800810 	cmplti	r2,r2,32
    f514:	103fe01e 	bne	r2,zero,f498 <__alt_data_end+0xfffef498>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    f518:	e0bffd17 	ldw	r2,-12(fp)
}
    f51c:	e6ffff04 	addi	sp,fp,-4
    f520:	dfc00217 	ldw	ra,8(sp)
    f524:	df000117 	ldw	fp,4(sp)
    f528:	dc000017 	ldw	r16,0(sp)
    f52c:	dec00304 	addi	sp,sp,12
    f530:	f800283a 	ret

0000f534 <atexit>:
    f534:	200b883a 	mov	r5,r4
    f538:	000f883a 	mov	r7,zero
    f53c:	000d883a 	mov	r6,zero
    f540:	0009883a 	mov	r4,zero
    f544:	000f5fc1 	jmpi	f5fc <__register_exitproc>

0000f548 <exit>:
    f548:	defffe04 	addi	sp,sp,-8
    f54c:	000b883a 	mov	r5,zero
    f550:	dc000015 	stw	r16,0(sp)
    f554:	dfc00115 	stw	ra,4(sp)
    f558:	2021883a 	mov	r16,r4
    f55c:	000f7140 	call	f714 <__call_exitprocs>
    f560:	00800074 	movhi	r2,1
    f564:	1085a304 	addi	r2,r2,5772
    f568:	11000017 	ldw	r4,0(r2)
    f56c:	20800f17 	ldw	r2,60(r4)
    f570:	10000126 	beq	r2,zero,f578 <exit+0x30>
    f574:	103ee83a 	callr	r2
    f578:	8009883a 	mov	r4,r16
    f57c:	000f8940 	call	f894 <_exit>

0000f580 <memcmp>:
    f580:	01c000c4 	movi	r7,3
    f584:	3980192e 	bgeu	r7,r6,f5ec <memcmp+0x6c>
    f588:	2144b03a 	or	r2,r4,r5
    f58c:	11c4703a 	and	r2,r2,r7
    f590:	10000f26 	beq	r2,zero,f5d0 <memcmp+0x50>
    f594:	20800003 	ldbu	r2,0(r4)
    f598:	28c00003 	ldbu	r3,0(r5)
    f59c:	10c0151e 	bne	r2,r3,f5f4 <memcmp+0x74>
    f5a0:	31bfff84 	addi	r6,r6,-2
    f5a4:	01ffffc4 	movi	r7,-1
    f5a8:	00000406 	br	f5bc <memcmp+0x3c>
    f5ac:	20800003 	ldbu	r2,0(r4)
    f5b0:	28c00003 	ldbu	r3,0(r5)
    f5b4:	31bfffc4 	addi	r6,r6,-1
    f5b8:	10c00e1e 	bne	r2,r3,f5f4 <memcmp+0x74>
    f5bc:	21000044 	addi	r4,r4,1
    f5c0:	29400044 	addi	r5,r5,1
    f5c4:	31fff91e 	bne	r6,r7,f5ac <__alt_data_end+0xfffef5ac>
    f5c8:	0005883a 	mov	r2,zero
    f5cc:	f800283a 	ret
    f5d0:	20c00017 	ldw	r3,0(r4)
    f5d4:	28800017 	ldw	r2,0(r5)
    f5d8:	18bfee1e 	bne	r3,r2,f594 <__alt_data_end+0xfffef594>
    f5dc:	31bfff04 	addi	r6,r6,-4
    f5e0:	21000104 	addi	r4,r4,4
    f5e4:	29400104 	addi	r5,r5,4
    f5e8:	39bff936 	bltu	r7,r6,f5d0 <__alt_data_end+0xfffef5d0>
    f5ec:	303fe91e 	bne	r6,zero,f594 <__alt_data_end+0xfffef594>
    f5f0:	003ff506 	br	f5c8 <__alt_data_end+0xfffef5c8>
    f5f4:	10c5c83a 	sub	r2,r2,r3
    f5f8:	f800283a 	ret

0000f5fc <__register_exitproc>:
    f5fc:	defffa04 	addi	sp,sp,-24
    f600:	dc000315 	stw	r16,12(sp)
    f604:	04000074 	movhi	r16,1
    f608:	8405a304 	addi	r16,r16,5772
    f60c:	80c00017 	ldw	r3,0(r16)
    f610:	dc400415 	stw	r17,16(sp)
    f614:	dfc00515 	stw	ra,20(sp)
    f618:	18805217 	ldw	r2,328(r3)
    f61c:	2023883a 	mov	r17,r4
    f620:	10003726 	beq	r2,zero,f700 <__register_exitproc+0x104>
    f624:	10c00117 	ldw	r3,4(r2)
    f628:	010007c4 	movi	r4,31
    f62c:	20c00e16 	blt	r4,r3,f668 <__register_exitproc+0x6c>
    f630:	1a000044 	addi	r8,r3,1
    f634:	8800221e 	bne	r17,zero,f6c0 <__register_exitproc+0xc4>
    f638:	18c00084 	addi	r3,r3,2
    f63c:	18c7883a 	add	r3,r3,r3
    f640:	18c7883a 	add	r3,r3,r3
    f644:	12000115 	stw	r8,4(r2)
    f648:	10c7883a 	add	r3,r2,r3
    f64c:	19400015 	stw	r5,0(r3)
    f650:	0005883a 	mov	r2,zero
    f654:	dfc00517 	ldw	ra,20(sp)
    f658:	dc400417 	ldw	r17,16(sp)
    f65c:	dc000317 	ldw	r16,12(sp)
    f660:	dec00604 	addi	sp,sp,24
    f664:	f800283a 	ret
    f668:	00800034 	movhi	r2,0
    f66c:	10800004 	addi	r2,r2,0
    f670:	10002626 	beq	r2,zero,f70c <__register_exitproc+0x110>
    f674:	01006404 	movi	r4,400
    f678:	d9400015 	stw	r5,0(sp)
    f67c:	d9800115 	stw	r6,4(sp)
    f680:	d9c00215 	stw	r7,8(sp)
    f684:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
    f688:	d9400017 	ldw	r5,0(sp)
    f68c:	d9800117 	ldw	r6,4(sp)
    f690:	d9c00217 	ldw	r7,8(sp)
    f694:	10001d26 	beq	r2,zero,f70c <__register_exitproc+0x110>
    f698:	81000017 	ldw	r4,0(r16)
    f69c:	10000115 	stw	zero,4(r2)
    f6a0:	02000044 	movi	r8,1
    f6a4:	22405217 	ldw	r9,328(r4)
    f6a8:	0007883a 	mov	r3,zero
    f6ac:	12400015 	stw	r9,0(r2)
    f6b0:	20805215 	stw	r2,328(r4)
    f6b4:	10006215 	stw	zero,392(r2)
    f6b8:	10006315 	stw	zero,396(r2)
    f6bc:	883fde26 	beq	r17,zero,f638 <__alt_data_end+0xfffef638>
    f6c0:	18c9883a 	add	r4,r3,r3
    f6c4:	2109883a 	add	r4,r4,r4
    f6c8:	1109883a 	add	r4,r2,r4
    f6cc:	21802215 	stw	r6,136(r4)
    f6d0:	01800044 	movi	r6,1
    f6d4:	12406217 	ldw	r9,392(r2)
    f6d8:	30cc983a 	sll	r6,r6,r3
    f6dc:	4992b03a 	or	r9,r9,r6
    f6e0:	12406215 	stw	r9,392(r2)
    f6e4:	21c04215 	stw	r7,264(r4)
    f6e8:	01000084 	movi	r4,2
    f6ec:	893fd21e 	bne	r17,r4,f638 <__alt_data_end+0xfffef638>
    f6f0:	11006317 	ldw	r4,396(r2)
    f6f4:	218cb03a 	or	r6,r4,r6
    f6f8:	11806315 	stw	r6,396(r2)
    f6fc:	003fce06 	br	f638 <__alt_data_end+0xfffef638>
    f700:	18805304 	addi	r2,r3,332
    f704:	18805215 	stw	r2,328(r3)
    f708:	003fc606 	br	f624 <__alt_data_end+0xfffef624>
    f70c:	00bfffc4 	movi	r2,-1
    f710:	003fd006 	br	f654 <__alt_data_end+0xfffef654>

0000f714 <__call_exitprocs>:
    f714:	defff504 	addi	sp,sp,-44
    f718:	df000915 	stw	fp,36(sp)
    f71c:	dd400615 	stw	r21,24(sp)
    f720:	dc800315 	stw	r18,12(sp)
    f724:	dfc00a15 	stw	ra,40(sp)
    f728:	ddc00815 	stw	r23,32(sp)
    f72c:	dd800715 	stw	r22,28(sp)
    f730:	dd000515 	stw	r20,20(sp)
    f734:	dcc00415 	stw	r19,16(sp)
    f738:	dc400215 	stw	r17,8(sp)
    f73c:	dc000115 	stw	r16,4(sp)
    f740:	d9000015 	stw	r4,0(sp)
    f744:	2839883a 	mov	fp,r5
    f748:	04800044 	movi	r18,1
    f74c:	057fffc4 	movi	r21,-1
    f750:	00800074 	movhi	r2,1
    f754:	1085a304 	addi	r2,r2,5772
    f758:	12000017 	ldw	r8,0(r2)
    f75c:	45005217 	ldw	r20,328(r8)
    f760:	44c05204 	addi	r19,r8,328
    f764:	a0001c26 	beq	r20,zero,f7d8 <__call_exitprocs+0xc4>
    f768:	a0800117 	ldw	r2,4(r20)
    f76c:	15ffffc4 	addi	r23,r2,-1
    f770:	b8000d16 	blt	r23,zero,f7a8 <__call_exitprocs+0x94>
    f774:	14000044 	addi	r16,r2,1
    f778:	8421883a 	add	r16,r16,r16
    f77c:	8421883a 	add	r16,r16,r16
    f780:	84402004 	addi	r17,r16,128
    f784:	a463883a 	add	r17,r20,r17
    f788:	a421883a 	add	r16,r20,r16
    f78c:	e0001e26 	beq	fp,zero,f808 <__call_exitprocs+0xf4>
    f790:	80804017 	ldw	r2,256(r16)
    f794:	e0801c26 	beq	fp,r2,f808 <__call_exitprocs+0xf4>
    f798:	bdffffc4 	addi	r23,r23,-1
    f79c:	843fff04 	addi	r16,r16,-4
    f7a0:	8c7fff04 	addi	r17,r17,-4
    f7a4:	bd7ff91e 	bne	r23,r21,f78c <__alt_data_end+0xfffef78c>
    f7a8:	00800034 	movhi	r2,0
    f7ac:	10800004 	addi	r2,r2,0
    f7b0:	10000926 	beq	r2,zero,f7d8 <__call_exitprocs+0xc4>
    f7b4:	a0800117 	ldw	r2,4(r20)
    f7b8:	1000301e 	bne	r2,zero,f87c <__call_exitprocs+0x168>
    f7bc:	a0800017 	ldw	r2,0(r20)
    f7c0:	10003226 	beq	r2,zero,f88c <__call_exitprocs+0x178>
    f7c4:	a009883a 	mov	r4,r20
    f7c8:	98800015 	stw	r2,0(r19)
    f7cc:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
    f7d0:	9d000017 	ldw	r20,0(r19)
    f7d4:	a03fe41e 	bne	r20,zero,f768 <__alt_data_end+0xfffef768>
    f7d8:	dfc00a17 	ldw	ra,40(sp)
    f7dc:	df000917 	ldw	fp,36(sp)
    f7e0:	ddc00817 	ldw	r23,32(sp)
    f7e4:	dd800717 	ldw	r22,28(sp)
    f7e8:	dd400617 	ldw	r21,24(sp)
    f7ec:	dd000517 	ldw	r20,20(sp)
    f7f0:	dcc00417 	ldw	r19,16(sp)
    f7f4:	dc800317 	ldw	r18,12(sp)
    f7f8:	dc400217 	ldw	r17,8(sp)
    f7fc:	dc000117 	ldw	r16,4(sp)
    f800:	dec00b04 	addi	sp,sp,44
    f804:	f800283a 	ret
    f808:	a0800117 	ldw	r2,4(r20)
    f80c:	80c00017 	ldw	r3,0(r16)
    f810:	10bfffc4 	addi	r2,r2,-1
    f814:	15c01426 	beq	r2,r23,f868 <__call_exitprocs+0x154>
    f818:	80000015 	stw	zero,0(r16)
    f81c:	183fde26 	beq	r3,zero,f798 <__alt_data_end+0xfffef798>
    f820:	95c8983a 	sll	r4,r18,r23
    f824:	a0806217 	ldw	r2,392(r20)
    f828:	a5800117 	ldw	r22,4(r20)
    f82c:	2084703a 	and	r2,r4,r2
    f830:	10000b26 	beq	r2,zero,f860 <__call_exitprocs+0x14c>
    f834:	a0806317 	ldw	r2,396(r20)
    f838:	2088703a 	and	r4,r4,r2
    f83c:	20000c1e 	bne	r4,zero,f870 <__call_exitprocs+0x15c>
    f840:	89400017 	ldw	r5,0(r17)
    f844:	d9000017 	ldw	r4,0(sp)
    f848:	183ee83a 	callr	r3
    f84c:	a0800117 	ldw	r2,4(r20)
    f850:	15bfbf1e 	bne	r2,r22,f750 <__alt_data_end+0xfffef750>
    f854:	98800017 	ldw	r2,0(r19)
    f858:	153fcf26 	beq	r2,r20,f798 <__alt_data_end+0xfffef798>
    f85c:	003fbc06 	br	f750 <__alt_data_end+0xfffef750>
    f860:	183ee83a 	callr	r3
    f864:	003ff906 	br	f84c <__alt_data_end+0xfffef84c>
    f868:	a5c00115 	stw	r23,4(r20)
    f86c:	003feb06 	br	f81c <__alt_data_end+0xfffef81c>
    f870:	89000017 	ldw	r4,0(r17)
    f874:	183ee83a 	callr	r3
    f878:	003ff406 	br	f84c <__alt_data_end+0xfffef84c>
    f87c:	a0800017 	ldw	r2,0(r20)
    f880:	a027883a 	mov	r19,r20
    f884:	1029883a 	mov	r20,r2
    f888:	003fb606 	br	f764 <__alt_data_end+0xfffef764>
    f88c:	0005883a 	mov	r2,zero
    f890:	003ffb06 	br	f880 <__alt_data_end+0xfffef880>

0000f894 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    f894:	defffd04 	addi	sp,sp,-12
    f898:	df000215 	stw	fp,8(sp)
    f89c:	df000204 	addi	fp,sp,8
    f8a0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
    f8a4:	0001883a 	nop
    f8a8:	e0bfff17 	ldw	r2,-4(fp)
    f8ac:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
    f8b0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    f8b4:	10000226 	beq	r2,zero,f8c0 <_exit+0x2c>
    ALT_SIM_FAIL();
    f8b8:	002af070 	cmpltui	zero,zero,43969
    f8bc:	00000106 	br	f8c4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
    f8c0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
    f8c4:	003fff06 	br	f8c4 <__alt_data_end+0xfffef8c4>
